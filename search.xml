<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>grid网格布局学习(三)</title>
      <link href="/2023/05/28/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%89)/"/>
      <url>/2023/05/28/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%89)/</url>
      
        <content type="html"><![CDATA[<h3 id="这一片文章把剩下的知识讲完，也就是grid中项目（子元素）的属性。"><a href="#这一片文章把剩下的知识讲完，也就是grid中项目（子元素）的属性。" class="headerlink" title="这一片文章把剩下的知识讲完，也就是grid中项目（子元素）的属性。"></a>这一片文章把剩下的知识讲完，也就是grid中项目（子元素）的属性。</h3><h3 id="Grid-项目属性"><a href="#Grid-项目属性" class="headerlink" title="Grid 项目属性"></a>Grid 项目属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-column-start</span></span><br><span class="line"><span class="attribute">grid-column-end</span></span><br><span class="line"><span class="attribute">grid-row-start</span></span><br><span class="line"><span class="attribute">grid-row-end</span></span><br><span class="line"><span class="attribute">grid-column</span></span><br><span class="line"><span class="attribute">grid-row</span></span><br><span class="line"><span class="attribute">grid-area</span></span><br><span class="line">justify-self</span><br><span class="line"><span class="attribute">align-self</span></span><br><span class="line">place-self</span><br></pre></td></tr></table></figure><h4 id="1、grid-column-start、grid-column-end-和-grid-row-start、grid-row-end-属性"><a href="#1、grid-column-start、grid-column-end-和-grid-row-start、grid-row-end-属性" class="headerlink" title="1、grid-column-start、grid-column-end 和 grid-row-start、grid-row-end 属性"></a>1、grid-column-start、grid-column-end 和 grid-row-start、grid-row-end 属性</h4><p>指定项目的开始的网格线和结束的网格线。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-rows</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.item1</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">48</span>, <span class="number">201</span>, <span class="number">137</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-column-start</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-column-end</span>: <span class="number">3</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item item1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%89).assets/p1.png"></p><p>我们也可以使用网格线名字：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.grid-container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: [col1] <span class="number">100px</span> [col2] <span class="number">100px</span> [col3] <span class="number">100px</span> [col4];</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: [row1] <span class="number">100px</span> [row2] <span class="number">100px</span> [row3] <span class="number">100px</span> [row4];</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item1</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">48</span>, <span class="number">201</span>, <span class="number">137</span>);</span><br><span class="line">  <span class="attribute">grid-column-start</span>: col1;</span><br><span class="line">  <span class="attribute">grid-column-end</span>: col3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="span-关键字"><a href="#span-关键字" class="headerlink" title="span 关键字"></a>span 关键字</h4><p>表示跨越多少个网格。</p><p>上述例子可以将 <code>grid-column-start: 1; grid-column-end: 3;</code><br>替换成：<code>grid-column-start: span 2;</code> ，效果是一样的。</p><h4 id="2、grid-column、grid-row-属性"><a href="#2、grid-column、grid-row-属性" class="headerlink" title="2、grid-column、grid-row 属性"></a>2、grid-column、grid-row 属性</h4><p>grid-column 属性是 grid-column-start 和 grid-column-end 的简写，<br>grid-row 属性是 grid-row-start 和 grid-row-end 的简写。</p><p>grid-column: 1&#x2F;3; 相当于 grid-column-start: 1; grid-column-end: 3;<br>grid-column: 1&#x2F;3; 也可以写成 grid-column: 1&#x2F;span 2; ，表示从第一条竖线开始，跨越两个单元格。</p><h4 id="3、grid-area-属性"><a href="#3、grid-area-属性" class="headerlink" title="3、grid-area 属性"></a>3、grid-area 属性</h4><p>用于指定项目放置在哪一个区域，前面说过它一般用来和<code>grid-template-areas</code> 属性配合使用，使用这两个属性，我们可以很简单地实现文章最开始展示的那个案例。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.item1</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-area</span>: header;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">237</span>, <span class="number">148</span>, <span class="number">170</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.item2</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-area</span>: menu;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">186</span>, <span class="number">215</span>, <span class="number">133</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.item3</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-area</span>: main;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">109</span>, <span class="number">109</span>, <span class="number">228</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.item4</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-area</span>: right;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">229</span>, <span class="number">105</span>, <span class="number">194</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.item5</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-area</span>: footer;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">63</span>, <span class="number">207</span>, <span class="number">233</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-areas</span>:</span></span><br><span class="line"><span class="language-css">        <span class="string">&#x27;header header header header header header&#x27;</span></span></span><br><span class="line"><span class="language-css">        <span class="string">&#x27;menu main main main main right&#x27;</span></span></span><br><span class="line"><span class="language-css">        <span class="string">&#x27;menu footer footer footer footer footer&#x27;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-gap</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#eff3f6</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span>&gt;<span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item1&quot;</span>&gt;</span>Header<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item2&quot;</span>&gt;</span>Menu<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item3&quot;</span>&gt;</span>Main<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item4&quot;</span>&gt;</span>Right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item5&quot;</span>&gt;</span>Footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%89).assets/p2.png"></p><p>此外，<code>grid-area</code> 属性还可用作 <code>grid-row-start</code>、<code>grid-column-start</code>、<code>grid-row-end</code>、<code>grid-column-end</code> 简写。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-area</span>: grid-row-start / grid-column-start / grid-row-end / grid-column-end;</span><br></pre></td></tr></table></figure><h4 id="4、justify-self、align-self、place-self-属性"><a href="#4、justify-self、align-self、place-self-属性" class="headerlink" title="4、justify-self、align-self、place-self 属性"></a>4、justify-self、align-self、place-self 属性</h4><p><code>justify-self</code>、<code>align-self</code> 用于给单个项目设置单元格内容的水平、垂直位置，用法与 <code>justify-items</code> 和 <code>align-items</code> 属性一样。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">place-self: align-self justify-self;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-columns</span>: [col1] <span class="number">100px</span> [col2] <span class="number">100px</span> [col3] <span class="number">100px</span> [col4];</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-rows</span>: [row1] <span class="number">100px</span> [row2] <span class="number">100px</span> [row3] <span class="number">100px</span> [row4];</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.item1</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">48</span>, <span class="number">201</span>, <span class="number">137</span>);</span></span><br><span class="line"><span class="language-css">      justify-self: start;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item item1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%89).assets/p3.png"></p><h3 id="好了，网格布局的知识就到这里了。😁它的功能还是非常强大的，但是想要用好它还是要花费一点功夫的。这里我推荐一个网站，可以很好的帮大家掌握grid布局的知识。点击前往-gt-Gird-Garden，希望大家喜欢我的学习笔记分享！！！-●’◡’●"><a href="#好了，网格布局的知识就到这里了。😁它的功能还是非常强大的，但是想要用好它还是要花费一点功夫的。这里我推荐一个网站，可以很好的帮大家掌握grid布局的知识。点击前往-gt-Gird-Garden，希望大家喜欢我的学习笔记分享！！！-●’◡’●" class="headerlink" title="好了，网格布局的知识就到这里了。😁它的功能还是非常强大的，但是想要用好它还是要花费一点功夫的。这里我推荐一个网站，可以很好的帮大家掌握grid布局的知识。点击前往-&gt;Gird Garden，希望大家喜欢我的学习笔记分享！！！(●’◡’●)"></a>好了，网格布局的知识就到这里了。😁它的功能还是非常强大的，但是想要用好它还是要花费一点功夫的。这里我推荐一个网站，可以很好的帮大家掌握grid布局的知识。点击前往-&gt;<a href="https://cssgridgarden.com/#zh-cn">Gird Garden</a>，希望大家喜欢我的学习笔记分享！！！(●’◡’●)</h3>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grid网格布局学习(二)</title>
      <link href="/2023/05/27/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C)/"/>
      <url>/2023/05/27/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h3 id="这一篇接着上面的文章继续讲grid布局。"><a href="#这一篇接着上面的文章继续讲grid布局。" class="headerlink" title="这一篇接着上面的文章继续讲grid布局。"></a>这一篇接着上面的文章继续讲grid布局。</h3><h4 id="5、grid-auto-flow-属性"><a href="#5、grid-auto-flow-属性" class="headerlink" title="5、grid-auto-flow 属性"></a>5、grid-auto-flow 属性</h4><p>定义项目排列顺序，取值有 row（默认值）、column、row <a href="https://so.csdn.net/so/search?q=dense&spm=1001.2101.3001.7020">dense</a>、column dense。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-rows</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-auto-flow</span>: row;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item item1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item item2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C).assets/p1.png"></p><p><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C).assets/p2.png"></p><p>row dense 表示尽可能排满一行，不出现空格<br>column dense 表示尽可能排满一列，不出现空格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-rows</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.item1</span>,<span class="selector-class">.item2</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-column-start</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-column-end</span>: <span class="number">3</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item item1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item item2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C).assets/p3.png"></p><h4 id="6、justify-items、align-items、place-items-属性"><a href="#6、justify-items、align-items、place-items-属性" class="headerlink" title="6、justify-items、align-items、place-items 属性"></a>6、justify-items、align-items、place-items 属性</h4><p>justify-items 用来设置单元格的内容的水平方向的对齐方式<br>align-items 用来设置单元格的内容的垂直方向的对齐方式</p><p>place-items 是 justify-items 和 align-items 属性的简写。<br>place-items: align-items justify-items; 如果两个值一样，可以只写一个</p><p>justify-items 和 align-items 的取值都是一样的，都有以下取值：<br>start：左对齐<br>end：右对齐<br>center：居中<br>stretch：拉伸，占满单元格的整个宽度（默认值）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-rows</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">      justify-items: start;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C).assets/p4.png"></p><p><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C).assets/p5.png"></p><h4 id="7、justify-content、align-content、place-content-属性"><a href="#7、justify-content、align-content、place-content-属性" class="headerlink" title="7、justify-content、align-content、place-content 属性"></a>7、justify-content、align-content、place-content 属性</h4><p>justify-content 设置整个内容区域在容器内水平方向的对齐方式<br>align-content 设置整个内容区域在容器内垂直方向的对齐方式</p><p>place-content 是 align-content 和 justify-content 的简写，如果两个值一样，可以只写一个。</p><p>justify-content 和 align-content 的取值都是一样的，都有以下取值：<br>start（默认值） 、end 、 center 、space-around 、 space-between 、 space-evenly<br><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C).assets/p6.png"></p><p><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C).assets/p7.png"></p><h4 id="8、grid-auto-columns、grid-auto-rows-属性"><a href="#8、grid-auto-columns、grid-auto-rows-属性" class="headerlink" title="8、grid-auto-columns、grid-auto-rows 属性"></a>8、grid-auto-columns、grid-auto-rows 属性</h4><p><code>grid-auto-columns</code> 给多余的项目设置列宽<br><code>grid-auto-rows</code> 给多余的项目设置行高</p><p>下面我们只设置两行两列，但是我们有6个项目，因此会多出2个项目。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-rows</span>: <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C).assets/p8.png"></p><p><img src="/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C).assets/p9.png"></p><h4 id="9、grid-template、grid-属性"><a href="#9、grid-template、grid-属性" class="headerlink" title="9、grid-template、grid 属性"></a>9、grid-template、grid 属性</h4><p><code>grid-template</code> 属性是 <code>grid-template-columns</code>、<code>grid-template-rows</code> 和 <code>grid-template-areas</code> 简写。</p><p><code>grid</code> 属性是 <code>grid-template-rows</code>、<code>grid-template-columns</code>、<code>grid-template-areas</code>、 <code>grid-auto-rows</code>、<code>grid-auto-columns</code>、<code>grid-auto-flow</code> 的简写。</p><h3 id="今天把容器（父元素）的属性讲完了，还剩下项目（子元素）的属性，明天再讲。希望大家喜欢-😁"><a href="#今天把容器（父元素）的属性讲完了，还剩下项目（子元素）的属性，明天再讲。希望大家喜欢-😁" class="headerlink" title="今天把容器（父元素）的属性讲完了，还剩下项目（子元素）的属性，明天再讲。希望大家喜欢~~😁"></a>今天把容器（父元素）的属性讲完了，还剩下项目（子元素）的属性，明天再讲。希望大家喜欢~~😁</h3>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grid网格布局学习(一)</title>
      <link href="/2023/05/26/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%80)/"/>
      <url>/2023/05/26/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h3 id="Grid布局"><a href="#Grid布局" class="headerlink" title="Grid布局"></a>Grid布局</h3><p><code>gird</code>布局和<code>flex</code>布局的本质区别在于：<code>flex</code>布局是一维布局，一次只能处理一个维度上的布局，也就是行或者列；而<code>grid</code>布局是二维布局，它将容器划分为行和列，形成一个个单元格，然后我们就可以指定我们的 “ 项目 ” 所占的单元格，形成我们想要的布局。</p><h3 id="Grid-容器属性"><a href="#Grid-容器属性" class="headerlink" title="Grid 容器属性"></a>Grid 容器属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">display</span></span><br><span class="line"><span class="attribute">grid-template-rows</span> </span><br><span class="line"><span class="attribute">grid-template-columns</span> </span><br><span class="line"><span class="attribute">row-gap</span></span><br><span class="line"><span class="attribute">column-gap</span> </span><br><span class="line"><span class="attribute">gap</span> </span><br><span class="line"><span class="attribute">grid-template-areas</span> </span><br><span class="line"><span class="attribute">grid-auto-flow</span></span><br><span class="line">justify-items</span><br><span class="line"><span class="attribute">align-items</span></span><br><span class="line">place-items</span><br><span class="line"><span class="attribute">justify-content</span></span><br><span class="line"><span class="attribute">align-content</span></span><br><span class="line">place-<span class="attribute">content</span> </span><br><span class="line"><span class="attribute">grid-auto-columns</span></span><br><span class="line"><span class="attribute">grid-auto-rows</span></span><br><span class="line"><span class="attribute">grid-template</span></span><br><span class="line"><span class="attribute">grid</span></span><br></pre></td></tr></table></figure><h3 id="1、display-属性"><a href="#1、display-属性" class="headerlink" title="1、display 属性"></a>1、display 属性</h3><p><code>display: grid;</code> 生成块级的网格容器<br><code>display: inline-grid;</code> 生成行内的网格容器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: inline-grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-columns</span>: auto auto auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#d1e1ee</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>display: inline-grid;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用 display:grid; 容器是块级元素：</p><p><img src="/2023/05/26/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%80)/Blog-my\source_posts\grid网格布局学习(一)\p1.png"></p><p>使用 display:inline-grid; 容器是行内块元素：</p><p><img src="/2023/05/26/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%80)/Blog-my\source_posts\grid网格布局学习(一)\p2.png"></p><h3 id="2、grid-template-rows-和-grid-template-columns-属性"><a href="#2、grid-template-rows-和-grid-template-columns-属性" class="headerlink" title="2、grid-template-rows 和 grid-template-columns 属性"></a>2、grid-template-rows 和 grid-template-columns 属性</h3><p><code>grid-template-rows</code> 用来定义每一行的高<br><code>grid-template-columns</code> 用来定义每一列的宽</p><p>需要定义几行几列，就写几个值，空格隔开。例如：下面定义了三行三列，每行高50px，每列宽100px.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-rows</span>: <span class="number">50px</span> <span class="number">50px</span> <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/05/26/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%80)/Blog-my\source_posts\grid网格布局学习(一)\p3.png"></p><p>还可以在里面添加网格线的名称：<br><code>grid-template-columns: [col1] 100px [col2] 100px [col3] 100px [col4];</code><br><code>grid-template-rows: [row1] 100px [row2] 100px [row3] 100px [row4];</code></p><h4 id="repeat-方法"><a href="#repeat-方法" class="headerlink" title="repeat 方法"></a>repeat 方法</h4><p>repeat(重复次数，重复值);<br>比如上面的 <code>grid-template-columns: 100px 100px 100px;</code> 可以写成 <code>grid-template-columns: repeat(3,100px);</code></p><p>重复值可以写多个，比如： <code>grid-template-columns: repeat(2,100px 50px 30px);</code> 就相当于 <code>grid-template-columns: 100px 50px 30px 100px 50px 30px;</code></p><h4 id="auto-fill-关键字"><a href="#auto-fill-关键字" class="headerlink" title="auto-fill 关键字"></a>auto-fill 关键字</h4><p>auto-fill 表示自动填充，表示每一行或每一列都尽可能的容纳固定大小的单元格。</p><p>例如：<code>grid-template-columns: repeat(auto-fill ,100px);</code> 表示每一行都尽量容纳100px宽度的单元格。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">510px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">310px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(auto-fill, <span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/05/26/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%80)/Blog-my\source_posts\grid网格布局学习(一)\p4.png"></p><h4 id="fr-关键字"><a href="#fr-关键字" class="headerlink" title="fr 关键字"></a>fr 关键字</h4><p>用来定义各行各列所占的比例。<br>比如：<code>grid-template-rows: 1fr 2fr 3fr;</code> 表示第二行的高度是第一行高度的两倍，第三行的高度是第一行的三倍。</p><p>当然和长度单位混用也是没有问题的：<code>grid-template-rows: 1fr 2fr 50px;</code></p><p>还可以和 repeat 方法结合使用：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">6</span>,<span class="number">1</span>fr);</span><br><span class="line"><span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">6</span>,<span class="number">1</span>fr);</span><br></pre></td></tr></table></figure><p>定义了一个6行6列的网格容器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">510px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">310px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">6</span>,<span class="number">1</span>fr);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">6</span>,<span class="number">1</span>fr);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/05/26/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%80)/Blog-my\source_posts\grid网格布局学习(一)\p5.png"></p><h4 id="auto-关键字"><a href="#auto-关键字" class="headerlink" title="auto 关键字"></a>auto 关键字</h4><p>表示浏览器自动分配宽度和高度，也就是会自动把剩余空间占满。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">510px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">310px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> auto <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">3</span>,<span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/05/26/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%80)/Blog-my\source_posts\grid网格布局学习(一)\p6.png"></p><p>如果我们想要每一行都具有相同高度或者每一列都具有相同宽度，可以将值全部设为auto：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-template-columns</span>: auto auto auto;</span><br><span class="line"><span class="attribute">grid-template-rows</span>: auto auto auto;</span><br></pre></td></tr></table></figure><h4 id="3、row-gap、column-gap-与-gap-属性"><a href="#3、row-gap、column-gap-与-gap-属性" class="headerlink" title="3、row-gap、column-gap 与 gap 属性"></a>3、row-<a href="https://so.csdn.net/so/search?q=gap&spm=1001.2101.3001.7020">gap</a>、column-gap 与 gap 属性</h4><p><code>row-gap</code> 用来定义行与行之间的间距<br><code>column-gap</code> 用来定义列与列之间的间距<br><code>gap</code> 是 <code>row-gap</code> 和 <code>column-gap</code>的缩写</p><p><code>gap: row-gap column-gap;</code> 当两个值相等时，可以只写一个。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.grid-container</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: grid;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">510px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">310px</span>;</span><br><span class="line">      <span class="attribute">grid-template-columns</span>: auto auto auto;</span><br><span class="line">      <span class="attribute">grid-template-rows</span>: auto auto auto;</span><br><span class="line">      <span class="attribute">row-gap</span>: <span class="number">10px</span>;</span><br><span class="line">      <span class="attribute">column-gap</span>: <span class="number">15px</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="4、grid-template-areas-属性"><a href="#4、grid-template-areas-属性" class="headerlink" title="4、grid-template-areas 属性"></a>4、grid-template-areas 属性</h4><p>定义网格区域，一般和项目属性<code>grid-areas</code>配合使用，后面会讲到。</p><p>下面定义了一个4行2列的容器：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-template-areas</span>: <span class="string">&#x27;a b&#x27;</span></span><br><span class="line">                     <span class="string">&#x27;c d&#x27;</span></span><br><span class="line">                     <span class="string">&#x27;e f&#x27;</span></span><br><span class="line">                     <span class="string">&#x27;g h&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">510px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">310px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">grid-template-areas</span>: <span class="string">&#x27;a b&#x27;</span></span></span><br><span class="line"><span class="language-css">                           <span class="string">&#x27;c d&#x27;</span></span></span><br><span class="line"><span class="language-css">                           <span class="string">&#x27;e f&#x27;</span></span></span><br><span class="line"><span class="language-css">                           <span class="string">&#x27;g h&#x27;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.grid-item</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>, <span class="number">143</span>, <span class="number">206</span>, <span class="number">0.8</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grid-item&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/05/26/grid%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E5%AD%A6%E4%B9%A0(%E4%B8%80)/Blog-my\source_posts\grid网格布局学习(一)\p7.png"></p><h3 id="今天先分享4个属性，明天在继续讲解。希望大家喜欢我的学习笔记分享。😎"><a href="#今天先分享4个属性，明天在继续讲解。希望大家喜欢我的学习笔记分享。😎" class="headerlink" title="今天先分享4个属性，明天在继续讲解。希望大家喜欢我的学习笔记分享。😎"></a>今天先分享4个属性，明天在继续讲解。希望大家喜欢我的学习笔记分享。😎</h3>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nrm学习</title>
      <link href="/2023/05/25/&#39;nrm%E5%AD%A6%E4%B9%A0&#39;/"/>
      <url>/2023/05/25/&#39;nrm%E5%AD%A6%E4%B9%A0&#39;/</url>
      
        <content type="html"><![CDATA[<h3 id="1-什么是nrm"><a href="#1-什么是nrm" class="headerlink" title="1.什么是nrm"></a>1.什么是nrm</h3><p>nrm 是一个 npm 源管理器，允许你快速地在 npm源间切换。</p><p>什么意思呢，npm默认情况下是使用npm官方源（使用npm config ls命令可以查看），在国内用这个源肯定是不靠谱的，一般我们都会用淘宝npm源：<a href="https://registry.npm.taobao.org/%EF%BC%8C%E4%BF%AE%E6%94%B9%E6%BA%90%E7%9A%84%E6%96%B9%E5%BC%8F%E4%B9%9F%E5%BE%88%E7%AE%80%E5%8D%95%EF%BC%8C%E5%9C%A8%E7%BB%88%E7%AB%AF%E8%BE%93%E5%85%A5%EF%BC%9A">https://registry.npm.taobao.org/，修改源的方式也很简单，在终端输入：</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm set registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure><p>再npm config ls查看，已经切换成功。</p><p>那么，问题来了，如果哪天你又跑去国外了，淘宝源肯定是用不了的，又要切换回官网源，或者哪天你们公司有自己的私有npm源了，又需要切换成公司的源，这样岂不很麻烦？于是有了nrm。</p><h3 id="2-nrm安装"><a href="#2-nrm安装" class="headerlink" title="2.nrm安装"></a>2.nrm安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nrm</span><br></pre></td></tr></table></figure><h4 id="注意：安装完成后，执行nrm-ls-如果提示找不到命令，则打开nrm安装目录下cli-js-17行，将变量NRMRC的值由path-join-process-env-HOME-‘-nrmrc’-改为path-join-‘HOME’-‘-nrmrc’-之后再次尝试使用-结果正常。"><a href="#注意：安装完成后，执行nrm-ls-如果提示找不到命令，则打开nrm安装目录下cli-js-17行，将变量NRMRC的值由path-join-process-env-HOME-‘-nrmrc’-改为path-join-‘HOME’-‘-nrmrc’-之后再次尝试使用-结果正常。" class="headerlink" title="注意：安装完成后，执行nrm ls,如果提示找不到命令，则打开nrm安装目录下cli.js,17行，将变量NRMRC的值由path.join(process.env.HOME, ‘.nrmrc’);改为path.join(‘HOME’, ‘.nrmrc’); 之后再次尝试使用, 结果正常。"></a>注意：安装完成后，执行nrm ls,如果提示找不到命令，则打开nrm安装目录下cli.js,17行，将变量NRMRC的值由path.join(process.env.HOME, ‘.nrmrc’);改为path.join(‘HOME’, ‘.nrmrc’); 之后再次尝试使用, 结果正常。</h4><h3 id="3-nrm使用"><a href="#3-nrm使用" class="headerlink" title="3.nrm使用"></a>3.nrm使用</h3><h4 id="3-1查看可选源-星号代表当前使用源"><a href="#3-1查看可选源-星号代表当前使用源" class="headerlink" title="3.1查看可选源 星号代表当前使用源"></a><strong>3.1查看可选源 星号代表当前使用源</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm ls</span><br></pre></td></tr></table></figure><h5 id="解决nrm默认npm镜像源没有星号-显示的问题"><a href="#解决nrm默认npm镜像源没有星号-显示的问题" class="headerlink" title="解决nrm默认npm镜像源没有星号*显示的问题:"></a>解决nrm默认npm镜像源没有星号*显示的问题:</h5><p>找到nrm安装路径下的cli.js文件（全局安装一般在<a href="https://so.csdn.net/so/search?q=node&spm=1001.2101.3001.7020">node</a>文件夹的node_modules文件里找），找到onList ()函数里面&amp;&amp;改为|即可。如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> prefix = item【<span class="variable constant_">FIELD_IS_CURRENT</span>】 | <span class="title function_">equalsIgnoreCase</span>(item.<span class="property">registry</span>, cur) ? <span class="string">&#x27;* &#x27;</span> : <span class="string">&#x27; &#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="3-1查看当前源"><a href="#3-1查看当前源" class="headerlink" title="3.1查看当前源"></a><strong>3.1查看当前源</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm current</span><br></pre></td></tr></table></figure><h4 id="3-2-切换源"><a href="#3-2-切换源" class="headerlink" title="3.2 切换源"></a><strong>3.2 切换源</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm use &lt;registry&gt;</span><br></pre></td></tr></table></figure><p>其中，registry为源名。比如：切换为taobao源:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm use taobao</span><br></pre></td></tr></table></figure><h3 id="4-添加源"><a href="#4-添加源" class="headerlink" title="4.添加源"></a>4.添加源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm add &lt;registry&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>其中，registry为源名，url为源地址。</p><p>比如：添加一个公司私有的npm源，源地址为：<a href="http://192.168.22.11:8888/repository/npm-public/%EF%BC%8C%E6%BA%90%E5%90%8D%E4%B8%BAcpm%EF%BC%88%E9%9A%8F%E6%84%8F%E5%8F%96%EF%BC%89%E3%80%82">http://192.168.22.11:8888/repository/npm-public/，源名为cpm（随意取）。</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm add cpm http://192.168.22.11:8888/repository/npm-public/</span><br></pre></td></tr></table></figure><h4 id="5-删除源"><a href="#5-删除源" class="headerlink" title="5.删除源"></a>5.删除源</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm del &lt;registry&gt;</span><br></pre></td></tr></table></figure><p>其中，registry为源名。比如：删除刚才添加的cpm源:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm del cpm</span><br></pre></td></tr></table></figure><h4 id="6-测试源速度"><a href="#6-测试源速度" class="headerlink" title="6.测试源速度"></a>6.测试源速度</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm test &lt;registry&gt;</span><br></pre></td></tr></table></figure><p>其中，registry为源名。比如：测试官方源和淘宝源的响应时间:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm test npm</span><br></pre></td></tr></table></figure><h4 id="7-安装完成，使用nrm-ls-时遇到的问题"><a href="#7-安装完成，使用nrm-ls-时遇到的问题" class="headerlink" title="7.安装完成，使用nrm ls 时遇到的问题"></a>7.安装完成，使用nrm ls 时遇到的问题</h4><p>我在使用中遇到了一个问题，但是查询解决办法时，发现可能会遇到两种问题。现在我来说说解决办法：</p><h4 id="报错一：SyntaxError-Cannot-use-import-statement-outside-a-module"><a href="#报错一：SyntaxError-Cannot-use-import-statement-outside-a-module" class="headerlink" title="报错一：SyntaxError: Cannot use import statement outside a module"></a>报错一：SyntaxError: Cannot use import statement outside a module</h4><p><img src="/nrm%E5%AD%A6%E4%B9%A0.assets/p1.png"></p><p><strong>报错原因：</strong>Node.js版本与<a href="https://so.csdn.net/so/search?q=nrm&spm=1001.2101.3001.7020">nrm</a>中使用的open模块版本不兼容。</p><p><strong>解决方式：</strong>重新安装其他版本的open模块（如：8.4.2）</p><p><strong>命令行中输入：</strong>npm install -g nrm <a href="mailto:&#x6f;&#x70;&#101;&#x6e;&#64;&#56;&#46;&#x34;&#46;&#50;">&#x6f;&#x70;&#101;&#x6e;&#64;&#56;&#46;&#x34;&#46;&#50;</a> –save</p><p>这一种情况是我遇到的，通过安装open模块解决，后面一种情况是否能解决我也不知道。😂</p><h4 id="报错二：Error-ERR-REQUIRE-ESM-Must-use-import-to-load-ES-Module"><a href="#报错二：Error-ERR-REQUIRE-ESM-Must-use-import-to-load-ES-Module" class="headerlink" title="报错二：Error [ERR_REQUIRE_ESM]: Must use import to load ES Module"></a>报错二：<strong>Error [ERR_REQUIRE_ESM]: Must use import to load ES Module</strong></h4><p><img src="/nrm%E5%AD%A6%E4%B9%A0.assets/p2.png"></p><p><strong>报错原因：</strong>Node.js版本过高。</p><p><strong>解决方式：</strong>重新安装其他版本的Node.js（如：12.13.0）</p><p><strong>命令行中输入：</strong><a href="https://so.csdn.net/so/search?q=nvm&spm=1001.2101.3001.7020">nvm</a> install 12.13.0 （此处为nvm：node.js的版本管理工具安装的命令）</p><p>这种情况解决与否，还不知道，如果有遇到的小伙伴可以试试。我自己的node版本为14.17.3，就没有遇到这种情况。</p><h3 id="今天就是分享nrm镜像源管理工具的使用，还是非常方便的，推荐大家使用。好了，后续还会给大家分享更多的好用的工具！！！╰-°▽°-╯"><a href="#今天就是分享nrm镜像源管理工具的使用，还是非常方便的，推荐大家使用。好了，后续还会给大家分享更多的好用的工具！！！╰-°▽°-╯" class="headerlink" title="今天就是分享nrm镜像源管理工具的使用，还是非常方便的，推荐大家使用。好了，后续还会给大家分享更多的好用的工具！！！╰(°▽°)╯"></a>今天就是分享nrm镜像源管理工具的使用，还是非常方便的，推荐大家使用。好了，后续还会给大家分享更多的好用的工具！！！╰(<em>°▽°</em>)╯</h3>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nrm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-study-简单掌握vue</title>
      <link href="/2023/05/24/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E5%85%AD/"/>
      <url>/2023/05/24/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E5%85%AD/</url>
      
        <content type="html"><![CDATA[<h3 id="Vue-props用法详解"><a href="#Vue-props用法详解" class="headerlink" title="Vue props用法详解"></a>Vue props用法详解</h3><h4 id="组件接受的选项之一-props-是-Vue-中非常重要的一个选项。父子组件的关系可以总结为："><a href="#组件接受的选项之一-props-是-Vue-中非常重要的一个选项。父子组件的关系可以总结为：" class="headerlink" title="组件接受的选项之一 props ,是 Vue 中非常重要的一个选项。父子组件的关系可以总结为："></a>组件接受的选项之一 props ,是 Vue 中非常重要的一个选项。父子组件的关系可以总结为：</h4><p><code>props 向下传递, events 向上发送</code>,父组件通过 props 向下传递数据给子组件；子组件通过 events 给父组件发送消息。</p><p>这就是一个简单的组件用法:</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E5%85%AD.assets/p1.png"></p><p>你会看到组件实例的作用域是孤立的。这意味着不能（也不应该）在子组件的模板中直接引用父组件的数据。要让子组件使用父组件的数据，需要通过子组件的 props 选项。</p><h4 id="父组件向子组件传递数据分为两种方式：动态和静态，这里先介绍静态方式。"><a href="#父组件向子组件传递数据分为两种方式：动态和静态，这里先介绍静态方式。" class="headerlink" title="父组件向子组件传递数据分为两种方式：动态和静态，这里先介绍静态方式。"></a>父组件向子组件传递数据分为两种方式：动态和静态，这里先介绍静态方式。</h4><p>子组件要显示的用 props 声明它期望获得的数据,例如:</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E5%85%AD.assets/p2.png"></p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E5%85%AD.assets/p3.png"></p><h4 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a><strong>命名规范</strong></h4><p>对于 props 声明的属性，在父组件的 template 模板中，属性名需要使用中划线写法；</p><p>子组件 props 属性声明时，使用小驼峰或者中划线写法都可以；而子组件的模板使用从父组件传来的变量时，需要使用对应的小驼峰写法。别担心，Vue 能够正确识别出小驼峰和下划线命名法混用的变量，如这里的<code>forChildMsg</code>和<code>for-child-msg</code>是同一值。</p><h4 id="动态-props"><a href="#动态-props" class="headerlink" title="动态 props"></a>动态 props</h4><p>在模板中，要动态地绑定父组件的数据到子组件模板的 props，和绑定 Html 标签特性一样，使用<code>v-bind</code>绑定；</p><p>基于上述静态 props 的代码，这次只需要改动父组件：</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E5%85%AD.assets/p4.png"></p><p>我们就可以动态的改变父组件的 data 的 return 的 parentMessage, 相对应的会被传入子组件中，</p><h4 id="props-验证"><a href="#props-验证" class="headerlink" title="props 验证"></a>props 验证</h4><p>验证传入的 props 参数的数据规格，如果不符合数据规格，Vue 会发出警告。</p><p>能判断的所有种类（也就是 type 值）有：<br>String, Number, Boolean, Function, Object, Array, Symbol等等。</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E5%85%AD.assets/p5.png"></p><p>还可以在 props 定义的数据中加入自定义验证函数，当函数返回 false 时，输出警告。</p><h4 id="单向数据流"><a href="#单向数据流" class="headerlink" title="单向数据流"></a>单向数据流</h4><p>props 是单向绑定的：当父组件的属性变化时，将传导给子组件，但是不会反过来。这是为了防止子组件修改父组件的状态。</p><p>所以不应该在子组件中修改 props 中的值，Vue 会报出警告。</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E5%85%AD.assets/p6.png"></p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E5%85%AD.assets/p7.png"></p><p>这里我们给父组件和子组件都有一个输入框，并且显示出父组件数据和子组件的数据。当我们在父组件的输入框输入新数据时，同步的子组件数据也被修改了；这就是 props 的向子组件传递数据。而当我们修改子组件的输入框时，浏览器的控制台则报出错误警告。</p><h3 id="这篇文章主要讲解一些组件间数据传输的知识，是对上一篇文章的扩展。希望大家多多支持，喜欢我的学习笔记！！！😎"><a href="#这篇文章主要讲解一些组件间数据传输的知识，是对上一篇文章的扩展。希望大家多多支持，喜欢我的学习笔记！！！😎" class="headerlink" title="这篇文章主要讲解一些组件间数据传输的知识，是对上一篇文章的扩展。希望大家多多支持，喜欢我的学习笔记！！！😎"></a>这篇文章主要讲解一些组件间数据传输的知识，是对上一篇文章的扩展。希望大家多多支持，喜欢我的学习笔记！！！😎</h3>]]></content>
      
      
      <categories>
          
          <category> Vue学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-study-简单掌握vue(五)</title>
      <link href="/2023/05/23/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94/"/>
      <url>/2023/05/23/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94/</url>
      
        <content type="html"><![CDATA[<h4 id="上一篇咱们学习了vue的父组件传递消息给子组件-那么这一篇我将教大家如何反过来-由子组件将消息传给父组件-是不是也像父组件传递给子组件那样简单呢"><a href="#上一篇咱们学习了vue的父组件传递消息给子组件-那么这一篇我将教大家如何反过来-由子组件将消息传给父组件-是不是也像父组件传递给子组件那样简单呢" class="headerlink" title="上一篇咱们学习了vue的父组件传递消息给子组件,那么这一篇我将教大家如何反过来,由子组件将消息传给父组件,是不是也像父组件传递给子组件那样简单呢?"></a>上一篇咱们学习了vue的父组件传递消息给子组件,那么这一篇我将教大家如何反过来,由子组件将消息传给父组件,是不是也像父组件传递给子组件那样简单呢?</h4><h4 id="在这里我可以很明确的告诉大家-不是-并不是像一位老父亲那样-说给你就给你-很直接-很简单-通过props-属性定义然后绑定就可以实现了-然而子组件传递数据-这会他不是通过一个内置的属性去传值-而是通过一个内置的方法-this-emit-去绑定我们自定义的一个方法-然后通过这个方法去传值"><a href="#在这里我可以很明确的告诉大家-不是-并不是像一位老父亲那样-说给你就给你-很直接-很简单-通过props-属性定义然后绑定就可以实现了-然而子组件传递数据-这会他不是通过一个内置的属性去传值-而是通过一个内置的方法-this-emit-去绑定我们自定义的一个方法-然后通过这个方法去传值" class="headerlink" title="在这里我可以很明确的告诉大家,不是,并不是像一位老父亲那样, 说给你就给你,很直接,很简单,通过props 属性定义然后绑定就可以实现了, 然而子组件传递数据,这会他不是通过一个内置的属性去传值,而是通过一个内置的方法 this.$emit()去绑定我们自定义的一个方法,然后通过这个方法去传值,"></a>在这里我可以很明确的告诉大家,不是,并不是像一位老父亲那样, 说给你就给你,很直接,很简单,通过props 属性定义然后绑定就可以实现了, 然而子组件传递数据,这会他不是通过一个内置的属性去传值,而是通过一个内置的方法 this.$emit()去绑定我们自定义的一个方法,然后通过这个方法去传值,</h4><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94.assets/p1.png"></p><p>在父组件的标签中自定义一个方法名 例如我这里是pullMessage .这个getMessage 就是一个普通的methods 函数,然后我们在看看子组件的定义:</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94.assets/p2.png"></p><p>同样的我们需要在子组件中定义一个methods 去触发$emit这个函数,可以看到,这个$emit 这个函数传递两个参数,一个是我们在父组件自定义的方法,一个就是你想传递给父组件的数据,ok,现在我们来看看具体的操作, 这是未点击之前的显示的页面:</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94.assets/p3.png"></p><p>显示的是 ‘我是父组件的消息’, 然后接下来,然我们看看点击后的效果 :</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94.assets/p4.png"></p><p>你会看到,页面上的message 改变了,说明我们成功的将组件传递过来的消息替换掉了,同样console打印的也是 ‘我是子组件的消息’:</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94.assets/p5.png"></p><p>是不是也是很简单,虽然没有父传子那样直接,但是也不难, 通过我们的$emit 来绑定自定义事件,就可以实现了。</p><h4 id="接下来给大家讲一讲这个传值-它还可以通过这个事件总线来实现-原理是怎么样的呢-我们学习了这个传值可以通过props-父组件传给子组件-也可以通过自定事件的形式传会给父组件this-emit-‘自定义事件’-’要传递的参数’-但现在呢"><a href="#接下来给大家讲一讲这个传值-它还可以通过这个事件总线来实现-原理是怎么样的呢-我们学习了这个传值可以通过props-父组件传给子组件-也可以通过自定事件的形式传会给父组件this-emit-‘自定义事件’-’要传递的参数’-但现在呢" class="headerlink" title="接下来给大家讲一讲这个传值,它还可以通过这个事件总线来实现,原理是怎么样的呢?我们学习了这个传值可以通过props 父组件传给子组件, 也可以通过自定事件的形式传会给父组件this.$emit(‘自定义事件’,’要传递的参数’) ,但现在呢?"></a>接下来给大家讲一讲这个传值,它还可以通过这个事件总线来实现,原理是怎么样的呢?我们学习了这个传值可以通过props 父组件传给子组件, 也可以通过自定事件的形式传会给父组件this.$emit(‘自定义事件’,’要传递的参数’) ,但现在呢?</h4><h4 id="我们要学习的是-通过第三方来实现的-简单打个比方说-如果说props-和-emit-就好像是公路两边一样-我们要过去另一边-需要走人行天桥-而这个人行天桥就好像是props-很和-emit-一样起到了协助-连通-起桥梁的作用-我们需要天桥才能走到对面-然后我们的事件总线就好先公路的两端-距离太长-所以我们没有办法修一条跟公路一样长的桥-所以我们必须需要像公共交通工具一样的工具载我们到另一端-从而达到我们的目的"><a href="#我们要学习的是-通过第三方来实现的-简单打个比方说-如果说props-和-emit-就好像是公路两边一样-我们要过去另一边-需要走人行天桥-而这个人行天桥就好像是props-很和-emit-一样起到了协助-连通-起桥梁的作用-我们需要天桥才能走到对面-然后我们的事件总线就好先公路的两端-距离太长-所以我们没有办法修一条跟公路一样长的桥-所以我们必须需要像公共交通工具一样的工具载我们到另一端-从而达到我们的目的" class="headerlink" title="我们要学习的是,通过第三方来实现的,简单打个比方说,如果说props 和$emit 就好像是公路两边一样,我们要过去另一边,需要走人行天桥,而这个人行天桥就好像是props 很和$emit 一样起到了协助,连通 起桥梁的作用,我们需要天桥才能走到对面, 然后我们的事件总线就好先公路的两端, 距离太长,所以我们没有办法修一条跟公路一样长的桥,所以我们必须需要像公共交通工具一样的工具载我们到另一端,从而达到我们的目的,"></a>我们要学习的是,通过第三方来实现的,简单打个比方说,如果说props 和$emit 就好像是公路两边一样,我们要过去另一边,需要走人行天桥,而这个人行天桥就好像是props 很和$emit 一样起到了协助,连通 起桥梁的作用,我们需要天桥才能走到对面, 然后我们的事件总线就好先公路的两端, 距离太长,所以我们没有办法修一条跟公路一样长的桥,所以我们必须需要像公共交通工具一样的工具载我们到另一端,从而达到我们的目的,</h4><p>ok 我们先看目录,我准了哪些文件：</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94.assets/p6.png"></p><p>我在view 目录下新创建三个文件夹,beijing.vue shanghai.vue 还有就是bus.js,beijing.vue就是公路的一端,而shanghai.vue就是咱公路的另外一端,bus.js 就是交通工具:</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94.assets/p7.png"></p><p>bus.js 很简单,就是创建多了一个vue实例,作为’交通工具’ 运载,</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94.assets/p8.png"></p><p>beijing.vue 我们可以看到, 就是我们定义了一个方法,然后通过 bus.$emit 去绑定一个自定义的方法,然后传递一个对象,</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94.assets/p9.png"></p><p>同样的我们看到shanghai.vue 中我们用bus.$on 去接收这个自定义方法,也就是说,这里的自定义方法就好像一辆车的车牌号,我们要知道车票号才能接到我们想接的人,所以这里很关键,这个$emit 和 $on 绑定的方法名一定要相同,但是可以随意定义。</p><p>我们看home.vue：</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94.assets/p10.png"></p><p>home.vue就是将两个组件注册, 最终的结果就是:</p><p><img src="/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%94.assets/p11.png"></p><h4 id="这一部分的数据共享比前面稍微难了一点点，但是非常重要，所以还是要学好。后面还有更加强大的vuex能实现这些功能，我们后面再说。"><a href="#这一部分的数据共享比前面稍微难了一点点，但是非常重要，所以还是要学好。后面还有更加强大的vuex能实现这些功能，我们后面再说。" class="headerlink" title="这一部分的数据共享比前面稍微难了一点点，但是非常重要，所以还是要学好。后面还有更加强大的vuex能实现这些功能，我们后面再说。"></a>这一部分的数据共享比前面稍微难了一点点，但是非常重要，所以还是要学好。后面还有更加强大的vuex能实现这些功能，我们后面再说。</h4><h3 id="好了，今天分享到此结束，希望大家喜欢我的博客！！！😊"><a href="#好了，今天分享到此结束，希望大家喜欢我的博客！！！😊" class="headerlink" title="好了，今天分享到此结束，希望大家喜欢我的博客！！！😊"></a>好了，今天分享到此结束，希望大家喜欢我的博客！！！😊</h3>]]></content>
      
      
      <categories>
          
          <category> Vue学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-study-简单掌握vue(四)</title>
      <link href="/2023/05/22/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E5%9B%9B/"/>
      <url>/2023/05/22/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<h3 id="首先我们来学习一下vue-的组件-很简单在vue里一个vue-文件就是一个组件，我们拿-vue-cli-创建的项目的HelloWorld-组件来举例子"><a href="#首先我们来学习一下vue-的组件-很简单在vue里一个vue-文件就是一个组件，我们拿-vue-cli-创建的项目的HelloWorld-组件来举例子" class="headerlink" title="首先我们来学习一下vue 的组件, 很简单在vue里一个vue 文件就是一个组件，我们拿 vue-cli 创建的项目的HelloWorld 组件来举例子,"></a>首先我们来学习一下vue 的组件, 很简单在vue里一个vue 文件就是一个组件，我们拿 vue-cli 创建的项目的HelloWorld 组件来举例子,</h3><h4 id="1-首先创建一个-vue-的文件-HelloWorld-vue，然后我们在父组件中导入-HelloWorld-vue-文件："><a href="#1-首先创建一个-vue-的文件-HelloWorld-vue，然后我们在父组件中导入-HelloWorld-vue-文件：" class="headerlink" title="1.首先创建一个.vue 的文件 HelloWorld.vue，然后我们在父组件中导入 HelloWorld.vue 文件："></a>1.首先创建一个.vue 的文件 HelloWorld.vue，然后我们在父组件中导入 HelloWorld.vue 文件：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import Helloworld from &#x27;@/components/HelloWorld.vue&#x27;</span><br></pre></td></tr></table></figure><p>然后在components 组册成 home.vue 的子组件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">components :&#123;</span><br><span class="line">HelloWorld,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们就可以做home 这个组件中使用这个helloworld 这个子组件了:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;HelloWorld &gt;&lt;/HelloWorld&gt;  //以标签形式使用组件</span><br></pre></td></tr></table></figure><p>不过,根据个人的习惯, 我建议使用组件的时候用 - 链接起来, 这样一看就知道这是组件了,可以这样写 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;hello-world&gt;&lt;/hello-world&gt;</span><br></pre></td></tr></table></figure><h4 id="2-ok-大家可能会问-这个msg-是什么-常用的属性中并没有这个属性-为什么组件要这样写-或者说为什么组件可以这样写-其实这个msg-是自定义属性-当然你也可以写成message-任君喜欢-然后说一下这个msg-有什么作用呢-这msg-就是用来传值-叫做父子传值-用msg-作为桥梁-通过msg-将父组件的data-传递到子组件中去-在这里就是将-‘Welcome-to-your-Vue-js-App-‘-传递给-HelloWorld-这组件"><a href="#2-ok-大家可能会问-这个msg-是什么-常用的属性中并没有这个属性-为什么组件要这样写-或者说为什么组件可以这样写-其实这个msg-是自定义属性-当然你也可以写成message-任君喜欢-然后说一下这个msg-有什么作用呢-这msg-就是用来传值-叫做父子传值-用msg-作为桥梁-通过msg-将父组件的data-传递到子组件中去-在这里就是将-‘Welcome-to-your-Vue-js-App-‘-传递给-HelloWorld-这组件" class="headerlink" title="2.ok 大家可能会问,这个msg 是什么?常用的属性中并没有这个属性, 为什么组件要这样写,或者说为什么组件可以这样写, 其实这个msg 是自定义属性, 当然你也可以写成message ,任君喜欢, 然后说一下这个msg 有什么作用呢? 这msg 就是用来传值, 叫做父子传值,用msg 作为桥梁, 通过msg 将父组件的data 传递到子组件中去, 在这里就是将 ‘Welcome to your Vue.js App ‘, 传递给 HelloWorld 这组件."></a>2.ok 大家可能会问,这个msg 是什么?常用的属性中并没有这个属性, 为什么组件要这样写,或者说为什么组件可以这样写, 其实这个msg 是自定义属性, 当然你也可以写成message ,任君喜欢, 然后说一下这个msg 有什么作用呢? 这msg 就是用来传值, 叫做父子传值,用msg 作为桥梁, 通过msg 将父组件的data 传递到子组件中去, 在这里就是将 ‘Welcome to your Vue.js App ‘, 传递给 HelloWorld 这组件.</h4><p>你会发现子组件多了个props 属性, 这就是用来接收,父组件传过来的值,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">props:&#123;</span><br><span class="line">type: // 表示传过来的数据的类型,</span><br><span class="line">default : // 代表的是默认值</span><br><span class="line">&#125; // 然后常用到两个属性,其他的可以等用到的时候详细的查阅,</span><br></pre></td></tr></table></figure><p>就这样我们就完成了,一个父子组件的传值,在父组件中,导入,注册到component 中, 在标签绑定传值的属性,子组件中用props属性来接收,然后就可以在子组件的template 中展示了.</p><h4 id="3-我不想在同一个html-中将父子组件以及传值呢-是因为我觉得这样很复杂-又要定义template-又要定义这个props-很不直观-在项目中讲述就简单得多了-直观"><a href="#3-我不想在同一个html-中将父子组件以及传值呢-是因为我觉得这样很复杂-又要定义template-又要定义这个props-很不直观-在项目中讲述就简单得多了-直观" class="headerlink" title="3.我不想在同一个html 中将父子组件以及传值呢, 是因为我觉得这样很复杂,又要定义template ,又要定义这个props ,很不直观, 在项目中讲述就简单得多了, 直观."></a>3.我不想在同一个html 中将父子组件以及传值呢, 是因为我觉得这样很复杂,又要定义template ,又要定义这个props ,很不直观, 在项目中讲述就简单得多了, 直观.</h4><p>我们在同一个html上 我们看到 这个定义的HelloWorld 有html 代码, 然后body 中也有html 代码, 很容易混乱, 很不直观,看起来有点让人有点难以理解, 还不如直接在项目中讲解,一个vue 文件就是一个组件, 子组件要配什么,父组件要传递什么,比较明了,简单.</p><p>但是,往往实际应用中我们的数据并不是写死的,而是动态的,这个时候我们就要绑定我们自定义的属性了, :msg &#x3D;’message’ &#x2F;&#x2F; 前面的msg 是作为桥梁传递 数据, 后面的message 是你要传递的真正的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:msg=&#x27;message&#x27;</span><br></pre></td></tr></table></figure><h3 id="好了，今天的分享到此结束。👌我们明天再见，希望大家喜欢！！！"><a href="#好了，今天的分享到此结束。👌我们明天再见，希望大家喜欢！！！" class="headerlink" title="好了，今天的分享到此结束。👌我们明天再见，希望大家喜欢！！！"></a>好了，今天的分享到此结束。👌我们明天再见，希望大家喜欢！！！</h3>]]></content>
      
      
      <categories>
          
          <category> Vue学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-study-简单掌握vue(三)</title>
      <link href="/2023/05/21/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%B8%89/"/>
      <url>/2023/05/21/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<h4 id="前两篇-我们讲到了vue-的一些简单的语法和概念-接下来我会带大家结合vue-项目的形式去学习更多vue-的相关知识"><a href="#前两篇-我们讲到了vue-的一些简单的语法和概念-接下来我会带大家结合vue-项目的形式去学习更多vue-的相关知识" class="headerlink" title="前两篇,我们讲到了vue 的一些简单的语法和概念,接下来我会带大家结合vue 项目的形式去学习更多vue 的相关知识,"></a>前两篇,我们讲到了vue 的一些简单的语法和概念,接下来我会带大家结合vue 项目的形式去学习更多vue 的相关知识,</h4><h4 id="首先你要确保你的电脑上已经安装了node-js-如果还没有的话-请自行到官网进行下载安装-都是很简单的事情-就是傻瓜式的点击安装-另外可能你需要注意的是要配置环境变量-不会的-可以自行百度-很多的教程-在这里我们主要讲-如果利用vue进行项目的开发-所以我假设你会了-并且已经准备好了相关环境"><a href="#首先你要确保你的电脑上已经安装了node-js-如果还没有的话-请自行到官网进行下载安装-都是很简单的事情-就是傻瓜式的点击安装-另外可能你需要注意的是要配置环境变量-不会的-可以自行百度-很多的教程-在这里我们主要讲-如果利用vue进行项目的开发-所以我假设你会了-并且已经准备好了相关环境" class="headerlink" title="首先你要确保你的电脑上已经安装了node.js ,如果还没有的话,请自行到官网进行下载安装,都是很简单的事情,就是傻瓜式的点击安装,另外可能你需要注意的是要配置环境变量,不会的,可以自行百度,很多的教程,在这里我们主要讲,如果利用vue进行项目的开发,所以我假设你会了,并且已经准备好了相关环境."></a>首先你要确保你的电脑上已经安装了node.js ,如果还没有的话,请自行到官网进行下载安装,都是很简单的事情,就是傻瓜式的点击安装,另外可能你需要注意的是要配置环境变量,不会的,可以自行百度,很多的教程,在这里我们主要讲,如果利用vue进行项目的开发,所以我假设你会了,并且已经准备好了相关环境.</h4><h4 id="然后我们新建一个文件夹-然后用-VScode打开-这里推荐vscode-好用又方便-打开控制台-快捷键-ctrl-96-进入到根目录-首先我们全局安装-vue-cli-这里安装vue-cli3-最新版-执行命令-npm-install-g-vue-x2F-cli："><a href="#然后我们新建一个文件夹-然后用-VScode打开-这里推荐vscode-好用又方便-打开控制台-快捷键-ctrl-96-进入到根目录-首先我们全局安装-vue-cli-这里安装vue-cli3-最新版-执行命令-npm-install-g-vue-x2F-cli：" class="headerlink" title="然后我们新建一个文件夹,然后用 VScode打开 (这里推荐vscode,好用又方便),打开控制台 快捷键 ctrl + &#96; 进入到根目录,首先我们全局安装 vue-cli (这里安装vue-cli3,最新版) 执行命令 npm install -g @vue&#x2F;cli："></a>然后我们新建一个文件夹,然后用 VScode打开 (这里推荐vscode,好用又方便),打开控制台 快捷键 ctrl + &#96; 进入到根目录,首先我们全局安装 vue-cli (这里安装vue-cli3,最新版) 执行命令 npm install -g @vue&#x2F;cli：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><h4 id="等安装完了之后我们验证一下是否安装成功-vue-V-如果成功会显示vue-的版本号"><a href="#等安装完了之后我们验证一下是否安装成功-vue-V-如果成功会显示vue-的版本号" class="headerlink" title="等安装完了之后我们验证一下是否安装成功, vue -V 如果成功会显示vue 的版本号:"></a>等安装完了之后我们验证一下是否安装成功, vue -V 如果成功会显示vue 的版本号:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue -V</span><br></pre></td></tr></table></figure><h4 id="然后执行命令-vue-create-web-livall-我这里是以web-livall-为项目的名称-所以如果你要建一个自定义的项目-你可以vue-create-your-project"><a href="#然后执行命令-vue-create-web-livall-我这里是以web-livall-为项目的名称-所以如果你要建一个自定义的项目-你可以vue-create-your-project" class="headerlink" title="然后执行命令 vue create web-livall 我这里是以web-livall 为项目的名称, 所以如果你要建一个自定义的项目, 你可以vue create your-project:"></a>然后执行命令 vue create web-livall 我这里是以web-livall 为项目的名称, 所以如果你要建一个自定义的项目, 你可以vue create your-project:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create 项目名称</span><br></pre></td></tr></table></figure><h4 id="然后-会出现-default-babel-eslint-和-Manually-select-features"><a href="#然后-会出现-default-babel-eslint-和-Manually-select-features" class="headerlink" title="然后 会出现 default (babel,eslint) 和 Manually select features"></a>然后 会出现 default (babel,eslint) 和 Manually select features</h4><ul><li>default 表示的是vue 提供的默认的 配置, 对于初学者,我的建议是选择default 然后一直回车执行下去,</li><li>Manually select features 是手动根据自己的爱好习惯来选择配置,这里不建议,所以先跳过,</li><li>最后会提示你, Save this as a preset for future projects? (y&#x2F;N) n 选择no</li><li>然后等待安装, 完了之后,就可以直接进入项目,让项目在本地跑起来,</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd my-project // 进入到项目根目录</span><br><span class="line"></span><br><span class="line">npm run serve // 启动项目</span><br></pre></td></tr></table></figure><h4 id="点击打开vscode-的文件夹-这是vue-创建的最简单的项目结构-接下来我会给大家建议-项目如何分类文件名-这不是固定的写法-但-是更多开发者的共同选择"><a href="#点击打开vscode-的文件夹-这是vue-创建的最简单的项目结构-接下来我会给大家建议-项目如何分类文件名-这不是固定的写法-但-是更多开发者的共同选择" class="headerlink" title="点击打开vscode 的文件夹,这是vue 创建的最简单的项目结构,接下来我会给大家建议,项目如何分类文件名,这不是固定的写法,但,是更多开发者的共同选择."></a>点击打开vscode 的文件夹,这是vue 创建的最简单的项目结构,接下来我会给大家建议,项目如何分类文件名,这不是固定的写法,但,是更多开发者的共同选择.</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">├── src # 源代码</span><br><span class="line">│ ├── api # 所有请求</span><br><span class="line">│ ├── assets # 主题 字体等静态资源</span><br><span class="line">│ ├── components # 全局公用组件</span><br><span class="line">│ ├── directive # 全局指令</span><br><span class="line">│ ├── filters # 全局 filter</span><br><span class="line">│ ├── icons # 项目所有 svg icons</span><br><span class="line">│ ├── lang # 国际化 language</span><br><span class="line">│ ├── layout # 全局 layout</span><br><span class="line">│ ├── router # 路由</span><br><span class="line">│ ├── store # 全局 store管理</span><br><span class="line">│ ├── styles # 全局样式</span><br><span class="line">│ ├── utils # 全局公用方法</span><br><span class="line">│ ├── vendor # 公用vendor</span><br><span class="line">│ ├── views # views 所有页面</span><br><span class="line">│ ├── App.vue # 入口页面</span><br><span class="line">│ ├── main.js # 入口文件 加载组件 初始化等</span><br><span class="line">├── tests # 测试</span><br><span class="line">├── .eslintrc.js # eslint 配置项</span><br><span class="line">├── vue.config.js # vue-cli 配置</span><br><span class="line">├── postcss.config.js # postcss 配置</span><br><span class="line">// ....</span><br></pre></td></tr></table></figure><h4 id="这里并不是全部的分类都是这样-只是把一些-大家习惯这样写的都放在这里-等等都是一些项目协同开发的一些习惯-有利于别的开发者读懂你的代码-让开发更有效"><a href="#这里并不是全部的分类都是这样-只是把一些-大家习惯这样写的都放在这里-等等都是一些项目协同开发的一些习惯-有利于别的开发者读懂你的代码-让开发更有效" class="headerlink" title="这里并不是全部的分类都是这样, 只是把一些,大家习惯这样写的都放在这里.等等都是一些项目协同开发的一些习惯,有利于别的开发者读懂你的代码,让开发更有效."></a>这里并不是全部的分类都是这样, 只是把一些,大家习惯这样写的都放在这里.等等都是一些项目协同开发的一些习惯,有利于别的开发者读懂你的代码,让开发更有效.</h4><h3 id="今天就这样吧，主要就是vue项目的创建与执行，还是比较简单的👌。好了，我今天的分享到此结束，我们明天见！！！"><a href="#今天就这样吧，主要就是vue项目的创建与执行，还是比较简单的👌。好了，我今天的分享到此结束，我们明天见！！！" class="headerlink" title="今天就这样吧，主要就是vue项目的创建与执行，还是比较简单的👌。好了，我今天的分享到此结束，我们明天见！！！"></a>今天就这样吧，主要就是vue项目的创建与执行，还是比较简单的👌。好了，我今天的分享到此结束，我们明天见！！！</h3>]]></content>
      
      
      <categories>
          
          <category> Vue学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-study-简单掌握vue(二)</title>
      <link href="/2023/05/20/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%8C/"/>
      <url>/2023/05/20/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<p><code>在(一)的时候我讲到vue 对css 的处理,现在我们继续学习下面的知识,</code></p><h3 id="1-vue-中key-的用法-首先key-的作用是为了避免对同类型元素的复用-导致体验效果不好-可以使用key为每个不希望被复用的元素设定一个标志-vue-检测到这个key-之就不会复用改元素-从而避免不必要的复用-例如："><a href="#1-vue-中key-的用法-首先key-的作用是为了避免对同类型元素的复用-导致体验效果不好-可以使用key为每个不希望被复用的元素设定一个标志-vue-检测到这个key-之就不会复用改元素-从而避免不必要的复用-例如：" class="headerlink" title="1.vue 中key 的用法,首先key 的作用是为了避免对同类型元素的复用,导致体验效果不好,可以使用key为每个不希望被复用的元素设定一个标志,vue 检测到这个key 之就不会复用改元素,从而避免不必要的复用,例如："></a>1.vue 中key 的用法,首先key 的作用是为了避免对同类型元素的复用,导致体验效果不好,可以使用key为每个不希望被复用的元素设定一个标志,vue 检测到这个key 之就不会复用改元素,从而避免不必要的复用,例如：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template v-if=&quot;loginType==&#x27;username&#x27;&quot;&gt; </span><br><span class="line">&lt;!-- 注意这里的templete 是vue 给我们提供的没有任何实际意义的标签,用来包裹元素的, v-show 不支持templte --&gt;</span><br><span class="line">&lt;label for=&quot;username&quot;&gt;请输入用户名&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; id=&quot;username&quot; placeholder=&quot;用户名&quot; key=&quot;username-input&quot;&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;template v-else-if=&quot;loginType==&#x27;email&#x27;&quot;&gt;</span><br><span class="line">&lt;label for=&quot;emailAddr&quot;&gt;请输入邮箱地址&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; id=&quot;emailAddr&quot; placeholder=&quot;邮箱地址&quot; key=&quot;emailAddr-input&quot;&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;template v-else&gt;</span><br><span class="line">&lt;label for=&quot;phoneNum&quot;&gt;手机号&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; id=&quot;phoneNum&quot; placeholder=&quot;手机号&quot; key=&quot;phoneNum-input&quot;&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--这里切换的时候,只有label 在改变,input 并没有改变,所以此时要给input 加个key---&gt;</span><br></pre></td></tr></table></figure><h3 id="2-列表渲染-v-for-注意不要忘了key-的绑定-避免不必要的复用"><a href="#2-列表渲染-v-for-注意不要忘了key-的绑定-避免不必要的复用" class="headerlink" title="2.列表渲染: v-for (注意不要忘了key 的绑定,避免不必要的复用)"></a>2.列表渲染: v-for (注意不要忘了key 的绑定,避免不必要的复用)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li v-for=&quot;(item,key) in dataSource&quot; :key=&quot;key&quot;&gt;</span><br><span class="line">&#123;&#123;item&#125;&#125;-&#123;&#123;key&#125;&#125; &lt;!--遍历数组--&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li v-for=&quot;(item,key) in arr&quot; :key=&quot;key&quot;&gt;</span><br><span class="line">&lt;a v-bind:href=&quot;item.path&quot;&gt;&#123;&#123;item.name&#125;&#125;&lt;/a&gt; &lt;!--遍历数组--&gt;</span><br><span class="line">&lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li v-for=&quot;(item,key,index) in obj&quot; :key=&quot;key&quot;&gt;</span><br><span class="line">&#123;&#123;item&#125;&#125;-&#123;&#123;key&#125;&#125;-&#123;&#123;index&#125;&#125; &lt;!--遍历对象--&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;template v-for=&quot;ele in 10&quot;&gt;</span><br><span class="line">&lt;li&gt;测试&lt;/li&gt; &lt;!--还可以遍历数字--&gt;</span><br><span class="line">&lt;li v-for=&quot;item in 10&quot;&gt;</span><br><span class="line">&#123;&#123;item&#125;&#125;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li v-for=&quot;item in 10&quot; &gt; &lt;!-- v-for 比v-if 有更高的优先级--&gt;</span><br><span class="line">&lt;span v-if=&quot;item&lt;5&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;span v-else&gt;&#123;&#123;item*2&#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">data: &#123;</span><br><span class="line">dataSource: [&#x27;html5&#x27;,&#x27;js&#x27;,&#x27;vue&#x27;,&#x27;angular&#x27;,&#x27;css3&#x27;],</span><br><span class="line">arr: [</span><br><span class="line">&#123;id: &#x27;001&#x27;,path: &#x27;百度一下，你就知道&#x27;,name:&#x27;百度&#x27;&#125;,</span><br><span class="line">&#123;path: &#x27;http://www.google.com&#x27;,name:&#x27;谷歌&#x27;&#125;,</span><br><span class="line">&#123;path: &#x27;腾讯首页&#x27;,name:&#x27;qq&#x27;&#125;</span><br><span class="line">],</span><br><span class="line">obj: &#123;</span><br><span class="line">name: &#x27;tomcat&#x27;,</span><br><span class="line">age: 100,</span><br><span class="line">color: &#x27;orange&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-下一个常用的功能-事件绑定-v-on-click-x3D-简写-click-x3D"><a href="#3-下一个常用的功能-事件绑定-v-on-click-x3D-简写-click-x3D" class="headerlink" title="3.下一个常用的功能, 事件绑定: v-on : click &#x3D; 简写 @click &#x3D;"></a>3.下一个常用的功能, 事件绑定: v-on : click &#x3D; 简写 @click &#x3D;</h3><p>这个功能就好像我们常用的juqury 的 $(#myID).click &#x3D; 或者是原生 dotement.getelementById(#myId).onclick &#x3D; 一样的用法,只是更简单了.我们只要想在哪个元素上控制事件就绑定在哪个元素上就可以了, 只要关注我们的逻辑成面就可以了,并不需要知道vue 到底做了哪些的操作,比如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li @click=&quot;test&quot;&gt;</span><br><span class="line">&lt;button v-on:click=&quot;addToCart($event)&quot;&gt;加入购物车&lt;/button&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;form action=&quot;&quot; &gt;</span><br><span class="line">&lt;button @click=&quot;onSubmit&quot;&gt;提交&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">addToCart(event)&#123;</span><br><span class="line">console.log(&quot;加入购物车&quot;);</span><br><span class="line">console.log(event) // 这里代表的是原生的dom 的event 事件对象</span><br><span class="line">&#125;,</span><br><span class="line">onSubmit()&#123;</span><br><span class="line">console.log(&#x27;提交&#x27;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们就可以对页面进行交互了, @click 后面的是函数名, 如果需要带参则加上(),如果不需要则不用带, $event 是表示的是,原生的event事件对象.</p><h3 id="4-vue-的事件修饰符"><a href="#4-vue-的事件修饰符" class="headerlink" title="4.vue 的事件修饰符:"></a>4.vue 的事件修饰符:</h3><ul><li>1.阻止单击事件继续传播</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-on:click.stop=&quot;doThis&quot;&gt;阻止&lt;/button&gt;&lt;!-- 阻止单击事件继续传播 --&gt;</span><br></pre></td></tr></table></figure><ul><li>2.提交事件不再重载页面</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form v-on:submit.prevent=&quot;onSubmit&quot;&gt;&lt;/form&gt; &lt;!-- 提交事件不再重载页面 --&gt;</span><br></pre></td></tr></table></figure><ul><li>3.串联修饰符</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-on:click.stop.prevent=&quot;doThat&quot;&gt;点击&lt;/button&gt; &lt;!-- 修饰符可以串联,就是说可以通过 . 的方法连下去 --&gt;</span><br></pre></td></tr></table></figure><ul><li>4.只有修饰符</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form v-on:submit.prevent&gt;&lt;/form&gt; &lt;!-- 只有修饰符 --&gt;</span><br></pre></td></tr></table></figure><ul><li>5.添加事件监听器时使用事件捕获模式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-on:click.capture=&quot;doThis&quot;&gt;...&lt;/div&gt; &lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;</span><br><span class="line">&lt;!-- 即元素自身触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;</span><br></pre></td></tr></table></figure><ul><li>6.当前元素自身时触发处理函数</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-on:click.self=&quot;doThat&quot;&gt;...&lt;/div&gt; &lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;&lt;!-- 即事件不是从内部元素触发的 --&gt;</span><br></pre></td></tr></table></figure><h2 id="好了今天就到这里吧，希望你们喜欢！！！下一章开始-我会结合项目的形式去讲解vue-也会推荐几个好的开源项目-我这样做的目的呢是想-快速的让大家有项目的思维-和结合项目的经验-因为在项目中基本上会这样使用只是大同小异-看谁用的溜而已-好吧-这一篇就先到这里-哪里讲错了-希望大家可以指出-万分感谢-一同学习-进步-😘"><a href="#好了今天就到这里吧，希望你们喜欢！！！下一章开始-我会结合项目的形式去讲解vue-也会推荐几个好的开源项目-我这样做的目的呢是想-快速的让大家有项目的思维-和结合项目的经验-因为在项目中基本上会这样使用只是大同小异-看谁用的溜而已-好吧-这一篇就先到这里-哪里讲错了-希望大家可以指出-万分感谢-一同学习-进步-😘" class="headerlink" title="好了今天就到这里吧，希望你们喜欢！！！下一章开始,我会结合项目的形式去讲解vue,也会推荐几个好的开源项目,我这样做的目的呢是想,快速的让大家有项目的思维,和结合项目的经验,因为在项目中基本上会这样使用只是大同小异,看谁用的溜而已,好吧,这一篇就先到这里,哪里讲错了,希望大家可以指出,万分感谢!一同学习,进步!😘"></a>好了今天就到这里吧，希望你们喜欢！！！下一章开始,我会结合项目的形式去讲解vue,也会推荐几个好的开源项目,我这样做的目的呢是想,快速的让大家有项目的思维,和结合项目的经验,因为在项目中基本上会这样使用只是大同小异,看谁用的溜而已,好吧,这一篇就先到这里,哪里讲错了,希望大家可以指出,万分感谢!一同学习,进步!😘</h2>]]></content>
      
      
      <categories>
          
          <category> Vue学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-study,简单掌握vue(一)</title>
      <link href="/2023/05/19/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%B8%80/"/>
      <url>/2023/05/19/vue-study-%E7%AE%80%E5%8D%95%E6%8E%8C%E6%8F%A1vue-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h3 id="1-我个人觉得其实vue的入门很简单-但是要精通确实要有实战的经验的积累-单凭官网的简单实例-以及网上的教材很难做到精通-现在就让我们一起从vue的入门学起吧"><a href="#1-我个人觉得其实vue的入门很简单-但是要精通确实要有实战的经验的积累-单凭官网的简单实例-以及网上的教材很难做到精通-现在就让我们一起从vue的入门学起吧" class="headerlink" title="1.我个人觉得其实vue的入门很简单,但是要精通确实要有实战的经验的积累,单凭官网的简单实例,以及网上的教材很难做到精通,现在就让我们一起从vue的入门学起吧!"></a>1.我个人觉得其实vue的入门很简单,但是要精通确实要有实战的经验的积累,单凭官网的简单实例,以及网上的教材很难做到精通,现在就让我们一起从vue的入门学起吧!</h3><p>首先下载vue.js 文件 ,然后引入,(这里为了方便学习和使用所以先下载下来,实质项目中并不需要,只需npm 或者yard ) 很简单一个script 标签：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;[./vue.js](https://www.zhihu.com/question/vue.js)&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>其次,在div 中绑定vue 上代码,</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt; 您好! &#123;&#123;message&#125;&#125;, &#123;&#123;arr&#125;&#125;以后日子多多指教 &lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123; <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>, <span class="attr">data</span>: &#123; <span class="attr">message</span>: <span class="string">&#x27;我是VUE&#x27;</span>, <span class="attr">arr</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>] &#125; &#125;) </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>一个简单的vue实例就创建完了,然后在浏览器上跑起来,结果是 : <code>您好! 我是VUE, [ 1, 2, 3, 4 ]以后日子多多指教 </code>,是不是很简单就学会了😊.</p><h3 id="2-好-接下来我学习一下vue的生命周期-vue-的生命周期也叫钩子函数-是vue从创建到销毁所触发的函数"><a href="#2-好-接下来我学习一下vue的生命周期-vue-的生命周期也叫钩子函数-是vue从创建到销毁所触发的函数" class="headerlink" title="2.好,接下来我学习一下vue的生命周期, vue 的生命周期也叫钩子函数,是vue从创建到销毁所触发的函数:"></a>2.好,接下来我学习一下vue的生命周期, vue 的生命周期也叫钩子函数,是vue从创建到销毁所触发的函数:</h3><p><strong>1.</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">beforeCreate()&#123;console.log(&quot;创建之前&quot;);&#125;,</span><br></pre></td></tr></table></figure><p> beforeCreate(),这是第一个生命周期函数, 表示实例完全被创建出来之前, 会执行它,此时data和methods中的数据和方法都还没有被初始化,在这里是获取不到data中的数据的,console会报错,undefined</p><p><strong>2.</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">created()&#123;console.log(&quot;创建完成&quot;);&#125;, </span><br></pre></td></tr></table></figure><p>created()这是第二个命周期函数 在created 中, data和methods,都已经被初始好了,所以 如果要调用 methods 中的方法, 或者操作data中的数据, 最早只能在created 中操作</p><p><strong>3.</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">beforeMount()&#123;console.log(&quot;挂载之前&quot;);&#125;, </span><br></pre></td></tr></table></figure><p>这是第三个生命周期函数,表示模板已经在内存中编译完成了,但是尚未把数据模板渲染到页 如果这个时候想获取页面中的元素只能获取到未编译的值<code>console.log(document.getElementById(&quot;h3&quot;).innerText);</code><br><code>console.log(this.$refs.myh3); //undefind</code> 还没有获取到dom元素,在 beforeMount执行的时候, 页面中的元素, 还没有被真正替换过来, 只是之前写的一些模板字符串</p><p><strong>4.</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mounted()&#123;console.log(&quot;挂载完成&quot;);&#125;,</span><br></pre></td></tr></table></figure><p>这是第四个生命周期函数,表示 内存中的模板,已经真实的挂载到了页面中, 用户已经可以看到渲染好的页面了<br><code>console.log(document.getElementById(&quot;h3&quot;).innerText);</code><br><code>console.log(this.$refs.hh3.innerText); //ok </code>这句话表明 要操作dom 元素至少在挂载完成后<br><strong>注意 :</strong> mounted 是实例创建期间的最后一个生命周期, 当执行完mounted 就表示,实例已经被完全创建好了, 此时, 如果没有其他操作的话, 这个实例, 就静静的躺在我们的内存中, 一动不动</p><p>**5.**接下来是运行中的两个事件<br>beforeUpdate(){ &#x2F;&#x2F;这个时候表示 , 页面还没有被更新,数据更新了<br>console.log(“页面上元素的内容:” + document.getElementById(“h3”).innerText);<br>console.log(“data中的msg数据是:” + this.msg);<br>**结论: **当执行了beforeUpdate 的时候,页面中显示的数据还是旧的,此时data中的数据是最新的, 页面尚未和最新的数据保持同步</p><p><strong>6.</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updated()&#123;console.log(&quot;更新完成&quot;+this.message);&#125;, </span><br></pre></td></tr></table></figure><p><code>console.log(&quot;页面上元素的内容:&quot; + document.getElementById(&quot;h3&quot;).innerText);</code><br><code>console.log(&quot;data中的msg数据是:&quot; + this.msg);</code><br>updated 事件执行的时候, 页面和data 中的数据已经保持同步了, 都是最新的</p><p><strong>7.</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">beforeDestroy()&#123;console.log(&quot;销毁之前&quot;);&#125;,</span><br></pre></td></tr></table></figure><p><strong>8.</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">destroyed()&#123;console.log(&quot;销毁了&quot;);&#125;</span><br></pre></td></tr></table></figure><p>这就是vue的八个钩子函数(也叫生命周期),vue 的生命周期很重要,学好了vue的生命周期学懂了一半vue,这里已经讲得比较清楚,如果还有疑问,欢迎一起来探讨.</p><h3 id="3-学完了vue-的生命周期-接下来我们学习一下-vue的模板语法-也是很简单-直接上代码"><a href="#3-学完了vue-的生命周期-接下来我们学习一下-vue的模板语法-也是很简单-直接上代码" class="headerlink" title="3.学完了vue 的生命周期,接下来我们学习一下,vue的模板语法,也是很简单,直接上代码:"></a>3.学完了vue 的生命周期,接下来我们学习一下,vue的模板语法,也是很简单,直接上代码:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">&#123;&#123;message&#125;&#125; &#123;&#123;1+2&#125;&#125; &#123;&#123;1+1&gt;1?&#x27;YES&#x27;:&#x27;No&#x27;&#125;&#125;</span><br><span class="line">&lt;span v-if=&quot;1&gt;2&quot;&gt;我是v-if &lt;/span&gt;</span><br><span class="line">&lt;button v-on:click=&quot;myFun&quot;&gt;修改1&lt;/button&gt;</span><br><span class="line">&lt;button @click=&quot;message=666&quot;&gt;修改2&lt;/button&gt;</span><br><span class="line">&lt;div v-html=&quot;myHTML&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;img v-bind:src=&quot;imageURL&quot; alt=&quot;&quot;&gt;</span><br><span class="line">&lt;div v-bind:id=&quot;myId&quot; v-bind:class=&quot;myClass&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div :id=&quot;myId&quot; :class=&quot;myClass&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">el: &#x27;#app&#x27;,</span><br><span class="line">data: &#123;</span><br><span class="line">message: &#x27;Hello Vue&#x27;,</span><br><span class="line">imageURL: &#x27;http://fb.topitme.com/b/2d/0f/112647038896a0f2dbo.jpg&#x27;,</span><br><span class="line">myId: &#x27;007&#x27;,</span><br><span class="line">myClass: &#x27;app&#x27;,</span><br><span class="line">myHTML: `&lt;div style=&quot;width:100px;height:100px;background:orange&quot;&gt;我是html格式的数据,你要按html的方式给我渲染出来&lt;/div&gt; `</span><br><span class="line">&#125; ,</span><br><span class="line">methods:&#123;</span><br><span class="line">myFun()&#123;</span><br><span class="line">this.message = 5555;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li><p>插值表达式  可以直接访问data里的属性 ,比如message 插值表达式还可以做简单的运算以及逻辑判断,如三木运算符.</p></li><li><p>v-if 是指令 跟 v-show (后面会讲到)一样都是指令,他是动态的隐藏与显示元素, 但两者又有不一样的区别, v-if 是是将dom元素整个添加或删除, 而v-show是简单的控制元素的display的属性dom元素还在。这里需要注意的一点是, v-if 和v-for(后面会讲到)一起使用时，v-for 具有比 v-if 更高的优先级。</p></li><li><p>v-on:click 也是vue提供的指令, 会触发methods 中的方法 , ,如上面的代码, 点击修改1 的时候会触发myFun 改变message 从而改变视图, 是不是很方便, 并不用我们去操作整个Dom 对象,只需关注业务逻辑, 这就是vue 的精髓之一.它还挺功了简写的方式 @click.</p></li><li><p>v-html 指令会将HTML 代码渲染出来,而不是直接读出来</p></li><li><p>v-bind: 指令是用来绑定元素的属性的, 绑定之后就可以动态的添加属性的值了, 它也提供了简写的方式 ‘ : ‘ 冒号. 属性绑定之后也可以做简单js 运算, 比如 :value &#x3D; ‘1+1’</p></li><li><p>计算属性,顾名思义就是一种属性, 计算说明是动词,只有发生变化的时候才会改变的属性值,计算属性,顾名思义就是一种属性, 计算说明是动词,只有发生变化的时候才会改变的属性值,比如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">reverseMessage()&#123;</span><br><span class="line">return this.message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p> 我们可以直接在插值表达式中使用它, ,而不用做任何的处理,这里他定义的是一个function 的形式,所有的不需要改变的值都可以事先存到计算属性当中,知道发生改变,计算属性会自动更新到视图中.</p></li><li><p>属性监听: 是监听data中的属性,一旦发生改变,立即更新视图, 具体的用法可以这样用:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">message: &#x27;Hello Vuew&#x27;,</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">watch: &#123;</span><br><span class="line">message(newValue)&#123;</span><br><span class="line">console.log(&quot;message的新值是&quot;+newValue);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>双向数据绑定其实就是绑定v-modul 指令,就可以实现数据的双驱动效果,数据改变立马更新到视图中,上代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; v-model=&quot;message&quot;&gt;</span><br><span class="line">&#123;&#123;message&#125;&#125;</span><br><span class="line">data:&#123;</span><br><span class="line">message:&#x27;双向数据绑定就是这么简单&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="好了，今天的分享到此结束，感兴趣的小伙伴多多关注一下小编，希望今天的分享对你有帮助！！！-❁´◡-96-❁"><a href="#好了，今天的分享到此结束，感兴趣的小伙伴多多关注一下小编，希望今天的分享对你有帮助！！！-❁´◡-96-❁" class="headerlink" title="好了，今天的分享到此结束，感兴趣的小伙伴多多关注一下小编，希望今天的分享对你有帮助！！！(❁´◡&#96;❁)"></a>好了，今天的分享到此结束，感兴趣的小伙伴多多关注一下小编，希望今天的分享对你有帮助！！！(❁´◡&#96;❁)</h3></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nvm学习</title>
      <link href="/2023/05/18/nvm%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/05/18/nvm%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="一、遇到的问题"><a href="#一、遇到的问题" class="headerlink" title="一、遇到的问题"></a>一、遇到的问题</h2><p>不同的项目使用的node版本不一致，导致使用的时候，安装依赖的时候冲突了，从网上找了很多的方案，解决起来也挺费劲的；<br>问题：当一个项目使用低版本的时候，使用的node版本为14.18.1，安装完依赖就可以直接运行起来；但是一个项目需要使用node的版本为16.14.0，安装依赖的时候，就必须得使用这个版本的，使用这个版本的时候，依赖旧版本的项目启动的时候就报错了</p><p>一开始的想法是升级package.json文件中的node-sass和sass-loader的版本，将其更改为跟<a href="mailto:&#110;&#x6f;&#x64;&#x65;&#x40;&#49;&#x36;&#46;&#x31;&#x34;&#46;&#x30;">&#110;&#x6f;&#x64;&#x65;&#x40;&#49;&#x36;&#46;&#x31;&#x34;&#46;&#x30;</a>一致的版本，更改完后，重新下载完依赖运行的时候，会报其他的错误，其他的依赖也会报错，因为项目本身用到了很多的依赖，比如webpack等跟node版本相关的一些依赖都需要升级，一点点的去找的话，太花费时间.</p><p><strong>然后我在想，是不是可以使用不同的node版本，当开发这个项目的时候，我使用这个node版本，当开发另一个项目的时候，我使用另一个node版本，从网上查找了一下，果然发现了解决办法，就是使用nvm去管理不同版本的node</strong></p><h2 id="二、介绍"><a href="#二、介绍" class="headerlink" title="二、介绍"></a>二、介绍</h2><p>nvm 全名 node.js version management ，顾名思义是一个管理多个 nodejs 的版本工具。通过它可以安装和切换不同版本的 nodejs, nvm和 n 都是node 版本管理工具，为了解决 node.js各种版本存在不兼容现象可以通过它可以安装和切换不同版本。</p><h4 id="下载："><a href="#下载：" class="headerlink" title="下载："></a>下载：</h4><p><code>nvm</code> 官网地址： <a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a> 打开网址我们可以看到安装包</p><p><strong>注意：</strong>使用前先删除掉本机已安装过的 <a href="https://so.csdn.net/so/search?q=nodejs&spm=1001.2101.3001.7020">nodejs</a>（如果已安装的 nodejs 的话）</p><p>查看<code>nvm</code>版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm -v</span><br></pre></td></tr></table></figure><h3 id="如果小伙伴安装下载过程中遇到了问题，可以看看这篇文章–nvm介绍、安装、报错处理以及使用，小编就是跟着它完成安装的。😂"><a href="#如果小伙伴安装下载过程中遇到了问题，可以看看这篇文章–nvm介绍、安装、报错处理以及使用，小编就是跟着它完成安装的。😂" class="headerlink" title="如果小伙伴安装下载过程中遇到了问题，可以看看这篇文章–nvm介绍、安装、报错处理以及使用，小编就是跟着它完成安装的。😂"></a>如果小伙伴安装下载过程中遇到了问题，可以看看这篇文章–<a href="https://blog.csdn.net/weixin_46864830/article/details/124621343">nvm介绍、安装、报错处理以及使用</a>，小编就是跟着它完成安装的。😂</h3><h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><p>一些常用的语法：</p><h4 id="安装稳定版-node"><a href="#安装稳定版-node" class="headerlink" title="安装稳定版 node:"></a>安装稳定版 node:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure><h4 id="安装指定版本，可模糊安装"><a href="#安装指定版本，可模糊安装" class="headerlink" title="安装指定版本，可模糊安装:"></a>安装指定版本，可模糊安装:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#如：安装 v4.4.0</span><br><span class="line">#nvm install v4.4.0</span><br><span class="line">#nvm install 4.4</span><br><span class="line">nvm install &lt;version&gt;</span><br></pre></td></tr></table></figure><h4 id="删除已安装的指定版本，语法与-install-用法一致"><a href="#删除已安装的指定版本，语法与-install-用法一致" class="headerlink" title="删除已安装的指定版本，语法与 install 用法一致:"></a>删除已安装的指定版本，语法与 install 用法一致:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm uninstall &lt;version&gt;</span><br></pre></td></tr></table></figure><h4 id="列出所有安装的版本"><a href="#列出所有安装的版本" class="headerlink" title="列出所有安装的版本:"></a>列出所有安装的版本:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm ls</span><br></pre></td></tr></table></figure><h4 id="使用指定版本的-nodejs"><a href="#使用指定版本的-nodejs" class="headerlink" title="使用指定版本的 nodejs:"></a>使用指定版本的 nodejs:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm use node@版本号</span><br></pre></td></tr></table></figure><h4 id="开启node-js版本管理"><a href="#开启node-js版本管理" class="headerlink" title="开启node.js版本管理:"></a>开启node.js版本管理:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm on</span><br></pre></td></tr></table></figure><h4 id="关闭node-js版本管理"><a href="#关闭node-js版本管理" class="headerlink" title="关闭node.js版本管理:"></a>关闭node.js版本管理:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm off</span><br></pre></td></tr></table></figure><h5 id="我还是非常建议大家使用nvm的，毕竟可以随意切换node使用，不用再担心版本兼容问题了。"><a href="#我还是非常建议大家使用nvm的，毕竟可以随意切换node使用，不用再担心版本兼容问题了。" class="headerlink" title="我还是非常建议大家使用nvm的，毕竟可以随意切换node使用，不用再担心版本兼容问题了。"></a>我还是非常建议大家使用nvm的，毕竟可以随意切换node使用，不用再担心版本兼容问题了。</h5><h3 id="好了，今天的分享到此结束，感谢大家的观看，我们明天见！！！😘"><a href="#好了，今天的分享到此结束，感谢大家的观看，我们明天见！！！😘" class="headerlink" title="好了，今天的分享到此结束，感谢大家的观看，我们明天见！！！😘"></a>好了，今天的分享到此结束，感谢大家的观看，我们明天见！！！😘</h3>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习</title>
      <link href="/2023/05/17/JavaScript%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/05/17/JavaScript%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<!-- markdown="1" is required for GitHub Pages to render the TOC properly. --><details markdown="1">  <summary>目录</summary><ul><li><p><a href="#1">1 JavaScript页面类</a></p><ul><li><a href="#1.1">I. 代码实现</a><ul><li><a href="#1.1.1">1.1 原生DOM API的安全操作</a></li><li><a href="#1.1.2">1.2 流行框架&#x2F;库的安全操作</a></li><li><a href="#1.1.3">1.3 页面重定向</a></li><li><a href="#1.1.4">1.4 JSON解析&#x2F;动态执行</a></li><li><a href="#1.1.5">1.5 跨域通讯</a></li></ul></li><li><a href="#1.2">II. 配置&amp;环境</a><ul><li><a href="#1.2.1">2.1 敏感&#x2F;配置信息</a></li><li><a href="#1.2.2">2.2 第三方组件&#x2F;资源</a></li><li><a href="#1.2.3">2.3 纵深安全防护</a></li></ul></li></ul></li><li><p><a href="#2">2 Node.js后台类</a></p><ul><li><a href="#2.1">I. 代码实现</a><ul><li><a href="#2.1.1">1.1 输入验证</a></li><li><a href="#2.1.2">1.2 执行命令</a></li><li><a href="#2.1.3">1.3 文件操作</a></li><li><a href="#2.1.4">1.4 网络请求</a></li><li><a href="#2.1.5">1.5 数据输出</a></li><li><a href="#2.1.6">1.6 响应输出</a></li><li><a href="#2.1.7">1.7 执行代码</a></li><li><a href="#2.1.8">1.8 Web跨域</a></li><li><a href="#2.1.9">1.9 SQL操作</a></li><li><a href="#2.1.10">1.10 NoSQL操作</a></li><li><a href="#2.1.11">1.11 服务器端渲染（SSR）</a></li><li><a href="#2.1.12">1.12 URL跳转</a></li><li><a href="#2.1.13">1.13 Cookie与登录态</a></li></ul></li><li><a href="#2.2">II. 配置&amp;环境</a><ul><li><a href="#2.2.1">2.1 敏感&#x2F;配置信息</a></li><li><a href="#2.2.2">2.2 第三方组件&#x2F;资源</a></li><li><a href="#2.2.3">2.3 纵深安全防护</a></li></ul></li></ul></li></ul></details><p><a id="1"></a></p><h2 id="JavaScript页面类"><a href="#JavaScript页面类" class="headerlink" title="JavaScript页面类"></a>JavaScript页面类</h2><p><a id="1.1"></a></p><h3 id="I-代码实现"><a href="#I-代码实现" class="headerlink" title="I. 代码实现"></a>I. 代码实现</h3><p><a id="1.1.1"></a></p><h4 id="1-1-原生DOM-API的安全操作"><a href="#1-1-原生DOM-API的安全操作" class="headerlink" title="1.1 原生DOM API的安全操作"></a>1.1 原生DOM API的安全操作</h4><p><strong>1.1.1【必须】HTML标签操作，限定&#x2F;过滤传入变量值</strong></p><ul><li>使用<code>innerHTML=</code>、<code>outerHTML=</code>、<code>document.write()</code>、<code>document.writeln()</code>时，如变量值外部可控，应对特殊字符（<code>&amp;, &lt;, &gt;, &quot;, &#39;</code>）做编码转义，或使用安全的DOM API替代，包括：<code>innerText=</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 假设 params 为用户输入， text 为 DOM 节点</span></span><br><span class="line"><span class="comment">// bad：将不可信内容带入HTML标签操作</span></span><br><span class="line"><span class="keyword">const</span> &#123; user &#125; = params;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">text.<span class="property">innerHTML</span> = <span class="string">`Follow @<span class="subst">$&#123;user&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good: innerHTML操作前，对特殊字符编码转义</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">htmlEncode</span>(<span class="params">iStr</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> sStr = iStr;</span><br><span class="line">sStr = sStr.<span class="title function_">replace</span>(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;amp;&quot;</span>);</span><br><span class="line">sStr = sStr.<span class="title function_">replace</span>(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&amp;gt;&quot;</span>);</span><br><span class="line">sStr = sStr.<span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&amp;lt;&quot;</span>);</span><br><span class="line">sStr = sStr.<span class="title function_">replace</span>(<span class="regexp">/&quot;/g</span>, <span class="string">&quot;&amp;quot;&quot;</span>);</span><br><span class="line">sStr = sStr.<span class="title function_">replace</span>(<span class="regexp">/&#x27;/g</span>, <span class="string">&quot;&amp;#39;&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> sStr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; user &#125; = params;</span><br><span class="line">user = <span class="title function_">htmlEncode</span>(user);</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">text.<span class="property">innerHTML</span> = <span class="string">`Follow @<span class="subst">$&#123;user&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good: 使用安全的DOM API替代innerHTML</span></span><br><span class="line"><span class="keyword">const</span> &#123; user &#125; = params;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">text.<span class="property">innerText</span> = <span class="string">`Follow @<span class="subst">$&#123;user&#125;</span>`</span>;</span><br></pre></td></tr></table></figure><p><strong>1.1.2【必须】HTML属性操作，限定&#x2F;过滤传入变量值</strong></p><ul><li><p>使用<code>element.setAttribute(name, value);</code>时，如第一个参数值<code>name</code>外部可控，应用白名单限定允许操作的属性范围。</p></li><li><p>使用<code>element.setAttribute(name, value);</code>时，操作<code>a.href</code>、<code>ifame.src</code>、<code>form.action</code>、<code>embed.src</code>、<code>object.data</code>、<code>link.href</code>、<code>area.href</code>、<code>input.formaction</code>、<code>button.formaction</code>属性时，如第二个参数值<code>value</code>外部可控，应参考<em>JavaScript页面类规范1.3.1</em>部分，限定页面重定向或引入资源的目标地址。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// good: setAttribute操作前，限定引入资源的目标地址</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addExternalCss</span>(<span class="params">e</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> t = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;link&#x27;</span>);</span><br><span class="line">t.<span class="title function_">setAttribute</span>(<span class="string">&#x27;href&#x27;</span>, e),</span><br><span class="line">t.<span class="title function_">setAttribute</span>(<span class="string">&#x27;rel&#x27;</span>, <span class="string">&#x27;stylesheet&#x27;</span>),</span><br><span class="line">t.<span class="title function_">setAttribute</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/css&#x27;</span>),</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(t)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">validURL</span>(<span class="params">sUrl</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> !!((<span class="regexp">/^(https?:\/\/)?[\w\-.]+\.(qq|tencent)\.com($|\/|\\)/i</span>).<span class="title function_">test</span>(sUrl) || (<span class="regexp">/^[\w][\w/.\-_%]+$/i</span>).<span class="title function_">test</span>(sUrl) || (<span class="regexp">/^[/\\][^/\\]/i</span>).<span class="title function_">test</span>(sUrl));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> sUrl = <span class="string">&quot;https://evil.com/1.css&quot;</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_">validURL</span>(sUrl)) &#123;</span><br><span class="line"><span class="title function_">addExternalCss</span>(sUrl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a id="1.1.2"></a></p><h4 id="1-2-流行框架-x2F-库的安全操作"><a href="#1-2-流行框架-x2F-库的安全操作" class="headerlink" title="1.2 流行框架&#x2F;库的安全操作"></a>1.2 流行框架&#x2F;库的安全操作</h4><p><strong>1.2.1【必须】限定&#x2F;过滤传入jQuery不安全函数的变量值</strong></p><ul><li>使用<code>.html()</code>、<code>.append()</code>、<code>.prepend()</code>、<code>.wrap()</code>、<code>.replaceWith()</code>、<code>.wrapAll()</code>、<code>.wrapInner()</code>、<code>.after()</code>、<code>.before()</code>时，如变量值外部可控，应对特殊字符（<code>&amp;, &lt;, &gt;, &quot;, &#39;</code>）做编码转义。</li><li>引入<code>jQuery 1.x（等于或低于1.12）、jQuery2.x（等于或低于2.2）</code>，且使用<code>$()</code>时，应优先考虑替换为最新版本。如一定需要使用，应对传入参数值中的特殊字符（<code>&amp;, &lt;, &gt;, &quot;, &#39;</code>）做编码转义。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bad：将不可信内容，带入jQuery不安全函数.after()操作</span></span><br><span class="line"><span class="keyword">const</span> &#123; user &#125; = params;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).<span class="title function_">after</span>(user);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good: jQuery不安全函数.html()操作前，对特殊字符编码转义</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">htmlEncode</span>(<span class="params">iStr</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> sStr = iStr;</span><br><span class="line">sStr = sStr.<span class="title function_">replace</span>(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;amp;&quot;</span>);</span><br><span class="line">sStr = sStr.<span class="title function_">replace</span>(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&amp;gt;&quot;</span>);</span><br><span class="line">sStr = sStr.<span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&amp;lt;&quot;</span>);</span><br><span class="line">sStr = sStr.<span class="title function_">replace</span>(<span class="regexp">/&quot;/g</span>, <span class="string">&quot;&amp;quot;&quot;</span>);</span><br><span class="line">sStr = sStr.<span class="title function_">replace</span>(<span class="regexp">/&#x27;/g</span>, <span class="string">&quot;&amp;#39;&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> sStr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// const user = params.user;</span></span><br><span class="line">user = <span class="title function_">htmlEncode</span>(user);</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).<span class="title function_">html</span>(user);</span><br></pre></td></tr></table></figure><ul><li><p>使用<code>.attr()</code>操作<code>a.href</code>、<code>ifame.src</code>、<code>form.action</code>、<code>embed.src</code>、<code>object.data</code>、<code>link.href</code>、<code>area.href</code>、<code>input.formaction</code>、<code>button.formaction</code>属性时，应参考<em>JavaScript页面类规范1.3.1</em>部分，限定重定向的资源目标地址。</p></li><li><p>使用<code>.attr(attributeName, value)</code>时，如第一个参数值<code>attributeName</code>外部可控，应用白名单限定允许操作的属性范围。</p></li><li><p>使用<code>$.getScript(url [, success ])</code>时，如第一个参数值<code>url</code>外部可控（如：从URL取值拼接，请求jsonp接口），应限定可控变量值的字符集范围为：<code>[a-zA-Z0-9_-]+</code>。</p></li></ul><p><strong>1.2.2【必须】限定&#x2F;过滤传入Vue.js不安全函数的变量值</strong></p><ul><li>使用<code>v-html</code>时，不允许对用户提供的内容使用HTML插值。如业务需要，应先对不可信内容做富文本过滤。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// bad：直接渲染外部传入的不可信内容</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;userProvidedHtml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// good：使用富文本过滤库处理不可信内容后渲染</span><br><span class="line"><span class="comment">&lt;!-- 使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-xss-html</span>=<span class="string">&quot;&#123;&#x27;mode&#x27;: &#x27;whitelist&#x27;, dirty: html, options: options&#125;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">options</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">whiteList</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">a</span>: [<span class="string">&quot;href&quot;</span>, <span class="string">&quot;title&quot;</span>, <span class="string">&quot;target&quot;</span>, <span class="string">&quot;class&quot;</span>, <span class="string">&quot;id&quot;</span>],</span></span><br><span class="line"><span class="language-javascript"><span class="attr">div</span>: [<span class="string">&quot;class&quot;</span>, <span class="string">&quot;id&quot;</span>],</span></span><br><span class="line"><span class="language-javascript"><span class="attr">span</span>: [<span class="string">&quot;class&quot;</span>, <span class="string">&quot;id&quot;</span>],</span></span><br><span class="line"><span class="language-javascript"><span class="attr">img</span>: [<span class="string">&quot;src&quot;</span>, <span class="string">&quot;alt&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>使用<code>v-bind</code>操作<code>a.href</code>、<code>ifame.src</code>、<code>form.action</code>、<code>embed.src</code>、<code>object.data</code>、<code>link.href</code>、<code>area.href</code>、<code>input.formaction</code>、<code>button.formaction</code>时，应确保后端已参考<em>JavaScript页面类规范1.3.1</em>部分，限定了供前端调用的重定向目标地址。</p></li><li><p>使用<code>v-bind</code>操作<code>style</code>属性时，应只允许外部控制特定、可控的CSS属性值</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// bad：v-bind允许外部可控值，自定义CSS属性及数值</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;sanitizedUrl&quot;</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;userProvidedStyles&quot;</span>&gt;</span></span><br><span class="line">click me</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// good：v-bind只允许外部提供特性、可控的CSS属性值</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;sanitizedUrl&quot;</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;&#123;</span></span></span><br><span class="line"><span class="string"><span class="tag">color: userProvidedColor,</span></span></span><br><span class="line"><span class="string"><span class="tag">background: userProvidedBackground</span></span></span><br><span class="line"><span class="string"><span class="tag">&#125;&quot;</span> &gt;</span></span><br><span class="line">click me</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a id="1.1.3"></a></p><h4 id="1-3-页面重定向"><a href="#1-3-页面重定向" class="headerlink" title="1.3 页面重定向"></a>1.3 页面重定向</h4><p><strong>1.3.1【必须】限定跳转目标地址</strong></p><ul><li><p>使用白名单，限定重定向地址的协议前缀（默认只允许HTTP、HTTPS）、域名（默认只允许公司根域），或指定为固定值；</p></li><li><p>适用场景包括，使用函数方法：<code>location.href</code>、<code>window.open()</code>、<code>location.assign()</code>、<code>location.replace()</code>；赋值或更新HTML属性：<code>a.href</code>、<code>ifame.src</code>、<code>form.action</code>、<code>embed.src</code>、<code>object.data</code>、<code>link.href</code>、<code>area.href</code>、<code>input.formaction</code>、<code>button.formaction</code>；</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bad: 跳转至外部可控的不可信地址</span></span><br><span class="line"><span class="keyword">const</span> sTargetUrl = <span class="title function_">getURLParam</span>(<span class="string">&quot;target&quot;</span>);</span><br><span class="line">location.<span class="title function_">replace</span>(sTargetUrl);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good: 白名单限定重定向地址</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">validURL</span>(<span class="params">sUrl</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> !!((<span class="regexp">/^(https?:\/\/)?[\w\-.]+\.(qq|tencent)\.com($|\/|\\)/i</span>).<span class="title function_">test</span>(sUrl) || (<span class="regexp">/^[\w][\w/.\-_%]+$/i</span>).<span class="title function_">test</span>(sUrl) || (<span class="regexp">/^[/\\][^/\\]/i</span>).<span class="title function_">test</span>(sUrl));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sTargetUrl = <span class="title function_">getURLParam</span>(<span class="string">&quot;target&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_">validURL</span>(sTargetUrl)) &#123;</span><br><span class="line">location.<span class="title function_">replace</span>(sTargetUrl);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good: 制定重定向地址为固定值</span></span><br><span class="line"><span class="keyword">const</span> sTargetUrl = <span class="string">&quot;http://www.qq.com&quot;</span>;</span><br><span class="line">location.<span class="title function_">replace</span>(sTargetUrl);</span><br></pre></td></tr></table></figure><p><a id="1.1.4"></a></p><h4 id="1-4-JSON解析-x2F-动态执行"><a href="#1-4-JSON解析-x2F-动态执行" class="headerlink" title="1.4 JSON解析&#x2F;动态执行"></a>1.4 JSON解析&#x2F;动态执行</h4><p><strong>1.4.1【必须】使用安全的JSON解析方式</strong></p><ul><li>应使用<code>JSON.parse()</code>解析JSON字符串。低版本浏览器，应使用安全的<a href="https://github.com/douglascrockford/JSON-js/blob/master/json2.js">Polyfill封装</a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bad: 直接调用eval解析json</span></span><br><span class="line"><span class="keyword">const</span> sUserInput = <span class="title function_">getURLParam</span>(<span class="string">&quot;json_val&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> jsonstr1 = <span class="string">`&#123;&quot;name&quot;:&quot;a&quot;,&quot;company&quot;:&quot;b&quot;,&quot;value&quot;:&quot;<span class="subst">$&#123;sUserInput&#125;</span>&quot;&#125;`</span>;</span><br><span class="line"><span class="keyword">const</span> json1 = <span class="built_in">eval</span>(<span class="string">`(<span class="subst">$&#123;jsonstr1&#125;</span>)`</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good: 使用JSON.parse解析</span></span><br><span class="line"><span class="keyword">const</span> sUserInput = <span class="title function_">getURLParam</span>(<span class="string">&quot;json_val&quot;</span>);</span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(sUserInput, <span class="function">(<span class="params">k, v</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (k === <span class="string">&quot;&quot;</span>) <span class="keyword">return</span> v;</span><br><span class="line"><span class="keyword">return</span> v * <span class="number">2</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good: 低版本浏览器，使用安全的Polyfill封装（基于eval）</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://github.com/douglascrockford/JSON-js/blob/master/json2.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>;</span><br><span class="line"><span class="keyword">const</span> sUserInput = <span class="title function_">getURLParam</span>(<span class="string">&quot;json_val&quot;</span>);</span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(sUserInput);</span><br></pre></td></tr></table></figure><p><a id="1.1.5"></a></p><h4 id="1-5-跨域通讯"><a href="#1-5-跨域通讯" class="headerlink" title="1.5 跨域通讯"></a>1.5 跨域通讯</h4><p><strong>1.5.1【必须】使用安全的前端跨域通信方式</strong></p><ul><li>具有隔离登录态（如：p_skey）、涉及用户高敏感信息的业务（如：微信网页版、QQ空间、QQ邮箱、公众平台），禁止通过<code>document.domain</code>降域，实现前端跨域通讯，应使用postMessage替代。</li></ul><p><strong>1.5.2【必须】使用postMessage应限定Origin</strong></p><ul><li><p>在message事件监听回调中，应先使用<code>event.origin</code>校验来源，再执行具体操作。</p></li><li><p>校验来源时，应使用<code>===</code>判断，禁止使用<code>indexOf()</code></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bad: 使用indexOf校验Origin值</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;message&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (~e.<span class="property">origin</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;https://a.qq.com&quot;</span>)) &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good: 使用postMessage时，限定Origin，且使用===判断</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;message&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (e.<span class="property">origin</span> === <span class="string">&quot;https://a.qq.com&quot;</span>) &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><a id="1.2"></a></p><h3 id="II-配置-amp-环境"><a href="#II-配置-amp-环境" class="headerlink" title="II. 配置&amp;环境"></a>II. 配置&amp;环境</h3><p><a id="1.2.1"></a></p><h4 id="2-1-敏感-x2F-配置信息"><a href="#2-1-敏感-x2F-配置信息" class="headerlink" title="2.1 敏感&#x2F;配置信息"></a>2.1 敏感&#x2F;配置信息</h4><p><strong>2.1.1【必须】禁止明文硬编码AK&#x2F;SK</strong></p><ul><li>禁止前端页面的JS明文硬编码AK&#x2F;SK类密钥，应封装成后台接口，AK&#x2F;SK保存在后端配置中心或密钥管理系统</li></ul><p><a id="1.2.2"></a></p><h4 id="2-2-第三方组件-x2F-资源"><a href="#2-2-第三方组件-x2F-资源" class="headerlink" title="2.2 第三方组件&#x2F;资源"></a>2.2 第三方组件&#x2F;资源</h4><p><strong>2.2.1【必须】使用可信范围内的统计组件</strong></p><p><strong>2.2.2 【必须】禁止引入非可信来源的第三方JS</strong></p><p><a id="1.2.3"></a></p><h4 id="2-3-纵深安全防护"><a href="#2-3-纵深安全防护" class="headerlink" title="2.3 纵深安全防护"></a>2.3 纵深安全防护</h4><p><strong>2.3.1【推荐】部署CSP，并启用严格模式</strong></p><p><a id="2"></a></p><h2 id="Node-js后台类"><a href="#Node-js后台类" class="headerlink" title="Node.js后台类"></a>Node.js后台类</h2><p><a id="2.1"></a></p><h3 id="I-代码实现-1"><a href="#I-代码实现-1" class="headerlink" title="I. 代码实现"></a>I. 代码实现</h3><p><a id="2.1.1"></a></p><h4 id="1-1-输入验证"><a href="#1-1-输入验证" class="headerlink" title="1.1 输入验证"></a>1.1 输入验证</h4><p><strong>1.1.1【必须】按类型进行数据校验</strong></p><ul><li>所有程序外部输入的参数值，应进行数据校验。校验内容包括但不限于：数据长度、数据范围、数据类型与格式。校验不通过，应拒绝。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bad：未进行输入验证</span></span><br><span class="line"><span class="title class_">Router</span>.<span class="title function_">get</span>(<span class="string">&quot;/vulxss&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> &#123; txt &#125; = req.<span class="property">query</span>;</span><br><span class="line">res.<span class="title function_">set</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="attr">data</span>: txt,</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good：按数据类型，进行输入验证</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Router</span> = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>).<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">const</span> validator = <span class="built_in">require</span>(<span class="string">&quot;validator&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Router</span>.<span class="title function_">get</span>(<span class="string">&quot;/email_with_validator&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> txt = req.<span class="property">query</span>.<span class="property">txt</span> || <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (validator.<span class="title function_">isEmail</span>(txt)) &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="attr">data</span>: txt,</span><br><span class="line">&#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123; <span class="attr">err</span>: <span class="number">1</span> &#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><em>关联漏洞：纵深防护措施 - 安全性增强特性</em></p><p><a id="2.1.2"></a></p><h4 id="1-2-执行命令"><a href="#1-2-执行命令" class="headerlink" title="1.2 执行命令"></a>1.2 执行命令</h4><p><strong>1.2.1 【必须】使用child_process执行系统命令，应限定或校验命令和参数的内容</strong></p><ul><li><p>适用场景包括：<code>child_process.exec</code>, <code>child_process.execSync</code>, <code>child_process.spawn</code>, <code>child_process.spawnSync</code>, <code>child_process.execFile</code>, <code>child_process.execFileSync</code></p></li><li><p>调用上述函数，应首先考虑限定范围，供用户选择。</p></li><li><p>使用<code>child_process.exec</code>或<code>child_process.execSync</code>时，如果可枚举输入的参数内容或者格式，则应限定白名单。如果无法枚举命令或参数，则必须过滤或者转义指定符号，包括：<code>|;&amp;$()&gt;&lt;`!</code></p></li><li><p>使用<code>child_process.spawn</code> 或<code>child_process.execFile</code>时，应校验传入的命令和参数在可控列表内。</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Router</span> = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>).<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">const</span> validator = <span class="built_in">require</span>(<span class="string">&quot;validator&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; exec &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// bad：未限定或过滤，直接执行命令</span></span><br><span class="line"><span class="title class_">Router</span>.<span class="title function_">get</span>(<span class="string">&quot;/vul_cmd_inject&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> txt = req.<span class="property">query</span>.<span class="property">txt</span> || <span class="string">&quot;echo 1&quot;</span>;</span><br><span class="line"><span class="title function_">exec</span>(txt, <span class="function">(<span class="params">err, stdout, stderr</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (err) &#123; res.<span class="title function_">send</span>(&#123; <span class="attr">err</span>: <span class="number">1</span> &#125;) &#125;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;stdout, stderr&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good：通过白名单，限定外部可执行命令范围</span></span><br><span class="line"><span class="title class_">Router</span>.<span class="title function_">get</span>(<span class="string">&quot;/not_vul_cmd_inject&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> txt = req.<span class="property">query</span>.<span class="property">txt</span> || <span class="string">&quot;echo 1&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> phone = req.<span class="property">query</span>.<span class="property">phone</span> || <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> cmdList = &#123;</span><br><span class="line">    <span class="attr">sendmsg</span>: <span class="string">&quot;./sendmsg &quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">if</span> (txt <span class="keyword">in</span> cmdList &amp;&amp; validator.<span class="title function_">isMobilePhone</span>(phone)) &#123;</span><br><span class="line">        <span class="title function_">exec</span>(cmdList[txt] + phone, <span class="function">(<span class="params">err, stdout, stderr</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (err) &#123; res.<span class="title function_">send</span>(&#123; <span class="attr">err</span>: <span class="number">1</span> &#125;) &#125;;</span><br><span class="line">          res.<span class="title function_">send</span>(&#123;stdout, stderr&#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="attr">err</span>: <span class="number">1</span>,</span><br><span class="line"><span class="attr">tips</span>: <span class="string">`you can use &#x27;<span class="subst">$&#123;<span class="built_in">Object</span>.keys(cmdList)&#125;</span>&#x27;`</span>,</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good：执行命令前，过滤/转义指定符号</span></span><br><span class="line"><span class="title class_">Router</span>.<span class="title function_">get</span>(<span class="string">&quot;/not_vul_cmd_inject&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> txt = req.<span class="property">query</span>.<span class="property">txt</span> || <span class="string">&quot;echo 1&quot;</span>;</span><br><span class="line">  <span class="keyword">let</span> phone = req.<span class="property">query</span>.<span class="property">phone</span> || <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> cmdList = &#123;</span><br><span class="line">    <span class="attr">sendmsg</span>: <span class="string">&quot;./sendmsg &quot;</span></span><br><span class="line">&#125;;</span><br><span class="line">phone = phone.<span class="title function_">replace</span>(<span class="regexp">/(\||;|&amp;|\$\(|\(|\)|&gt;|&lt;|\`|!)/gi</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (txt <span class="keyword">in</span> cmdList) &#123;</span><br><span class="line">        <span class="title function_">exec</span>(cmdList[txt] + phone, <span class="function">(<span class="params">err, stdout, stderr</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (err) &#123; res.<span class="title function_">send</span>(&#123; <span class="attr">err</span>: <span class="number">1</span> &#125;) &#125;;</span><br><span class="line">          res.<span class="title function_">send</span>(&#123;stdout, stderr&#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="attr">err</span>: <span class="number">1</span>,</span><br><span class="line"><span class="attr">tips</span>: <span class="string">`you can use &#x27;<span class="subst">$&#123;<span class="built_in">Object</span>.keys(cmdList)&#125;</span>&#x27;`</span>,</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>关联漏洞：高风险 - 任意命令执行</em></p><p><a id="2.1.3"></a></p><h4 id="1-3-文件操作"><a href="#1-3-文件操作" class="headerlink" title="1.3 文件操作"></a>1.3 文件操作</h4><p><strong>1.3.1 【必须】限定文件操作的后缀范围</strong></p><ul><li>按业务需求，使用白名单限定后缀范围。</li></ul><p><strong>1.3.2 【必须】校验并限定文件路径范围</strong></p><ul><li>应固定上传、访问文件的路径。若需要拼接外部可控变量值，检查是否包含<code>..</code>、<code>.</code>路径穿越字符。如存在，应拒绝。</li><li>使用<code>fs</code>模块下的函数方法时，应对第一个参数即路径部分做校验，检查是否包含路径穿越字符<code>.</code>或<code>..</code>。涉及方法包括但不限于：<code>fs.truncate</code>、<code>fs.truncateSync</code>、<code>fs.chown</code>、<code>fs.chownSync</code>、<code>fs.lchown</code>、<code>fs.lchownSync</code>、<code>fs.stat</code>、<code>fs.lchmodSync</code>、<code>fs.lstat</code>、<code>fs.statSync</code>、<code>fs.lstatSync</code>、<code>fs.readlink</code>、<code>fs.unlink</code>、<code>fs.unlinkSync</code>、<code>fs.rmdir</code>、<code>fs.rmdirSync</code>、<code>fs.mkdir</code>、<code>fs.mkdirSync</code>、<code>fs.readdir</code>、<code>fs.readdirSync</code>、<code>fs.openSync</code>、<code>fs.open</code>、<code>fs.createReadStream</code>、<code>fs.createWriteStream</code></li><li>使用express框架的<code>sendFile</code>方法时，应对第一个参数即路径部分做校验，检查是否包含路径穿越字符<code>.</code>或<code>..</code></li><li>校验时，应使用<code>path</code>模块处理前的路径参数值，或判断处理过后的路径是否穿越出了当前工作目录。涉及方法包括但不限于：<code>path.resolve</code>、<code>path.join</code>、<code>path.normalize</code>等</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> filename = req.<span class="property">query</span>.<span class="property">ufile</span>;</span><br><span class="line"><span class="keyword">let</span> root = <span class="string">&#x27;/data/ufile&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// bad：未检查文件名/路径</span></span><br><span class="line">fs.<span class="title function_">readFile</span>(root + filename, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`异步读取: <span class="subst">$&#123;data.toString()&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// bad：使用path处理过后的路径参数值做校验，仍可能有路径穿越风险</span></span><br><span class="line">filename = path.<span class="title function_">join</span>(root, filename);</span><br><span class="line"><span class="keyword">if</span> (filename.<span class="title function_">indexOf</span>(<span class="string">&quot;..&quot;</span>) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fs.<span class="title function_">readFile</span>(filename, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>());</span><br><span class="line">&#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good：检查了文件名/路径，是否包含路径穿越字符</span></span><br><span class="line"><span class="keyword">if</span> (filename.<span class="title function_">indexOf</span>(<span class="string">&quot;..&quot;</span>) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">filename = path.<span class="title function_">join</span>(root, filename);</span><br><span class="line">fs.<span class="title function_">readFile</span>(filename, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>());</span><br><span class="line">&#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>1.3.3 【必须】安全地处理上传文件名</strong></p><ul><li>将上传文件重命名为16位以上的随机字符串保存。</li><li>如需原样保留文件名，应检查是否包含<code>..</code>、<code>.</code>路径穿越字符。如存在，应拒绝。</li></ul><p><strong>1.3.4 【必须】敏感资源文件，应有加密、鉴权和水印等加固措施</strong></p><ul><li>用户上传的<code>身份证</code>、<code>银行卡</code>等图片，属敏感资源文件，应采取安全加固。</li><li>指向此类文件的URL，应保证不可预测性；同时，确保无接口会批量展示此类资源的URL。</li><li>访问敏感资源文件时，应进行权限控制。默认情况下，仅用户可查看、操作自身敏感资源文件。</li><li>图片类文件应添加业务水印，表明该图片仅可用于当前业务使用。</li></ul><p><a id="2.1.4"></a></p><h4 id="1-4-网络请求"><a href="#1-4-网络请求" class="headerlink" title="1.4 网络请求"></a>1.4 网络请求</h4><p><strong>1.4.1 【必须】限定访问网络资源地址范围</strong></p><ul><li><p>应固定程序访问网络资源地址的<code>协议</code>、<code>域名</code>、<code>路径</code>范围。</p></li><li><p>若业务需要，外部可指定访问网络资源地址，应禁止访问内网私有地址段及域名。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 以RFC定义的专有网络为例，如有自定义私有网段亦应加入禁止访问列表。</span><br><span class="line">10.0.0.0/8</span><br><span class="line">172.16.0.0/12</span><br><span class="line">192.168.0.0/16</span><br><span class="line">127.0.0.0/8</span><br></pre></td></tr></table></figure><p><strong>1.4.2 【推荐】请求网络资源，应加密传输</strong></p><ul><li>应优先选用https协议请求网络资源</li></ul><p><em>关联漏洞：高风险 - SSRF，高风险 - HTTP劫持</em></p><p><a id="2.1.5"></a></p><h4 id="1-5-数据输出"><a href="#1-5-数据输出" class="headerlink" title="1.5 数据输出"></a>1.5 数据输出</h4><p><strong>1.5.1 【必须】高敏感信息禁止存储、展示</strong></p><ul><li>口令、密保答案、生理标识等鉴权信息禁止展示</li><li>非金融类业务，信用卡cvv码及日志禁止存储</li></ul><p><strong>1.5.2【必须】一般敏感信息脱敏展示</strong></p><ul><li>身份证只显示第一位和最后一位字符，如：<code>3*********************1</code></li><li>移动电话号码隐藏中间6位字符，如：<code>134***************48</code></li><li>工作地址&#x2F;家庭地址最多显示到<code>区</code>一级</li><li>银行卡号仅显示最后4位字符，如：<code>*********************8639</code></li></ul><p><strong>1.5.3 【推荐】返回的字段按业务需要输出</strong></p><ul><li>按需输出，避免不必要的用户信息泄露</li><li>用户敏感数据应在服务器后台处理后输出，不可以先输出到客户端，再通过客户端代码来处理展示</li></ul><p><em>关联漏洞：高风险 - 用户敏感信息泄露</em></p><p><a id="2.1.6"></a></p><h4 id="1-6-响应输出"><a href="#1-6-响应输出" class="headerlink" title="1.6 响应输出"></a>1.6 响应输出</h4><p><strong>1.6.1 【必须】设置正确的HTTP响应包类型</strong></p><ul><li>响应头Content-Type与实际响应内容，应保持一致。如：API响应数据类型是json，则响应头使用<code>application/json</code>；若为xml，则设置为<code>text/xml</code>。</li></ul><p><strong>1.6.2 【必须】添加安全响应头</strong></p><ul><li>所有接口、页面，添加响应头 <code>X-Content-Type-Options: nosniff</code>。</li><li>所有接口、页面，添加响应头<code>X-Frame-Options </code>。按需合理设置其允许范围，包括：<code>DENY</code>、<code>SAMEORIGIN</code>、<code>ALLOW-FROM origin</code>。用法参考：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/X-Frame-Options">MDN文档</a></li><li>推荐使用组件： <a href="https://www.npmjs.com/package/helmet">helmet</a></li></ul><p><strong>1.6.3 【必须】外部输入拼接到响应页面前，进行编码处理</strong></p><table><thead><tr><th>场景</th><th>编码规则</th></tr></thead><tbody><tr><td>输出点在HTML标签之间</td><td>需要对以下6个特殊字符进行HTML实体编码(&amp;, &lt;, &gt;, “, ‘,&#x2F;)。<br>示例：<br>&amp; –&gt; &amp;amp;<br>&lt; –&gt; &amp;lt;<br>&gt;–&gt; &amp;gt;<br>“ –&gt; &amp;quot;<br>‘ –&gt; &amp;#x27;  <br>&#x2F; –&gt; &amp;#x2F;</td></tr><tr><td>输出点在HTML标签普通属性内（如href、src、style等，on事件除外）</td><td>要对数据进行HTML属性编码。<br>编码规则：除了阿拉伯数字和字母，对其他所有的字符进行编码，只要该字符的ASCII码小于256。编码后输出的格式为&amp;#xHH;(以&amp;#x开头，HH则是指该字符对应的十六进制数字，分号作为结束符)</td></tr><tr><td>输出点在JS内的数据中</td><td>需要进行js编码<br>编码规则：<br>除了阿拉伯数字和字母，对其他所有的字符进行编码，只要该字符的ASCII码小于256。编码后输出的格式为 \xHH （以 \x 开头，HH则是指该字符对应的十六进制数字）<br>Tips：这种场景仅限于外部数据拼接在js里被引号括起来的变量值中。除此之外禁止直接将代码拼接在js代码中。</td></tr><tr><td>输出点在CSS中（Style属性）</td><td>需要进行CSS编码<br>编码规则：<br>除了阿拉伯数字和字母，对其他所有的字符进行编码，只要该字符的ASCII码小于256。编码后输出的格式为 \HH （以 \ 开头，HH则是指该字符对应的十六进制数字）</td></tr><tr><td>输出点在URL属性中</td><td>对这些数据进行URL编码<br>Tips：除此之外，所有链接类属性应该校验其协议。禁止JavaScript、data和Vb伪协议。</td></tr></tbody></table><p><strong>1.6.4 【必须】响应禁止展示物理资源、程序内部代码逻辑等敏感信息</strong></p><ul><li>业务生产（正式）环境，应用异常时，响应内容禁止展示敏感信息。包括但不限于：<code>物理路径</code>、<code>程序内部源代码</code>、<code>调试日志</code>、<code>内部账号名</code>、<code>内网ip地址</code>等。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// bad</span><br><span class="line">Access denied for user &#x27;xxx&#x27;@&#x27;xx.xxx.xxx.162&#x27; (using password: NO)&quot;</span><br></pre></td></tr></table></figure><p><strong>1.6.5 【推荐】添加安全纵深防御措施</strong></p><ul><li>部署CSP，规则中应引入最新的严格模式特性<code>nonce-</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// good：使用helmet组件安全地配置响应头</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> helmet = <span class="built_in">require</span>(<span class="string">&quot;helmet&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">helmet</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// good：正确配置Content-Type、添加了安全响应头，引入了CSP</span></span><br><span class="line"><span class="title class_">Router</span>.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">res.<span class="title function_">header</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">res.<span class="title function_">header</span>(<span class="string">&quot;X-Content-Type-Options&quot;</span>, <span class="string">&quot;nosniff&quot;</span>);</span><br><span class="line">res.<span class="title function_">header</span>(<span class="string">&quot;X-Frame-Options&quot;</span>, <span class="string">&quot;SAMEORIGIN&quot;</span>);</span><br><span class="line">res.<span class="title function_">header</span>(<span class="string">&quot;Content-Security-Policy&quot;</span>, <span class="string">&quot;script-src &#x27;self&#x27;&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><em>关联漏洞：中风险 - XSS、中风险 - 跳转漏洞</em></p><p><a id="2.1.7"></a></p><h4 id="1-7-执行代码"><a href="#1-7-执行代码" class="headerlink" title="1.7 执行代码"></a>1.7 执行代码</h4><p><strong>1.7.1 【必须】安全的代码执行方式</strong></p><ul><li>禁止使用 <code>eval</code> 函数</li><li>禁止使用<code>new Function(&quot;input&quot;)()</code> 来创建函数</li><li>使用 <code>setInteval</code>，<code>setTimeout</code>，应校验传入的参数</li></ul><p><em>关联漏洞：高风险 - 代码执行漏洞</em></p><p><a id="2.1.8"></a></p><h4 id="1-8-Web跨域"><a href="#1-8-Web跨域" class="headerlink" title="1.8 Web跨域"></a>1.8 Web跨域</h4><p><strong>1.8.1 【必须】限定JSONP接口的callback字符集范围</strong></p><ul><li>JSONP接口的callback函数名为固定白名单。如callback函数名可用户自定义，应限制函数名仅包含 字母、数字和下划线。如：<code>[a-zA-Z0-9_-]+</code></li></ul><p><strong>1.8.2 【必须】安全的CORS配置</strong></p><ul><li>使用CORS，应对请求头Origin值做严格过滤、校验。具体来说，可以使用“全等于”判断，或使用严格的正则进行判断。如：<code>^https://domain\.qq\.com$</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// good：使用全等于，校验请求的Origin</span></span><br><span class="line"><span class="keyword">if</span> (req.<span class="property">headers</span>.<span class="property">origin</span> === <span class="string">&#x27;https://domain.qq.com&#x27;</span>) &#123;</span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, req.<span class="property">headers</span>.<span class="property">origin</span>);</span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>关联漏洞：中风险 - XSS，中风险 - CSRF，中风险 - CORS配置不当</em></p><p><a id="2.1.9"></a></p><h4 id="1-9-SQL操作"><a href="#1-9-SQL操作" class="headerlink" title="1.9 SQL操作"></a>1.9 SQL操作</h4><p><strong>1.9.1 【必须】SQL语句默认使用预编译并绑定变量</strong></p><ul><li><p>应使用预编译绑定变量的形式编写sql语句，保持查询语句和数据相分离</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bad：拼接SQL语句查询，存在安全风险</span></span><br><span class="line"><span class="keyword">const</span> mysql  = <span class="built_in">require</span>(<span class="string">&quot;mysql&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> connection = mysql.<span class="title function_">createConnection</span>(options);</span><br><span class="line">connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sql = util.<span class="title function_">format</span>(<span class="string">&quot;SELECT * from some_table WHERE Id = %s and Name = %s&quot;</span>, req.<span class="property">body</span>.<span class="property">id</span>, req.<span class="property">body</span>.<span class="property">name</span>);</span><br><span class="line">connection.<span class="title function_">query</span>(sql, <span class="function">(<span class="params">err, result</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// handle err..</span></span><br><span class="line">&#125;);  </span><br><span class="line"></span><br><span class="line"><span class="comment">// good：使用预编译绑定变量构造SQL语句</span></span><br><span class="line"><span class="keyword">const</span> mysql  = <span class="built_in">require</span>(<span class="string">&quot;mysql&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> connection = mysql.<span class="title function_">createConnection</span>(options);</span><br><span class="line">connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sql = <span class="string">&quot;SELECT * from some_table WHERE Id = ? and Name = ?&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> sqlParams = [req.<span class="property">body</span>.<span class="property">id</span>, req.<span class="property">body</span>.<span class="property">name</span>];</span><br><span class="line">connection.<span class="title function_">query</span>(sql, sqlParams, <span class="function">(<span class="params">err, result</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// handle err..</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>对于表名、列名等无法进行预编译的场景，如：<code>__user_input__</code> 拼接到比如 <code>limit</code>, <code>order by</code>, <code>group by</code> , <code>from tablename</code>语句中。请使用以下方法：</p><p><em>方案1：使用白名单校验表名&#x2F;列名</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">const</span> tableSuffix = req.<span class="property">body</span>.<span class="property">type</span>;</span><br><span class="line"><span class="keyword">if</span> ([<span class="string">&quot;expected1&quot;</span>, <span class="string">&quot;expected2&quot;</span>].<span class="title function_">indexOf</span>(tableSuffix) &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">// 不在表名白名单中，拒绝请求</span></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> sql = <span class="string">`SELECT * from t_business_<span class="subst">$&#123;tableSuffix&#125;</span>`</span>;</span><br><span class="line">connection.<span class="title function_">query</span>(sql, <span class="function">(<span class="params">err, result</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// handle err..</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><em>方案2：使用反引号包裹表名&#x2F;列名，并过滤 <code>__user_input__</code> 中的反引号</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">let</span> &#123; orderType &#125; = req.<span class="property">body</span>;</span><br><span class="line"><span class="comment">// 过滤掉__user_input__中的反引号</span></span><br><span class="line">orderType = orderType.<span class="title function_">replace</span>(<span class="string">&quot;`&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> sql = util.<span class="title function_">format</span>(<span class="string">&quot;SELECT * from t_business_feeds order by `%s`&quot;</span>, orderType);</span><br><span class="line">connection.<span class="title function_">query</span>(sql, <span class="function">(<span class="params">err, result</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// handle err..</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><em>方案3：将 <code>__user_input__</code> 转换为整数</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">let</span> &#123; orderType &#125; = req.<span class="property">body</span>;</span><br><span class="line"><span class="comment">// 强制转换为整数</span></span><br><span class="line">orderType = <span class="built_in">parseInt</span>(orderType, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">const</span> sql = <span class="string">`SELECT * from t_business_feeds order by <span class="subst">$&#123;orderType&#125;</span>`</span>;</span><br><span class="line">connection.<span class="title function_">query</span>(sql, <span class="function">(<span class="params">err, result</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// handle err..</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><p><strong>1.9.2 【必须】安全的ORM操作</strong></p><ul><li><p>使用安全的ORM组件进行数据库操作。如 <code>sequelize</code> 等</p></li><li><p>禁止<code>__user_input__</code>以拼接的方式直接传入ORM的各类raw方法</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//bad: adonisjs ORM</span></span><br><span class="line"><span class="comment">//参考：https://adonisjs.com/docs/3.2/security-introduction#_sql_injection</span></span><br><span class="line"><span class="keyword">const</span> username = request.<span class="title function_">param</span>(<span class="string">&quot;username&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> users = <span class="keyword">yield</span> <span class="title class_">Database</span></span><br><span class="line">  .<span class="title function_">table</span>(<span class="string">&quot;users&quot;</span>)</span><br><span class="line">  .<span class="title function_">where</span>(<span class="title class_">Database</span>.<span class="title function_">raw</span>(<span class="string">`username = <span class="subst">$&#123;username&#125;</span>`</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//good: adonisjs ORM</span></span><br><span class="line"><span class="keyword">const</span> username = request.<span class="title function_">param</span>(<span class="string">&quot;username&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> users = <span class="keyword">yield</span> <span class="title class_">Database</span></span><br><span class="line">  .<span class="title function_">table</span>(<span class="string">&#x27;users&#x27;</span>)</span><br><span class="line">  .<span class="title function_">where</span>(<span class="title class_">Database</span>.<span class="title function_">raw</span>(<span class="string">&quot;username = ?&quot;</span>, [username]));</span><br></pre></td></tr></table></figure><ul><li>使用ORM进行Update&#x2F;Insert操作时，应限制操作字段范围</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">good</span></span><br><span class="line"><span class="comment">假设该api用于插入用户的基本信息，使用传入的req.body通过Sequelize的create方法实现</span></span><br><span class="line"><span class="comment">假设User包含字段：username,email,isAdmin，</span></span><br><span class="line"><span class="comment">其中,isAdmin将会用于是否系统管理员的鉴权，默认值为false</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// Sequelize: 只允许变更username、email字段值</span></span><br><span class="line"><span class="title class_">User</span>.<span class="title function_">create</span>(req.<span class="property">body</span>, &#123; <span class="attr">fields</span>: [<span class="string">&quot;username&quot;</span>, <span class="string">&quot;email&quot;</span>] &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">user</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// handle the rest..</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p><strong>为什么要这么做？</strong><br>在上述案例中，若不限定fields值，攻击者将可传入<code>&#123;&quot;username&quot;:&quot;boo&quot;,&quot;email&quot;:&quot;foo@boo.com&quot;,&quot;isAdmin&quot;:true&#125;</code>将自己变为<code>Admin</code>，产生垂直越权漏洞。</p></blockquote><p><em>关联漏洞：高风险 - SQL注入，中风险 - Mass Assignment 逻辑漏洞</em></p><p><a id="2.1.10"></a></p><h4 id="1-10-NoSQL操作"><a href="#1-10-NoSQL操作" class="headerlink" title="1.10 NoSQL操作"></a>1.10 NoSQL操作</h4><p><strong>1.10.1 【必须】校验参数值类型</strong></p><ul><li>将HTTP参数值代入NoSQL操作前，应校验类型。如非功能需要，禁止对象（Object）类型传入。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bad：执行NOSQL操作前，未作任何判断</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">db.<span class="property">users</span>.<span class="title function_">find</span>(&#123; <span class="attr">username</span>: req.<span class="property">body</span>.<span class="property">username</span>, <span class="attr">password</span>: req.<span class="property">body</span>.<span class="property">password</span> &#125;, <span class="function">(<span class="params">err, users</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// **<span class="doctag">TODO:</span>** handle the rest</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good：在进入nosql前先判断`__USER_INPUT__`是否为字符串。</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (req.<span class="property">body</span>.<span class="property">username</span> &amp;&amp; <span class="keyword">typeof</span> req.<span class="property">body</span>.<span class="property">username</span> !== <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;username must be a string&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (req.<span class="property">body</span>.<span class="property">password</span> &amp;&amp; <span class="keyword">typeof</span> req.<span class="property">body</span>.<span class="property">password</span> !== <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;password must be a string&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">db.<span class="property">users</span>.<span class="title function_">find</span>(&#123; <span class="attr">username</span>: req.<span class="property">body</span>.<span class="property">username</span>, <span class="attr">password</span>: req.<span class="property">body</span>.<span class="property">password</span> &#125;, <span class="function">(<span class="params">err, users</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// **<span class="doctag">TODO:</span>** handle the rest</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p><strong>为什么要这么做？</strong></p><p>JavaScript中，从http或socket接收的数据可能不是单纯的字符串，而是被黑客精心构造的对象(Object)。在本例中：</p><ul><li>期望接收的POST数据：<code>username=foo&amp;password=bar</code> </li><li>期望的等价条件查询sql语句：<code>select * from users where username = &#39;foo&#39; and password = &#39;bar&#39;</code></li><li>黑客的精心构造的攻击POST数据：<code>username[$ne]=null&amp;password[$ne]=null</code>或JSON格式：<code>&#123;&quot;username&quot;: &#123;&quot;$ne&quot;: null&#125;,&quot;password&quot;: &#123;&quot;$ne&quot;: null&#125;&#125;</code></li><li>黑客篡改后的等价条件查询sql语句：<code>select * from users where username != null &amp; password != null</code></li><li>黑客攻击结果：绕过正常逻辑，在不知道他人的username&#x2F;password的情况登录他人账号。</li></ul></blockquote><p><strong>1.10.2 【必须】NoSQL操作前，应校验权限&#x2F;角色</strong></p><ul><li>执行NoSQL增、删、改、查逻辑前，应校验权限</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用express、mongodb(mongoose)实现的删除文章demo</span></span><br><span class="line"><span class="comment">// bad：在删除文章前未做权限校验</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/deleteArticle&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">db.<span class="property">articles</span>.<span class="title function_">deleteOne</span>(&#123; <span class="attr">article_id</span>: req.<span class="property">body</span>.<span class="property">article_id</span> &#125;, <span class="function">(<span class="params">err, users</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> handle the rest</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good：进入nosql语句前先进行权限校验</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/deleteArticle&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="title function_">checkPriviledge</span>(ctx.<span class="property">uin</span>, req.<span class="property">body</span>.<span class="property">article_id</span>);</span><br><span class="line">db.<span class="property">articles</span>.<span class="title function_">deleteOne</span>(&#123; <span class="attr">article_id</span>: req.<span class="property">body</span>.<span class="property">article_id</span> &#125;, <span class="function">(<span class="params">err, users</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> handle the rest</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><em>关联漏洞：高风险 - 越权操作，高风险 - NoSQL注入</em></p><p><a id="2.1.11"></a></p><h4 id="1-11-服务器端渲染（SSR）"><a href="#1-11-服务器端渲染（SSR）" class="headerlink" title="1.11 服务器端渲染（SSR）"></a>1.11 服务器端渲染（SSR）</h4><p><strong>1.11.1 【必须】安全的Vue服务器端渲染(Vue SSR)</strong></p><ul><li><p>禁止直接将不受信的外部内容传入<code>&#123;&#123;&#123; data &#125;&#125;&#125;</code>表达式中</p></li><li><p>模板内容禁止被污染</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bad: 将用户输入替换进模板</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line"><span class="attr">template</span>: appTemplate.<span class="title function_">replace</span>(<span class="string">&quot;word&quot;</span>, __USER_INPUT__),</span><br><span class="line">&#125;);</span><br><span class="line">renderer.<span class="title function_">renderToString</span>(app);</span><br></pre></td></tr></table></figure><ul><li>对已渲染的HTML文本内容（renderToString后的html内容）。如需再拼不受信的外部输入，应先进行安全过滤，具体请参考<strong>1.6.3</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bad: 渲染后的html再拼接不受信的外部输入</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>((<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">renderer.<span class="title function_">renderToString</span>(component, <span class="function">(<span class="params">err, html</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> htmlOutput = html;</span><br><span class="line">htmlOutput += <span class="string">`<span class="subst">$&#123;__USER_INPUT__&#125;</span>`</span>;</span><br><span class="line"><span class="title function_">resolve</span>(htmlOutput);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><p><strong>1.11.2 【必须】安全地使用EJS、LoDash、UnderScore进行服务器端渲染</strong></p><ul><li><p>使用render函数时，模板内容禁止被污染</p><p>lodash.Template:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bad: 将用户输入送进模板</span></span><br><span class="line"><span class="keyword">const</span> compiled = _.<span class="title function_">template</span>(<span class="string">`&lt;b&gt;<span class="subst">$&#123;__USER_INPUT__&#125;</span>&lt;%- value %&gt;&lt;/b&gt;`</span>);</span><br><span class="line"><span class="title function_">compiled</span>(&#123; <span class="attr">value</span>: <span class="string">&quot;hello&quot;</span> &#125;);</span><br></pre></td></tr></table></figure><p>ejs:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bad: 将用户输入送进模板</span></span><br><span class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">&quot;ejs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> people = [<span class="string">&quot;geddy&quot;</span>, <span class="string">&quot;neil&quot;</span>, <span class="string">&quot;alex&quot;</span>];</span><br><span class="line"><span class="keyword">const</span> html = ejs.<span class="title function_">render</span>(<span class="string">`&lt;%= people.join(&quot;, &quot;); %&gt;<span class="subst">$&#123;__USER_INPUT__&#125;</span>`</span>, &#123; people &#125;);</span><br></pre></td></tr></table></figure></li><li><p>Ejs、LoDash、UnderScore提供的HTML插值模板默认形似<code>&lt;%= data %&gt;</code>，尽管在默认情况下<code>&lt;%= data %&gt;</code>存在过滤，在编写HTML插值模板时需注意:</p><ol><li>用户输入流入html属性值时，必须使用双引号包裹：<code>&lt;base data-id = &quot;&lt;%= __USER_INPUT__ %&gt;&quot;&gt;</code></li><li>用户输入流入<code>&lt;script&gt;&lt;/script&gt;</code>标签或on*的html属性中时，如<code>&lt;script&gt;var id = &lt;%= __USER_INPUT__ %&gt;&lt;/script&gt;</code> ，须按照1.6.3中的做法或白名单方法进行过滤，框架&#x2F;组件的过滤在此处不起作用</li></ol></li></ul><p><strong>1.11.3 【必须】在自行实现状态存储容器并将其JSON.Stringify序列化后注入到HTML时，必须进行安全过滤</strong></p><p><a id="2.1.12"></a></p><h4 id="1-12-URL跳转"><a href="#1-12-URL跳转" class="headerlink" title="1.12 URL跳转"></a>1.12 URL跳转</h4><p><strong>1.12.1【必须】限定跳转目标地址</strong></p><ul><li>适用场景包括：</li></ul><ol><li>使用30x返回码并在Header中设置Location进行跳转</li><li>在返回页面中打印<code>&lt;script&gt;location.href=__Redirection_URL__&lt;/script&gt;</code></li></ol><ul><li>使用白名单，限定重定向地址的协议前缀（默认只允许HTTP、HTTPS）、域名（默认只允许公司根域），或指定为固定值；</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用express实现的登录成功后的回调跳转页面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// bad: 未校验页面重定向地址</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 若未登录用户访问其他页面，则让用户导向到该处理函数进行登录</span></span><br><span class="line">  <span class="comment">// 使用参数loginCallbackUrl记录先前尝试访问的url，在登录成功后跳转回loginCallbackUrl:</span></span><br><span class="line"><span class="keyword">const</span> &#123; loginCallbackUrl &#125; = req.<span class="property">query</span>;</span><br><span class="line"><span class="keyword">if</span> (loginCallbackUrl) &#123;</span><br><span class="line">    res.<span class="title function_">redirect</span>(loginCallbackUrl);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good: 白名单限定重定向地址</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isValidURL</span>(<span class="params">sUrl</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> !!((<span class="regexp">/^(https?:\/\/)?[\w\-.]+\.(qq|tencent)\.com($|\/|\\)/i</span>).<span class="title function_">test</span>(sUrl) || (<span class="regexp">/^[\w][\w/.\-_%]+$/i</span>).<span class="title function_">test</span>(sUrl) || (<span class="regexp">/^[/\\][^/\\]/i</span>).<span class="title function_">test</span>(sUrl));</span><br><span class="line">&#125;</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 若未登录用户访问其他页面，则让用户导向到该处理函数进行登录</span></span><br><span class="line">  <span class="comment">// 使用参数loginCallbackUrl记录先前尝试访问的url，在登录成功后跳转回loginCallbackUrl:</span></span><br><span class="line"><span class="keyword">const</span> &#123; loginCallbackUrl &#125; = req.<span class="property">query</span>;</span><br><span class="line"><span class="keyword">if</span> (loginCallbackUrl &amp;&amp; <span class="title function_">isValidUrl</span>(loginCallbackUrl)) &#123;</span><br><span class="line">    res.<span class="title function_">redirect</span>(loginCallbackUrl);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good: 白名单限定重定向地址，通过返回html实现</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isValidURL</span>(<span class="params">sUrl</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> !!((<span class="regexp">/^(https?:\/\/)?[\w\-.]+\.(qq|tencent)\.com($|\/|\\)/i</span>).<span class="title function_">test</span>(sUrl) || (<span class="regexp">/^[\w][\w/.\-_%]+$/i</span>).<span class="title function_">test</span>(sUrl) || (<span class="regexp">/^[/\\][^/\\]/i</span>).<span class="title function_">test</span>(sUrl));</span><br><span class="line">&#125;</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 若未登录用户访问其他页面，则让用户导向到该处理函数进行登录</span></span><br><span class="line">  <span class="comment">// 使用参数loginCallbackUrl记录先前尝试访问的url，在登录成功后跳转回loginCallbackUrl:</span></span><br><span class="line"><span class="keyword">const</span> &#123; loginCallbackUrl &#125; = req.<span class="property">query</span>;</span><br><span class="line"><span class="keyword">if</span> (loginCallbackUrl &amp;&amp; <span class="title function_">isValidUrl</span>(loginCallbackUrl)) &#123;</span><br><span class="line"><span class="comment">// 使用encodeURI，过滤左右尖括号与双引号，防止逃逸出包裹的双引号</span></span><br><span class="line"><span class="keyword">const</span> redirectHtml = <span class="string">`&lt;script&gt;location.href = &quot;<span class="subst">$&#123;<span class="built_in">encodeURI</span>(loginCallbackUrl)&#125;</span>&quot;;&lt;/script&gt;`</span>;</span><br><span class="line">    res.<span class="title function_">end</span>(redirectHtml);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><em>关联漏洞：中风险 - 任意URL跳转漏洞</em></p><p><a id="2.1.13"></a></p><h4 id="1-13-Cookie与登录态"><a href="#1-13-Cookie与登录态" class="headerlink" title="1.13 Cookie与登录态"></a>1.13 Cookie与登录态</h4><p><strong>1.13.1【推荐】为Cookies中存储的关键登录态信息添加http-only保护</strong></p><p><em>关联漏洞：纵深防护措施 - 安全性增强特性</em></p><p><a id="2.2"></a></p><h3 id="II-配置-amp-环境-1"><a href="#II-配置-amp-环境-1" class="headerlink" title="II. 配置&amp;环境"></a>II. 配置&amp;环境</h3><p><a id="2.2.1"></a></p><h4 id="2-1-依赖库"><a href="#2-1-依赖库" class="headerlink" title="2.1 依赖库"></a>2.1 依赖库</h4><p><strong>2.1.1【必须】使用安全的依赖库</strong></p><ul><li>使用自动工具，检查依赖库是否存在后门&#x2F;漏洞，保持最新版本</li></ul><p><a id="2.2.2"></a></p><h4 id="2-2-运行环境"><a href="#2-2-运行环境" class="headerlink" title="2.2 运行环境"></a>2.2 运行环境</h4><p><strong>2.2.1 【必须】使用非root用户运行Node.js</strong></p><p><a id="2.2.3"></a></p><h4 id="2-3-配置信息"><a href="#2-3-配置信息" class="headerlink" title="2.3 配置信息"></a>2.3 配置信息</h4><p><strong>2.3.1【必须】禁止硬编码认证凭证</strong></p><ul><li>禁止在源码中硬编码<code>AK/SK</code>、<code>数据库账密</code>、<code>私钥证书</code>等配置信息</li><li>应使用配置系统或KMS密钥管理系统。</li></ul><p><strong>2.3.2【必须】禁止硬编码IP配置</strong></p><ul><li>禁止在源码中硬编码<code>IP</code>信息</li></ul><blockquote><p><strong>为什么要这么做？</strong></p><p>硬编码IP可能会导致后续机器裁撤或变更时产生额外的工作量，影响系统的可靠性。</p></blockquote><p><strong>2.3.3【必须】禁止硬编码员工敏感信息</strong></p><ul><li>禁止在源代码中含员工敏感信息，包括但不限于：<code>员工ID</code>、<code>手机号</code>、<code>微信/QQ号</code>等。</li></ul>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>辅助学习工具</title>
      <link href="/2023/05/16/%E8%BE%85%E5%8A%A9%E5%AD%A6%E4%B9%A0%E5%B7%A5%E5%85%B7/"/>
      <url>/2023/05/16/%E8%BE%85%E5%8A%A9%E5%AD%A6%E4%B9%A0%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="1-刷题网站"><a href="#1-刷题网站" class="headerlink" title="1.刷题网站"></a>1.刷题网站</h2><h3 id="1-数据结构与算法动态可视化"><a href="#1-数据结构与算法动态可视化" class="headerlink" title="1.数据结构与算法动态可视化"></a>1.数据结构与算法动态可视化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://visualgo.net/zh</span><br></pre></td></tr></table></figure><h3 id="2-Javascript-30练习"><a href="#2-Javascript-30练习" class="headerlink" title="2.Javascript-30练习"></a>2.Javascript-30练习</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://javascript30.com/</span><br></pre></td></tr></table></figure><h3 id="3-100dayscss-100个练习css"><a href="#3-100dayscss-100个练习css" class="headerlink" title="3.100dayscss-100个练习css"></a>3.100dayscss-100个练习css</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://100dayscss.com/</span><br></pre></td></tr></table></figure><h3 id="4-力扣（LeetCode）刷题"><a href="#4-力扣（LeetCode）刷题" class="headerlink" title="4.力扣（LeetCode）刷题"></a>4.力扣（LeetCode）刷题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://leetcode.cn/problemset/all/</span><br></pre></td></tr></table></figure><h3 id="5-清览题库"><a href="#5-清览题库" class="headerlink" title="5.清览题库"></a>5.清览题库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.qingline.net/</span><br></pre></td></tr></table></figure><h3 id="6-炼码（LintCode）刷题"><a href="#6-炼码（LintCode）刷题" class="headerlink" title="6.炼码（LintCode）刷题"></a>6.炼码（LintCode）刷题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.lintcode.com/problem/?typeId=16</span><br></pre></td></tr></table></figure><h3 id="7-PAT刷题"><a href="#7-PAT刷题" class="headerlink" title="7.PAT刷题"></a>7.PAT刷题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://pintia.cn/problem-sets/dashboard</span><br></pre></td></tr></table></figure><h2 id="2-开发工具"><a href="#2-开发工具" class="headerlink" title="2.开发工具"></a>2.开发工具</h2><h3 id="1-favicon制作"><a href="#1-favicon制作" class="headerlink" title="1.favicon制作"></a>1.favicon制作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://tool.lu/favicon/</span><br></pre></td></tr></table></figure><h3 id="2-Convertio-文件转换器"><a href="#2-Convertio-文件转换器" class="headerlink" title="2.Convertio-文件转换器"></a>2.Convertio-文件转换器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://convertio.co/zh/</span><br></pre></td></tr></table></figure><h3 id="3-在线图片格式转换器"><a href="#3-在线图片格式转换器" class="headerlink" title="3.在线图片格式转换器"></a>3.在线图片格式转换器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.gaitubao.com/jpg-gif-png</span><br></pre></td></tr></table></figure><h3 id="4-ALL-To-ALL-文件转换器"><a href="#4-ALL-To-ALL-文件转换器" class="headerlink" title="4.ALL To ALL-文件转换器"></a>4.ALL To ALL-文件转换器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.alltoall.net/</span><br></pre></td></tr></table></figure><h3 id="5-onlineconvertfree-文件转换器"><a href="#5-onlineconvertfree-文件转换器" class="headerlink" title="5.onlineconvertfree-文件转换器"></a>5.onlineconvertfree-文件转换器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://onlineconvertfree.com/zh/</span><br></pre></td></tr></table></figure><h3 id="6-Office-Converter-文件转换器"><a href="#6-Office-Converter-文件转换器" class="headerlink" title="6.Office-Converter 文件转换器"></a>6.Office-Converter 文件转换器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cn.office-converter.com/</span><br></pre></td></tr></table></figure><h2 id="3-背景图片与颜色搭配"><a href="#3-背景图片与颜色搭配" class="headerlink" title="3.背景图片与颜色搭配"></a>3.背景图片与颜色搭配</h2><h3 id="1-免费渐变背景css样式"><a href="#1-免费渐变背景css样式" class="headerlink" title="1.免费渐变背景css样式"></a>1.免费渐变背景css样式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://color.oulu.me/</span><br></pre></td></tr></table></figure><h3 id="2-中国风颜色搭配"><a href="#2-中国风颜色搭配" class="headerlink" title="2.中国风颜色搭配"></a>2.中国风颜色搭配</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://zhongguose.com/</span><br></pre></td></tr></table></figure><h3 id="3-ColorSpace-颜色搭配"><a href="#3-ColorSpace-颜色搭配" class="headerlink" title="3.ColorSpace-颜色搭配"></a>3.ColorSpace-颜色搭配</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mycolor.space/?hex=%23845EC2&amp;sub=1</span><br></pre></td></tr></table></figure><h3 id="4-Colors-颜色搭配"><a href="#4-Colors-颜色搭配" class="headerlink" title="4.Colors-颜色搭配"></a>4.Colors-颜色搭配</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://vanschneider.com/colors</span><br></pre></td></tr></table></figure><h3 id="5-觅元素-背景图片"><a href="#5-觅元素-背景图片" class="headerlink" title="5.觅元素-背景图片"></a>5.觅元素-背景图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.51yuansu.com/</span><br></pre></td></tr></table></figure><h3 id="6-极简壁纸-背景图片"><a href="#6-极简壁纸-背景图片" class="headerlink" title="6.极简壁纸-背景图片"></a>6.极简壁纸-背景图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://bz.zzzmh.cn/index</span><br></pre></td></tr></table></figure><h3 id="7-羊驼工具人-全能"><a href="#7-羊驼工具人-全能" class="headerlink" title="7.羊驼工具人-全能"></a>7.羊驼工具人-全能</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://ytloe.github.io/test-one/</span><br></pre></td></tr></table></figure><h4 id="好了，这是一些小编经常使用到的网站😍，希望对大家有所帮助！！！"><a href="#好了，这是一些小编经常使用到的网站😍，希望对大家有所帮助！！！" class="headerlink" title="好了，这是一些小编经常使用到的网站😍，希望对大家有所帮助！！！"></a>好了，这是一些小编经常使用到的网站😍，希望对大家有所帮助！！！</h4>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习利器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git学习</title>
      <link href="/2023/05/15/git%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/05/15/git%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="远程仓库的两种访问方式"><a href="#远程仓库的两种访问方式" class="headerlink" title="远程仓库的两种访问方式"></a>远程仓库的两种访问方式</h3><p>1.HTTPS:零配置；但是每次访问仓库时，需要重复输入Github的账号和密码</p><p>2.SSH:需要进行额外的配置；但是配置成功后每次访问仓库时，不需要重复输入Github的账号和密码</p><p>###<strong>1.上传代码到远程仓库步骤(基于HTTPS)：</strong></p><p>（1）使用New repository 创建一个新的仓库 </p><p>（2）在代码文件里先把文件放入git仓库然后运行git bash 输入新建仓库里的代码运行</p><h3 id="注意：当对文件进行了修改，想使Github的仓库也进行更新，可以在文件里使用git命令-git-push。"><a href="#注意：当对文件进行了修改，想使Github的仓库也进行更新，可以在文件里使用git命令-git-push。" class="headerlink" title="注意：当对文件进行了修改，想使Github的仓库也进行更新，可以在文件里使用git命令 git push。"></a>注意：当对文件进行了修改，想使Github的仓库也进行更新，可以在文件里使用git命令 <code>git push</code>。</h3><h3 id="2-上传代码到远程仓库步骤（基于SSH）："><a href="#2-上传代码到远程仓库步骤（基于SSH）：" class="headerlink" title="2.上传代码到远程仓库步骤（基于SSH）："></a>2.上传代码到远程仓库步骤（基于SSH）：</h3><p><code>SSH key</code> 作用：实现本地仓库和Github之间免登录的加密数据传输。</p><p> <code>SSH key</code> 好处：免登录身份认证，数据加密传输。</p><p><code>SSH key</code> 由两部分组成，分别是：</p><p>（1）id_rsa(私钥文件，存放与客户端的电脑中即可)</p><p>（2）id_rsa.pub(公钥文件，需要配置到Github中)</p><p><strong>步骤：</strong></p><p>（1）使用New repository 创建一个新的仓库 </p><p>（2）在代码文件里先把文件放入git仓库然后运行git bash 输入新建仓库里的代码运行</p><p>###注意：当对文件进行了修改，想使Github的仓库也进行更新，可以在文件里使用git命令 <code>git push</code>。</p><h3 id="附加：（配置SSH）"><a href="#附加：（配置SSH）" class="headerlink" title="附加：（配置SSH）"></a>附加：（配置SSH）</h3><p><code>(一)生成 SSH key</code></p><p>(1)打开 Git Bash</p><p>(2)运行 ssh-keygen -t rsa -b 4096 -C “注册Github账号的邮箱”</p><p>(3)连续敲击3次回车即可在c盘中.ssh目录中生成id_rsa 和 id_rsa.pub两个文件</p><p><code>(二)配置SSH key</code></p><p>(1)使用记事本打开id_rsa.pub文件，复制里面的文本内容</p><p>(2)在浏览器中打开Github, **点击头像-&gt;Settings-&gt;SSH and GPG Keys -&gt;New SSH key</p><p>(3)将 id_rsa.pub文件的内容，粘贴到Key对应的文本框中</p><p>(4)在Title文本框中任意填写一个名称，来标识这个Key从何而来</p><p><code>(三)检测Github的SSH key 是否配置成功</code></p><p>打开Git Bash 并输入 <code>ssh -T git@github.com</code>,后面输入yes 后看到有 <code>Hi MuQingYuan</code>的内容，说明配置成功。</p><h3 id="3-将远程仓库的文件克隆到本地"><a href="#3-将远程仓库的文件克隆到本地" class="headerlink" title="3.将远程仓库的文件克隆到本地"></a>3.将远程仓库的文件克隆到本地</h3><p><code>打开Git Bash,输入以下的命令并回车执行：</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 远程仓库的文件地址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客看板娘配置</title>
      <link href="/2023/05/14/%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/05/14/%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="在hexo的butterfly主题中开启看板娘"><a href="#在hexo的butterfly主题中开启看板娘" class="headerlink" title="在hexo的butterfly主题中开启看板娘"></a>在<a href="https://so.csdn.net/so/search?q=hexo&spm=1001.2101.3001.7020">hexo</a>的butterfly主题中开启看板娘</h2><p>官网地址配置：<a href="https://www.npmjs.com/package/hexo-helper-live2d">https://www.npmjs.com/package/hexo-helper-live2d</a></p><p>###1、安装依赖</p><p>卸载命令：npm uninstall hexo-helper-live2d<br>安装命令：npm install –save hexo-helper-live2d<br><strong>注意：</strong>命令都是在你的博客主目录执行</p><p>安装完成之后在package.json会看到安装的model</p><h3 id="2、下载各种动画model："><a href="#2、下载各种动画model：" class="headerlink" title="2、下载各种动画model："></a>2、下载各种动画model：</h3><p>地址：<a href="https://github.com/xiazeyu/[live2d](https://so.csdn.net/so/search?q=live2d&amp;spm=1001.2101.3001.7020)-widget-models.git">https://github.com/xiazeyu/[live2d](https://so.csdn.net/so/search?q=live2d&amp;spm=1001.2101.3001.7020)-widget-models.git</a></p><p>模型仓库 使用 <code>npm install &#123;packagename&#125;</code>命令进行下载</p><p><strong>模型选择：</strong></p><p>live2d-widget-model-chitose</p><p>live2d-widget-model-epsilon2_1</p><p>live2d-widget-model-gf</p><p>live2d-widget-model-haru&#x2F;01</p><p>live2d-widget-model-haru&#x2F;02</p><p>live2d-widget-model-haruto</p><p>live2d-widget-model-hibiki</p><p>live2d-widget-model-hijiki</p><p>live2d-widget-model-izumi</p><p>live2d-widget-model-koharu</p><p>live2d-widget-model-miku</p><p>live2d-widget-model-ni-j</p><p>live2d-widget-model-nico</p><p>live2d-widget-model-nietzsche</p><p>live2d-widget-model-nipsilon</p><p>live2d-widget-model-nito</p><p>live2d-widget-model-shizuku</p><p>live2d-widget-model-tororo</p><p>live2d-widget-model-tsumiki</p><p>live2d-widget-model-unitychan</p><p>live2d-widget-model-wanko</p><p>live2d-widget-model-z16</p><h3 id="3、配置博客站点配置文件-config-yml（根目录的）"><a href="#3、配置博客站点配置文件-config-yml（根目录的）" class="headerlink" title="3、配置博客站点配置文件_config.yml（根目录的）"></a>3、配置博客站点配置文件<code>_config.yml</code>（根目录的）</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-haruto</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span> <span class="comment">#动画位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">190</span></span><br><span class="line">    <span class="comment"># 位置配置，这个在左侧边栏位置很居中</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">30</span> <span class="comment"># 调节水平位置</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-5</span> <span class="comment"># 调节垂直位置</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment"># 是否在移动设备上显示</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0.5</span> <span class="comment"># 移动设备上的缩放</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">opacityOnHover:</span> <span class="number">0.8</span></span><br></pre></td></tr></table></figure><h3 id="4-各模型实例"><a href="#4-各模型实例" class="headerlink" title="4.各模型实例"></a>4.各模型实例</h3><p><strong>live2d-widget-model-haruto:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-haruto.png"></p><p><strong>live2d-widget-model-miku:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-miku.png"></p><p><strong>live2d-widget-model-epsilon2_1:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-epsilon2_1.png"></p><p><strong>live2d-widget-model-gf:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-gf.png"></p><p><strong>live2d-widget-model-hibiki:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-hibiki.png"></p><p><strong>live2d-widget-model-hijiki:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-hijiki.png"></p><p><strong>live2d-widget-model-izumi:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-izumi.png"></p><p><strong>live2d-widget-model-koharu:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-koharu.png"></p><p><strong>live2d-widget-model-chitose:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-chitose.png"></p><p><strong>live2d-widget-model-ni-j:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-ni-j.png"></p><p><strong>live2d-widget-model-nico:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-nico.png"></p><p><strong>live2d-widget-model-nietzsche:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-nietzsche.png"></p><p><strong>live2d-widget-model-nipsilon:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-nipsilon.png"></p><p><strong>live2d-widget-model-nito:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-nito.png"></p><p><strong>live2d-widget-model-shizuku:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-shizuku.png"></p><p><strong>live2d-widget-model-tororo:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-tororo.png"></p><p><strong>live2d-widget-model-tsumiki:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-tsumiki.png"></p><p><strong>live2d-widget-model-unitychan:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-unitychan.png"></p><p><strong>live2d-widget-model-wanko:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-wanko.png"></p><p><strong>live2d-widget-model-z16:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-z16.png"></p><h3 id="好了以上就是一些看板娘的配置，作者每一个都试了一试，个别人物没有效果，其他的都能用。后续更多的博客配置持续更新中-希望大家喜欢！😊"><a href="#好了以上就是一些看板娘的配置，作者每一个都试了一试，个别人物没有效果，其他的都能用。后续更多的博客配置持续更新中-希望大家喜欢！😊" class="headerlink" title="好了以上就是一些看板娘的配置，作者每一个都试了一试，个别人物没有效果，其他的都能用。后续更多的博客配置持续更新中~~希望大家喜欢！😊"></a>好了以上就是一些看板娘的配置，作者每一个都试了一试，个别人物没有效果，其他的都能用。后续更多的博客配置持续更新中~~希望大家喜欢！😊</h3>]]></content>
      
      
      <categories>
          
          <category> 博客配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git基本操作</title>
      <link href="/2023/05/13/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/05/13/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h2><ul><li><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p></li><li><p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p></li><li><p>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</p></li></ul><p>&#x3D;&#x3D;优缺点：&#x3D;&#x3D;</p><p>深究其<a href="https://so.csdn.net/so/search?q=%E5%88%86%E5%B8%83%E5%BC%8F&spm=1001.2101.3001.7020">分布式</a>版本<br>其集中式版本控制工具有缺点也有优点，可看到项目中内容管理，管理员也可管理单一系统也比较容易缺点就是中央服务器的单点故障</p><p>分布式的版本控制系统出现之后,解决了集中式版本控制系统的缺陷:</p><ol><li>服务器断网的情况下也可以进行开发（因为版本控制是在本地进行的）</li><li>每个客户端保存的也都是整个完整的项目（包含历史记录，更加安全）</li></ol><p>&#x3D;&#x3D;工作机制：&#x3D;&#x3D;<br>工作区：通过写好的代码，放在了磁盘区，不是特指编译器中的代码<br>临时存储：通过工作区<code>git add</code>放到此处<br>本地库：通过临时存储的<code>git commit</code>放到此处<br>远程库：通过本地库上传到远程库，代码托管中心是基于网络服务器的远程代码仓库</p><h2 id="2-下载安装"><a href="#2-下载安装" class="headerlink" title="2.下载安装"></a>2.下载安装</h2><h3 id="2-1下载"><a href="#2-1下载" class="headerlink" title="2.1下载"></a>2.1下载</h3><p>官网下载:<a href="https://git-scm.com/">https://git-scm.com</a></p><h3 id="2-2安装"><a href="#2-2安装" class="headerlink" title="2.2安装"></a>2.2安装</h3><p>在Windows上使用Git，可以从Git官网直接<a href="https://git-scm.com/downloads">下载安装程序</a>，然后按默认选项安装即可。</p><p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！</p><p>安装完成后，还需要最后一步设置，在命令行输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;自己的名字&quot;</span><br><span class="line">$ git config --global user.email &quot;自己邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。</p><p>注意git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p><h2 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用"></a>3.使用</h2><p>###3.1创建Git仓库(本地库)<br>什么是版本库呢？版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p><p>所以，创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><p>通过<code>git init</code>命令把这个目录变成Git可以管理的仓库。</p><p>###3.2向仓库添加文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add //向仓库中添加文件</span><br></pre></td></tr></table></figure><h3 id="3-3向仓库提交文件"><a href="#3-3向仓库提交文件" class="headerlink" title="3.3向仓库提交文件"></a>3.3向仓库提交文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &quot;提交的描述信息&quot; //m=message 本次提交的描述信息</span><br></pre></td></tr></table></figure><p>简单解释一下git commit命令，-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。</p><p>嫌麻烦不想输入-m “xxx”行不行？确实有办法可以这么干，但是强烈不建议你这么干，因为输入说明对自己对别人阅读都很重要。实在不想输入说明的童鞋请自行Google，我不告诉你这个参数。<br>###3.4查看Git 状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><ul><li>红色:工作区已修改并未添加到暂存区</li><li>绿色:工作区的修改已经添加到暂存区并未提交到版本库</li><li>nothing to commit, working tree clean 工作区与版本库保持一致</li></ul><h3 id="3-5查看Git提交版本"><a href="#3-5查看Git提交版本" class="headerlink" title="3.5查看Git提交版本"></a>3.5查看Git提交版本</h3><p>当然了，在实际工作中，我们脑子里怎么可能记得一个几千行的文件每次都改了什么内容，不然要版本控制系统干什么。版本控制系统肯定有某个命令可以告诉我们历史记录，在Git中，我们用<code>git log</code>命令查看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br></pre></td></tr></table></figure><p>git log命令显示从最近到最远的提交日志，我们可以看到3次提交，最近的一次是append GPL，上一次是add distributed，最早的一次是wrote a readme file。</p><p>如果嫌输出信息太多，看得眼花缭乱的，可以试试加上–pretty&#x3D;oneline参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --pretty=onelien  //一行展示</span><br></pre></td></tr></table></figure><h3 id="3-6版本回退"><a href="#3-6版本回退" class="headerlink" title="3.6版本回退"></a>3.6版本回退</h3><p>首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，也就是最新的提交1094adb…（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。</p><p>现在，我们要把当前版本append GPL回退到上一个版本add distributed，就可以使用git reset命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset</span><br></pre></td></tr></table></figure><h3 id="3-7删除文件"><a href="#3-7删除文件" class="headerlink" title="3.7删除文件"></a>3.7删除文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -rf bbb.txt //直接接上要删除文件名</span><br></pre></td></tr></table></figure><h2 id="4-分支管理"><a href="#4-分支管理" class="headerlink" title="4.分支管理"></a>4.分支管理</h2><h3 id="4-1创建分支"><a href="#4-1创建分支" class="headerlink" title="4.1创建分支"></a>4.1创建分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch XXX</span><br></pre></td></tr></table></figure><h3 id="4-2查看分支"><a href="#4-2查看分支" class="headerlink" title="4.2查看分支"></a>4.2查看分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><h3 id="4-3切换分支"><a href="#4-3切换分支" class="headerlink" title="4.3切换分支"></a>4.3切换分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout dev</span><br></pre></td></tr></table></figure><h3 id="4-4创建并切换分支"><a href="#4-4创建并切换分支" class="headerlink" title="4.4创建并切换分支"></a>4.4创建并切换分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b prod</span><br></pre></td></tr></table></figure><h3 id="4-5合并分支"><a href="#4-5合并分支" class="headerlink" title="4.5合并分支"></a>4.5合并分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge dev //注意:要将dev分支合并到master分支上,就在master分支执行此命令</span><br></pre></td></tr></table></figure><h3 id="4-6删除分支"><a href="#4-6删除分支" class="headerlink" title="4.6删除分支"></a>4.6删除分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d dev</span><br></pre></td></tr></table></figure><p>在实际开发中，我们应该按照几个基本原则进行分支管理：</p><p>首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；</p><p>那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；</p><p>你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。</p><h2 id="5-其他使用方法"><a href="#5-其他使用方法" class="headerlink" title="5.其他使用方法"></a>5.其他使用方法</h2><h3 id="5-1使用git给文件重命名"><a href="#5-1使用git给文件重命名" class="headerlink" title="5.1使用git给文件重命名"></a>5.1使用git给文件重命名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git mv 文件名 新的文件名</span><br><span class="line">例如：$ git mv files files.md</span><br></pre></td></tr></table></figure><h3 id="5-2通过图形界面工具查看版本历史"><a href="#5-2通过图形界面工具查看版本历史" class="headerlink" title="5.2通过图形界面工具查看版本历史"></a>5.2通过图形界面工具查看版本历史</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gitk</span><br></pre></td></tr></table></figure><p>形如：</p><img src="/2023/05/13/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/gitk.png" alt="gitk效果" style="zoom:30%;"><h3 id="5-3commit，tree和blob三个对象之间的关系"><a href="#5-3commit，tree和blob三个对象之间的关系" class="headerlink" title="5.3commit，tree和blob三个对象之间的关系"></a>5.3commit，tree和blob三个对象之间的关系</h3><p>形如：</p><img src="/2023/05/13/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/commit,tree,blob关联.png" alt="commit,tree和blob关联" style="zoom:30%;"><p>commit里面必定有一棵树tree，tree树里面还会有包含的树tree，同时tree树里面还有blob文件</p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的语法</title>
      <link href="/2023/01/04/%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/01/04/%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML与CSS知识</title>
      <link href="/2022/12/18/HTML%E4%B8%8ECSS%E7%9F%A5%E8%AF%86/"/>
      <url>/2022/12/18/HTML%E4%B8%8ECSS%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h3 id="HTML与CSS区别："><a href="#HTML与CSS区别：" class="headerlink" title="HTML与CSS区别："></a>HTML与CSS区别：</h3><p>  HTML:控制页面内容</p><p>  CSS:控制网页样式</p><h3 id="快捷键："><a href="#快捷键：" class="headerlink" title="快捷键："></a>快捷键：</h3><p>  ！+tab 生成html模板</p><p>  ctrl + &#x2F; 注释的快捷键</p><p>  . + 内容 + tab 生成名字为内容的容器</p><h3 id="认识标签："><a href="#认识标签：" class="headerlink" title="认识标签："></a>认识标签：</h3>  <!-- 标签：开始标签。结束标签 -->  <!-- 属性：在开始标签内部，用来描述标签内的内容 -->  <!--  --> ：html注释（注释不会被看到）  <title> 网页标题 </title>  <body> 网页内容 </body><h3 id="常用的html标签："><a href="#常用的html标签：" class="headerlink" title="常用的html标签："></a>常用的html标签：</h3><h4 id="标题标签："><a href="#标题标签：" class="headerlink" title="标题标签："></a>标题标签：</h4><p>​</p><h1></h1> :一级标签，常用于标题<p></p><p>​    </p><h2></h2><p></p><p>​    </p><h3></h3><p></p><p>​    </p><h4></h4><p></p><p>​    </p><h5></h5><p></p><p>​    </p><h6></h6><p></p><p>​    常用的标题标签有：h1、h2、h3</p><h4 id="段落标签："><a href="#段落标签：" class="headerlink" title="段落标签："></a>段落标签：</h4><pre><code> &lt;p&gt;&lt;/p&gt;</code></pre><p>​    段落描述网页文章的内容</p><h4 id="无序列表："><a href="#无序列表：" class="headerlink" title="无序列表："></a>无序列表：</h4><p>​    <ul></ul></p><p>​      <li></li></p><p>​      <li></li></p><p>​      <li></li></p><p>​    </p>  <!-- ul无序列表、有序列表ol、列表元素li --><p>  无序列表用比较多</p><h4 id="超链接标签："><a href="#超链接标签：" class="headerlink" title="超链接标签："></a>超链接标签：</h4><p>​        <a href></a></p><p>​    <!-- href属性：可以跳转到指定的标签 --></p><h4 id="图片标签："><a href="#图片标签：" class="headerlink" title="图片标签："></a>图片标签：</h4><p>​        <img src alt></p><p>​      <!-- alt属性：当图片加载不成功时显示的文字 --></p><p>​      <!-- src属性：图片所在的位置  --></p><h4 id="div标签："><a href="#div标签：" class="headerlink" title="div标签："></a>div标签：</h4><p>​ <div></div></p><p>​    无语义的标签、实现网页布局（划分多个区域）</p><h4 id="span标签："><a href="#span标签：" class="headerlink" title="span标签："></a>span标签：</h4><p>​    <span></span></p><p>​    无语义的标签、实现网页布局（内部划分区域）</p><h3 id="html属性："><a href="#html属性：" class="headerlink" title="html属性："></a>html属性：</h3><h4 id="src属性："><a href="#src属性：" class="headerlink" title="src属性："></a>src属性：</h4><p>​    img图片属性所在的路径</p><h4 id="class属性："><a href="#class属性：" class="headerlink" title="class属性："></a>class属性：</h4><p>​    class属性值：定义一个类（分类分别指定不同的样式）</p><h4 id="id属性："><a href="#id属性：" class="headerlink" title="id属性："></a>id属性：</h4><p>​    id属性值：给标签定义一个唯一值</p><h3 id="表格与表单元素："><a href="#表格与表单元素：" class="headerlink" title="表格与表单元素："></a>表格与表单元素：</h3><h4 id="表格元素："><a href="#表格元素：" class="headerlink" title="表格元素："></a>表格元素：</h4><p>​    表格主要用来显示数据</p><p>​    表格元素的容器使用table标签</p><p>​<table></table></p><h5 id="其他表格元素的标签："><a href="#其他表格元素的标签：" class="headerlink" title="其他表格元素的标签："></a>其他表格元素的标签：</h5><p>​thead、tbody、th、tr、td等</p><p>​      <thead></thead>：存放表头</p><p>​      <tbody></tbody>：表体真正展示数据</p><p>​      <th></th>：表格的单元格</p><p>​      <td></td>：单个单元格</p><p>​      <tr></tr>：行</p><h5 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h5><p>​        合并列属性 colspan&#x3D;” “</p><p>​        合并行属性 rowspan&#x3D;” “</p><h4 id="表单元素："><a href="#表单元素：" class="headerlink" title="表单元素："></a>表单元素：</h4><p>​    表单主要用于向服务器发送数据</p><p>​    表单元素容器使用form标签</p><p>​      <form action></form></p><p>​      action标签涉及调取数据问题</p><h5 id="常用的标签包括有："><a href="#常用的标签包括有：" class="headerlink" title="常用的标签包括有："></a>常用的标签包括有：</h5><p>​      <input type="text"> ：文本输入框</p><p>​        placeholder属性：提示文本</p><p>​      <input type="password">:密码</p><p>​        密码属性不可见</p><p>​      <label for></label>：文本框前提示文字</p><p>​        for：里面填入id值，点击时可以帮助文本框获取焦点</p><p>​      <select name id></select>：选择</p><p>​      name：向服务器发送数据的字段</p><p>​      <option value></option></p><p>​      放在select标签中，作为被选项</p><p>​      <input type="submit">：提交</p><p>​      value属性控制按钮上的文本</p><p>​      将数据提交给后台</p><p>​      <input type="button">：按钮</p><p>​      普通按钮不带任何设置；需要自行设置</p><p>​      <input type="radio">：单选框</p><p>​      name属性：将同样的name属性的单选框绑定到一起；只能选一个</p><p>​      <input type="checkbox">：复选框</p><h3 id="CSS选择器与常用属性"><a href="#CSS选择器与常用属性" class="headerlink" title="CSS选择器与常用属性"></a>CSS选择器与常用属性</h3><h4 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h4><h5 id="CSS语法："><a href="#CSS语法：" class="headerlink" title="CSS语法："></a>CSS语法：</h5><p>​    选择器{</p><p>​      属性名：属性值</p><p>​    }</p><h5 id="style标签："><a href="#style标签：" class="headerlink" title="style标签："></a>style标签：</h5><p>​<style></style></p><p>​    style标签内写入选择器</p><h5 id="常用的css选择器："><a href="#常用的css选择器：" class="headerlink" title="常用的css选择器："></a>常用的css选择器：</h5><h6 id="元素选择器：直接通过标签名来寻找"><a href="#元素选择器：直接通过标签名来寻找" class="headerlink" title="元素选择器：直接通过标签名来寻找"></a>元素选择器：直接通过标签名来寻找</h6><p>​      h1{xxx}</p><h6 id="类选择器：加入class属性（指定多个同class名的元素）"><a href="#类选择器：加入class属性（指定多个同class名的元素）" class="headerlink" title="类选择器：加入class属性（指定多个同class名的元素）"></a>类选择器：加入class属性（指定多个同class名的元素）</h6><p>​      .class名{xxx}</p><h6 id="id选择器：加入id属性（指定单个元素）"><a href="#id选择器：加入id属性（指定单个元素）" class="headerlink" title="id选择器：加入id属性（指定单个元素）"></a>id选择器：加入id属性（指定单个元素）</h6><p>​      #id名{xxx}</p><h6 id="通配符选择器："><a href="#通配符选择器：" class="headerlink" title="通配符选择器："></a>通配符选择器：</h6><p>​      *{xxx}</p><h6 id="层级选择器：选择某一class属性下的某一标签"><a href="#层级选择器：选择某一class属性下的某一标签" class="headerlink" title="层级选择器：选择某一class属性下的某一标签"></a>层级选择器：选择某一class属性下的某一标签</h6><p>​      .class属性名 h1{xxx}</p><h6 id="组合选择器：用逗号分隔"><a href="#组合选择器：用逗号分隔" class="headerlink" title="组合选择器：用逗号分隔"></a>组合选择器：用逗号分隔</h6><p>​      选择器1,选择器2{xxx}</p><h6 id="伪类选择器：增加行为"><a href="#伪类选择器：增加行为" class="headerlink" title="伪类选择器：增加行为"></a>伪类选择器：增加行为</h6><p>​      选择器：hover{xxx}</p><p>​        hover：鼠标指上的时候的选择</p><h6 id="伪元素选择器：增加元素"><a href="#伪元素选择器：增加元素" class="headerlink" title="伪元素选择器：增加元素"></a>伪元素选择器：增加元素</h6><p>​      选择器::befor，选择器::after</p><p>​      在元素之前加内容&#x2F;在元素之后加内容</p><h4 id="选择器的权重："><a href="#选择器的权重：" class="headerlink" title="选择器的权重："></a>选择器的权重：</h4><p>​    相同选择器:后面的选择器会覆盖前面的选择器</p><p>​    不同选择器：id选择器的权重 &gt; class选择器的权重 &gt; 元素选择器的权重</p><p>​    层级选择器：计算多个选择器权重</p><p>​      ！important属性 让权重设为最高</p><h4 id="常用的css属性："><a href="#常用的css属性：" class="headerlink" title="常用的css属性："></a>常用的css属性：</h4><p>​    font-size:字体大小</p><p>​      （Chrome浏览器中font-size最小值是12px）</p><p>​    color：字体颜色</p><p>​    width：宽度</p><p>​    height：高度</p><p>​      高度宽度可能强行拉伸图片</p><p>​    background：背景</p><p>​    text-align：文本水平居中</p><p>​    line-height：文本行高（垂直居中）</p><h4 id="引入css的方法："><a href="#引入css的方法：" class="headerlink" title="引入css的方法："></a>引入css的方法：</h4><h5 id="嵌入式："><a href="#嵌入式：" class="headerlink" title="嵌入式："></a>嵌入式：</h5><p>​<style></style>（少量的样式）</p><h5 id="内联式："><a href="#内联式：" class="headerlink" title="内联式："></a>内联式：</h5><p>​   写在属性里面style（不常用）</p><p>​      内联样式行内样式权重高于嵌入样式</p><h5 id="外部式："><a href="#外部式：" class="headerlink" title="外部式："></a>外部式：</h5><p>​   引入外部css文件（常用）</p><p>​      方便拆分为两个窗口</p><p>​      link标签引入外部css文件</p><h3 id="盒子模型："><a href="#盒子模型：" class="headerlink" title="盒子模型："></a>盒子模型：</h3><p>  将HTML元素看作盒子实现的网页布局</p><h4 id="有关盒子模型的css属性："><a href="#有关盒子模型的css属性：" class="headerlink" title="有关盒子模型的css属性："></a>有关盒子模型的css属性：</h4><p>​    边框：border</p><p>​      border-width：边框宽度</p><p>​      border-style：边框形式</p><p>​        none无边框 &#x2F; dashed虚线边框 &#x2F; solid实线边框 &#x2F; double双线边框 &#x2F; dotted点状边框</p><p>​      border-color：边框颜色</p><p>​    外边距：margin</p><p>​      top &#x2F; right &#x2F; bottom &#x2F; left</p><p>​      4个值的时候上右下左、2个值的时候上下、左右</p><p>​    内边距：padding</p><p>​      设置距离会改变盒子大小</p><h4 id="认情况下元素宽度和高度的计算"><a href="#认情况下元素宽度和高度的计算" class="headerlink" title="认情况下元素宽度和高度的计算"></a>认情况下元素宽度和高度的计算</h4><p>​      元素实际宽度 &#x3D; border-left + border-right + width + padding-left + padding-right</p><p>​      元素实际高度 &#x3D; border-top + border-bottom + height + padding-top + padding-bottom</p><p>​      设置属性：box-size:border-box</p><p>​        元素实际宽度 &#x3D; width</p><p>​        元素实际高度 &#x3D; height</p><p>​      元素边距初始化（清除系统默认边距）</p><p>​        *{margin:0px;padding:0px}</p><p>​      元素布局：margin：auto元素自动居中</p><h5 id="列表的样式："><a href="#列表的样式：" class="headerlink" title="列表的样式："></a>列表的样式：</h5><p>​        取消列表样式：list-style：none</p><p>​        列表样式在边距之内：list-style:inside</p><h3 id="浮动布局"><a href="#浮动布局" class="headerlink" title="浮动布局"></a>浮动布局</h3><h4 id="HTML元素的分类："><a href="#HTML元素的分类：" class="headerlink" title="HTML元素的分类："></a>HTML元素的分类：</h4><p>​    块元素：可以设置高度宽度，独立成行。</p><p>​      h1-6、p、div、ul、li</p><p>​    行内元素（内联元素、行级元素）：不可以设置宽度和高度，不独立成行。</p><p>​      a、span</p><p>​    行内块元素：可以设置宽度和高度，不独立成行</p><p>​      img、input、button</p><h5 id="display属性："><a href="#display属性：" class="headerlink" title="display属性："></a>display属性：</h5><p>​    block:将元素变成块元素</p><p>​    inline：转换为行内元素</p><p>​    inline-block：转换为行内块元素</p><p>​    none：隐藏元素</p><h4 id="浮动布局："><a href="#浮动布局：" class="headerlink" title="浮动布局："></a>浮动布局：</h4><p>​    将元素设置为浮动（float），块元素可以在同一行显示</p><h5 id="浮动元素的特性："><a href="#浮动元素的特性：" class="headerlink" title="浮动元素的特性："></a>浮动元素的特性：</h5><p>​      脱离文档流（不占位）</p><p>​    空div清除浮动</p><p>​      clear:both（清除浮动造成的不良影响）</p><p>​    用伪元素清除浮动</p><p>​      .clear::after,.clear::befor{</p><p>​        content:” “;</p><p>​        display:block;</p><p>​        clear:both;</p><p>​      }</p><h3 id="树状结构"><a href="#树状结构" class="headerlink" title="树状结构"></a>树状结构</h3><p>  家谱就是个树状结构，每个人都是一个树状结构上的节点。</p><p>  各节点之间的关系：</p><p>​    根节点：每个树状结构都有一个没有父级的节点就称之为父节点</p><p>​    父级节点：</p><p>​    子级节点：</p><p>​    同级关系：有相同父级的节点就是同级关系（一定要相同父级）</p><h3 id="CSS定位"><a href="#CSS定位" class="headerlink" title="CSS定位"></a>CSS定位</h3><h4 id="css定位（position）"><a href="#css定位（position）" class="headerlink" title="css定位（position）"></a>css定位（position）</h4><h5 id="绝对定位：absolute"><a href="#绝对定位：absolute" class="headerlink" title="绝对定位：absolute"></a>绝对定位：absolute</h5><p>​      脱离文档流（不占位）</p><p>​      默认参照为浏览器视窗的左上角</p><h5 id="相对定位：relative"><a href="#相对定位：relative" class="headerlink" title="相对定位：relative"></a>相对定位：relative</h5><p>​      不脱离文档流（占位）</p><p>​      默认参照为原本所在的位置</p><h5 id="固定定位：fixed"><a href="#固定定位：fixed" class="headerlink" title="固定定位：fixed"></a>固定定位：fixed</h5><p>​      脱离文档流（不占位）</p><p>​      默认参照为浏览器视窗的位置</p><h4 id="坐标属性：非定位元素不起作用"><a href="#坐标属性：非定位元素不起作用" class="headerlink" title="坐标属性：非定位元素不起作用"></a>坐标属性：非定位元素不起作用</h4><p>​    top、left、right、bottom、z-index</p><h5 id="设置z轴（z-index）"><a href="#设置z轴（z-index）" class="headerlink" title="设置z轴（z-index）"></a>设置z轴（z-index）</h5><p>​      值为整数；数值越大、显示越靠前</p><h5 id="设置参照物："><a href="#设置参照物：" class="headerlink" title="设置参照物："></a>设置参照物：</h5><p>​    通常情况下父级relative、子级为absolute</p><h3 id="HTML5新增标签"><a href="#HTML5新增标签" class="headerlink" title="HTML5新增标签"></a>HTML5新增标签</h3><p>  HTML5是超文本标记语言html的第五次重大修改，简称为H5（h5可能指html的第五个版本、移动端的网页效果、js接口、手机端整屏的轮播图效果）</p><h4 id="HTML5的新特性"><a href="#HTML5的新特性" class="headerlink" title="HTML5的新特性"></a>HTML5的新特性</h4><h5 id="布局元素（布局元素相当于提供了一个有语义的div）"><a href="#布局元素（布局元素相当于提供了一个有语义的div）" class="headerlink" title="布局元素（布局元素相当于提供了一个有语义的div）"></a>布局元素（布局元素相当于提供了一个有语义的div）</h5><p>​      header：网页头部</p><p>​      nav：页面导航（可以放到导航栏中）</p><p>​      aside：侧边栏</p><p>​      article：显示文章</p><p>​      section：章节</p><p>​      footer：网页页脚</p><p>​      hgroup：标题组</p><p>​      figure：元素组</p><h5 id="媒体元素"><a href="#媒体元素" class="headerlink" title="媒体元素"></a>媒体元素</h5><p>​      audio 音频元素</p><p>​      video 视频元素</p><h5 id="媒体元素属性"><a href="#媒体元素属性" class="headerlink" title="媒体元素属性"></a>媒体元素属性</h5><p>​        controls（控制面板）</p><p>​        autoplay（自动播放）</p><p>​        muted（静音，默认静音后才能自动播放）</p><h5 id="画布（）"><a href="#画布（）" class="headerlink" title="画布（）"></a>画布（<canvas>）</canvas></h5><h5 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h5><h5 id="表单新特性"><a href="#表单新特性" class="headerlink" title="表单新特性"></a>表单新特性</h5><h3 id="CSS3新特性"><a href="#CSS3新特性" class="headerlink" title="CSS3新特性"></a>CSS3新特性</h3><p>  新增特性如边框圆角、动画效果等</p><h4 id="边框圆角"><a href="#边框圆角" class="headerlink" title="边框圆角"></a>边框圆角</h4><p>​    border-radius:左上 右上 右下 左下（如果设置两个值，第一个值表示左上和右下，第二个值表示右上和左下）</p><p>​    圆角达到边距的50%变成正圆</p><h4 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h4><p>​    box-shadow:阴影X轴偏移 阴影y轴偏移 模糊半径 颜色</p><h4 id="形变：旋转、缩放、位移"><a href="#形变：旋转、缩放、位移" class="headerlink" title="形变：旋转、缩放、位移"></a>形变：旋转、缩放、位移</h4><p>​    transform:</p><p>​      rotate():旋转 deg表示角度</p><p>​      scale()：缩放 按照倍数缩放</p><p>​      translate()：位移 </p><h4 id="过渡效果"><a href="#过渡效果" class="headerlink" title="过渡效果"></a>过渡效果</h4><h5 id="transition-过渡属性"><a href="#transition-过渡属性" class="headerlink" title="transition:过渡属性"></a>transition:过渡属性</h5><h6 id="transition-propery-过渡属性（transform）"><a href="#transition-propery-过渡属性（transform）" class="headerlink" title="transition-propery 过渡属性（transform）"></a>transition-propery 过渡属性（transform）</h6><h6 id="transition-duration-过渡持续时间"><a href="#transition-duration-过渡持续时间" class="headerlink" title="transition-duration 过渡持续时间"></a>transition-duration 过渡持续时间</h6><h6 id="transition-timing-function-过渡函数"><a href="#transition-timing-function-过渡函数" class="headerlink" title="transition-timing-function 过渡函数"></a>transition-timing-function 过渡函数</h6><p>​        ease:开始和结束慢，中间快（默认值）</p><p>​        linear:匀速</p><p>​        ease-in:开始慢</p><p>​        ease-out:结束慢</p><p>​        ease-in-out:比ease幅度大</p><h6 id="transition-delay-过渡延迟时间"><a href="#transition-delay-过渡延迟时间" class="headerlink" title="transition-delay 过渡延迟时间"></a>transition-delay 过渡延迟时间</h6><p>​      简写：transition:属性 秒数 函数 延迟</p><h5 id="transform-origin-设置旋转原点"><a href="#transform-origin-设置旋转原点" class="headerlink" title="transform-origin:设置旋转原点"></a>transform-origin:设置旋转原点</h5><p>​    overflow:超出部分设置  </p><p>​      hidden隐藏</p><p>​      auto滚动条</p><h4 id="动画效果"><a href="#动画效果" class="headerlink" title="动画效果"></a>动画效果</h4><h5 id="过渡效果和动画效果的区别"><a href="#过渡效果和动画效果的区别" class="headerlink" title="过渡效果和动画效果的区别"></a>过渡效果和动画效果的区别</h5><p>​      过渡效果通常用户与浏览器进行交互</p><p>​      动画效果可以交互，也可以在网页加载时直接执行，并且可以让效果更复杂</p><h5 id="animation动画属性"><a href="#animation动画属性" class="headerlink" title="animation动画属性"></a>animation动画属性</h5><p>​      animation-name:规定需要绑定到选择器的keyframe名称</p><p>​      animation-duration:规定完成动画所花费的时间</p><p>​      animation-timing-function:规定动画的速度曲线</p><p>​      animation-delay:规定在动画开始之前的延迟</p><p>​      animation-iteration-count:规定该动画播放的次数</p><h5 id="定义动画"><a href="#定义动画" class="headerlink" title="定义动画"></a>定义动画</h5><p>​      @keyframes anim{</p><p>​        0%{</p><p>​          transform:</p><p>​        }</p><p>​        100%{</p><p>​          transform:</p><p>​        }</p><p>​      }</p><h4 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h4><h4 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h4><p>​    让网页布局更简洁，更易于维护</p><h5 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h5><p>​      让元素设为display:flex;元素变为一个flex容器</p><p>​      容器内部的元素为flex元素或者flex项目</p><p>​      （display：none隐藏)（display：block块元素）（display：inline行元素）</p><h5 id="flex容器中的默认效果"><a href="#flex容器中的默认效果" class="headerlink" title="flex容器中的默认效果"></a>flex容器中的默认效果</h5><p>​      flex项目在flex容器中沿主轴排列</p><p>​      flex项目高度适应容器高度（同行内元素）</p><h5 id="设置flex容器"><a href="#设置flex容器" class="headerlink" title="设置flex容器"></a>设置flex容器</h5><h6 id="flex-direction-设置flex项目排列方向"><a href="#flex-direction-设置flex项目排列方向" class="headerlink" title="flex-direction:设置flex项目排列方向"></a>flex-direction:设置flex项目排列方向</h6><p>​        row:默认值，主轴为水平，起点在左端</p><p>​        row-reverse:主轴为水平，起点在右端</p><p>​        column:主轴为垂直，起点在上端</p><p>​        column:-reverse:主轴为垂直，起点在下端</p><h6 id="justify-content-flex项目主轴排列方式"><a href="#justify-content-flex项目主轴排列方式" class="headerlink" title="justify-content:flex项目主轴排列方式"></a>justify-content:flex项目主轴排列方式</h6><p>​        flex-start(默认值)：左对齐</p><p>​        flex-end:右对齐</p><p>​        center:居中</p><p>​        space-between:两端对齐，项目之间的间隔都相等</p><p>​        space-around:每个项目两端间距相等。项目间隔比项目与边框之间间隔大一点</p><h6 id="align-items-flex项目在交叉轴的排列方式"><a href="#align-items-flex项目在交叉轴的排列方式" class="headerlink" title="align-items:flex项目在交叉轴的排列方式"></a>align-items:flex项目在交叉轴的排列方式</h6><p>​        flex-start：交叉轴的起点对齐</p><p>​        flex-end:交叉轴的终点对齐</p><p>​        center:交叉轴的中点对齐</p><p>​        strech:(默认值)：如果项目未设置高度或设为auto，将占满整个容器高度</p><h5 id="flex项目"><a href="#flex项目" class="headerlink" title="flex项目"></a>flex项目</h5><p>​      flex-grow:属性定义项目的放大比例,默认为0 ,空间充足,等比例补全。+</p><p>​      flex-shrink:定义了项目的缩小比例,默认为1 ,即如果空间不足,该项目将缩小</p><p>​      flex-basis：主轴排列为宽度,交叉轴排列为高度,设置px ,默认值是auto。</p><p>​      flex：综合上面三个样式</p><p>​      align-self:flex项目的对其方式( auto | flex-start | flex-end | center | baseline | stretch )</p><h4 id="grid布局"><a href="#grid布局" class="headerlink" title="grid布局"></a>grid布局</h4><p>flex布局是一维布局，gird是二维布局。</p><p>flex布局考虑的是项目按照行或者列布局，grid布局需要同时考虑行和列。</p><p>属性：</p><ul><li>grid-tempalte-columnss：设置行宽</li><li>grid-tempalte-rows：设置行高<ul><li>px具体的像素</li><li>fr按照比例占满整个容器</li></ul></li><li>grid-auto-flow:column 元素纵向排列</li></ul><p>容器属性：</p><p>​<strong>在单元格中的对齐方式</strong></p><ul><li><p>justify-items 属性</p></li><li><p>align-items 属性</p><ul><li>默认stretch（延伸）</li><li>start开始</li><li>center居中显示</li><li>end末尾</li></ul><p><strong>单元格在容器中的对齐方式</strong></p></li><li><p>justify-content属性</p></li><li><p>align-content属性</p><ul><li>center单元格位置在容器中居中</li></ul><p><strong>设置溢出的尺寸</strong></p></li><li><p>grid-auto-columns属性</p></li><li><p>grid-auto-rows属性</p></li></ul><p>项目属性：</p><p>​合并单元格横向</p><ul><li><p>grid-column-start属性</p></li><li><p>grid-column-end属性</p></li><li><p>grid-column属性</p><p>合并单元格纵向</p></li><li><p>grid-row-start属性</p></li><li><p>grid-row-end属性</p></li><li><p>grid-row属性</p><p>设置字体位置</p></li><li><p>justify-self属性</p></li><li><p>align-self属性</p></li></ul><h4 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h4><p>同一套静态页面代码在不同设备中展现出不同的效果，适应多个设备</p><h5 id="媒体查询-1"><a href="#媒体查询-1" class="headerlink" title="媒体查询"></a>媒体查询</h5><p>通过@media定义样式，浏览器窗口满足指定条件，才会应用此样式。</p><h4 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h4><h5 id="移动端的特点"><a href="#移动端的特点" class="headerlink" title="移动端的特点"></a>移动端的特点</h5><ul><li>设备尺寸不同</li><li>可以通过设置百分比解决</li><li>设置计算百分比计算繁琐</li></ul><p>rem相当于html标签的font-size</p><p>相对单位，相对于父级的font-size</p><p><strong>1em&#x3D;父级的font-size的像素</strong></p><p>rem相对于html标签的font-size</p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端-第五章</title>
      <link href="/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%BA%94%E7%AB%A0/"/>
      <url>/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%BA%94%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="超链接a"><a href="#超链接a" class="headerlink" title="超链接a :"></a>超链接a :</h3><p><strong>基本语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;&quot;</span>&gt;</span>超链接标题<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br></pre></td></tr></table></figure><p><a href="www.baidu.com" name title target>超链接标题</a> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;www.baidu.com&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;&quot;</span>&gt;</span>百度的链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br></pre></td></tr></table></figure><p><a href="'https://lenovo.ilive.cn/?f=stee'">百度的链接</a></p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端-第四章</title>
      <link href="/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E5%9B%9B%E7%AB%A0/"/>
      <url>/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E5%9B%9B%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="x3D-x3D-1-列表分类：-x3D-x3D"><a href="#x3D-x3D-1-列表分类：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;1.列表分类：&#x3D;&#x3D;"></a>&#x3D;&#x3D;1.列表分类：&#x3D;&#x3D;</h3><p>有序，无序，定义，菜单，目录五类。</p><h3 id="x3D-x3D-2-无序列表-x3D-x3D"><a href="#x3D-x3D-2-无序列表-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;2.无序列表&#x3D;&#x3D;"></a>&#x3D;&#x3D;2.无序列表&#x3D;&#x3D;</h3><p><strong>基本语法：</strong><ul type></ul></p><p>​                              <li type>项目名称</li></p><p>​                    </p><p><strong>type属性：</strong>disc 实心圆     circle 空心圆     square 实心正方形</p><h2 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h2><style>    ul{list-style-type : none;}  //删除列表前面的符号</style><h3 id="x3D-x3D-3-有序列表-x3D-x3D"><a href="#x3D-x3D-3-有序列表-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;3.有序列表&#x3D;&#x3D;"></a>&#x3D;&#x3D;3.有序列表&#x3D;&#x3D;</h3><p><strong>基本语法：</strong><ol type start></ol></p><p>​                                <li type value>项目名称</li></p><p>​                     </p><p><code>补充：在ol中的type是决定列表编号类型,start是决定编号起始顺序。</code></p><p><code>在li中的type是改变自身的类型，value是改变自身的起始编号，同时改变后续列表的编号顺序</code></p><p>**type：1 数字 , A 英文大写 ， a 英文小写 ， I 罗马大写 ， i 罗马小写 **</p><h3 id="x3D-x3D-4-列表嵌套：-x3D-x3D"><a href="#x3D-x3D-4-列表嵌套：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;4.列表嵌套：&#x3D;&#x3D;"></a>&#x3D;&#x3D;4.列表嵌套：&#x3D;&#x3D;</h3><p><strong>基本语法：</strong></p><ul>    <li>项目名称        <ol>            <li>项目名称</li>            ....        </ol>    </li>    .....</ul><h3 id="x3D-x3D-5-定义列表：-x3D-x3D"><a href="#x3D-x3D-5-定义列表：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;5.定义列表：&#x3D;&#x3D;"></a>&#x3D;&#x3D;5.定义列表：&#x3D;&#x3D;</h3><p>定义列表每一项表基础前面即没有符号，也没有编号</p><p><strong>基本语法：</strong><dl></dl></p><p>​                          <dt>项目</dt></p><p>​                                    <dd>说明1</dd></p><p>​                                     <dd>说明2</dd></p><p>​                              ….</p><p>​                          </p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端-第三章</title>
      <link href="/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%B8%89%E7%AB%A0/"/>
      <url>/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%B8%89%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="x3D-x3D-1-HTML标签：-x3D-x3D"><a href="#x3D-x3D-1-HTML标签：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;1.HTML标签：&#x3D;&#x3D;"></a>&#x3D;&#x3D;1.HTML标签：&#x3D;&#x3D;</h3><p><code>(1)标题字标记：</code>h1~h6 等级越高，标题字号越大      <code>(2)段内换行：</code>br       <code>(3)水平分割线：</code>hr</p><p><code>(4)段落：</code>p     <code>(5)段内分组：</code>span      <code>(6)预留格式：</code>pre       <code>(7)超链接：</code>a</p><p><code>(8)插入图片：</code>img        <code>(9)列表：</code>ul,ol,li        <code>(10)表格：</code>table tr td th</p><h3 id="x3D-x3D-2-添加空格与特殊符号：-x3D-x3D"><a href="#x3D-x3D-2-添加空格与特殊符号：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;2.添加空格与特殊符号：&#x3D;&#x3D;"></a>&#x3D;&#x3D;2.添加空格与特殊符号：&#x3D;&#x3D;</h3><p><strong>基本语法：</strong><body></body></p><p>​                           &amp;nbsp(空格)；&amp;lt(小于)；&amp;reg(注册商标)；&lt;&amp;copy&gt;(版权);</p><p>​                   </p><h3 id="x3D-x3D-3-字体font标记：-x3D-x3D"><a href="#x3D-x3D-3-字体font标记：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;3.字体font标记：&#x3D;&#x3D;"></a>&#x3D;&#x3D;3.字体font标记：&#x3D;&#x3D;</h3><p><strong>基本语法</strong>     《font face&#x3D;”” size&#x3D;”” color&#x3D;””》内容《&#x2F;font》</p><h3 id="x3D-x3D-4-段落标记：-x3D-x3D"><a href="#x3D-x3D-4-段落标记：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;4.段落标记：&#x3D;&#x3D;"></a>&#x3D;&#x3D;4.段落标记：&#x3D;&#x3D;</h3><p><strong>基本语法：</strong></p><p align="left/center/right">内容</p><p></p><p>###&#x3D;&#x3D;水平分割线：&#x3D;&#x3D;</p><p><strong>基本语法：</strong><hr size width color align noshade></p><h3 id="x3D-x3D-5-拼音-x2F-音标，注释-ruby标记和rt-x2F-rp标记：-x3D-x3D"><a href="#x3D-x3D-5-拼音-x2F-音标，注释-ruby标记和rt-x2F-rp标记：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;5.拼音&#x2F;音标，注释 ruby标记和rt&#x2F;rp标记：&#x3D;&#x3D;"></a>&#x3D;&#x3D;5.拼音&#x2F;音标，注释 ruby标记和rt&#x2F;rp标记：&#x3D;&#x3D;</h3><p><code>ruby标记：</code>用它将需要注释或注音标的文字内容包住</p><p><code>rt标记：</code>里面放置音标或注释，这个标记要跟在需要注释的文本后面</p><p><strong>基本语法：</strong><ruby></ruby></p><p>​                           中<rp>(</rp><rt>zhong</rt><rp>)</rp></p><p>​                           国<rp>(</rp><rt>guo</rt><rp>)</rp></p><p>​                    </p><h3 id="x3D-x3D-6-段落缩进-blockquote标记：-x3D-x3D-（文本内容所有缩进）"><a href="#x3D-x3D-6-段落缩进-blockquote标记：-x3D-x3D-（文本内容所有缩进）" class="headerlink" title="&#x3D;&#x3D;6.段落缩进 blockquote标记：&#x3D;&#x3D;（文本内容所有缩进）"></a>&#x3D;&#x3D;6.段落缩进 blockquote标记：&#x3D;&#x3D;（文本内容所有缩进）</h3><p>   这是块级标记，标记里面的内容能够向右缩进5个英文字符位置，并在内容周围添加外边距</p><p><strong>基本语法：</strong><blockquote>引用内容</blockquote></p><p>###&#x3D;&#x3D;7.预格式化 pre标记：&#x3D;&#x3D;</p><p>对网页中的文字段落进行预格式化，浏览器会保留设计者在源文件中所定义的格式，包括各种<strong>空格</strong>，<strong>缩进</strong>以及<strong>其他特殊格式</strong>。</p><p><strong>基本语法：</strong><pre>预格式化文本</pre></p><h2 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h2><p><code>块级元素：</code>一般通过块元素对网页进行布局</p><p>块元素只能出现在<body>元素内，通常浏览器会在块级元素前后另起新一行（<strong>也就是块级元素单独占一行</strong>）</body></p><p><code>行内元素:</code>主要用来包裹文字</p><p><code>行内元素与块级元素对比：</code></p><p>（1）内容：一般情况下，行内元素只能包含数据和其他行内元素，而块级元素可以包含行内元素和其他块级元素。</p><p>（2）格式：行内元素不会以新一行开始，而块级元素会新起一行。</p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端-第二章</title>
      <link href="/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
      <url>/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%BA%8C%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="HTML文档结构"><a href="#HTML文档结构" class="headerlink" title="HTML文档结构"></a>HTML文档结构</h2><p><code>HTML文档由头部head和主体body组成</code></p><p>###&#x3D;&#x3D;1.头部head标记：&#x3D;&#x3D;</p><p>（1）标题title标记</p><p>（2）元信息meta标记：<code>&lt;meta name=&quot;&quot; content=&quot;&quot;&gt;</code></p><p><code> &lt;meta http-eqnive=&quot;&quot; content=&quot;&quot;&gt;</code></p><p>###&#x3D;&#x3D;2.主体body：&#x3D;&#x3D;</p><p>语法：<body>这是内容</body></p><h4 id="注意：一般来说，只有以下6个标签能放入head标签内：title，meta，link，style，script，base。"><a href="#注意：一般来说，只有以下6个标签能放入head标签内：title，meta，link，style，script，base。" class="headerlink" title="注意：一般来说，只有以下6个标签能放入head标签内：title，meta，link，style，script，base。"></a>注意：一般来说，只有以下6个标签能放入head标签内：title，meta，link，style，script，base。</h4><p>###&#x3D;&#x3D;3.HTML基本语法&#x3D;&#x3D;</p><p>（1）标记类型：</p><p>&#x3D;&#x3D;单个标记：&#x3D;&#x3D;&lt;标记名称&gt;或&lt;标记名称&#x2F;&gt;</p><p>例如：<br>，<br>表示换行</p><p>，<hr>,表示水平分割线,</p><link>表示链接标记<p>&#x3D;&#x3D;双标记：&#x3D;&#x3D;</p><p>&lt;标记名称&gt;内容&lt;&#x2F;标记名称&gt;</p><p>（2）HTML属性：</p><p>&lt;标记名称 属性名1&#x3D;”属性值1” 属性名2&#x3D;”属性值2”&gt;&lt;&#x2F;标记名称&gt;</p><p>（3）添加注释：</p><!--注释信息--><p>或<comment>注释信息</comment></p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端-第一章</title>
      <link href="/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
      <url>/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h4 id="x3D-x3D-（1）web特点-x3D-x3D-："><a href="#x3D-x3D-（1）web特点-x3D-x3D-：" class="headerlink" title="&#x3D;&#x3D;（1）web特点&#x3D;&#x3D;："></a>&#x3D;&#x3D;（1）web特点&#x3D;&#x3D;：</h4><p>1.易导航和图形化</p><p>2.平台无关性</p><p>3.支持分布式结构</p><p>4.动态性</p><p>5.交互性</p><h4 id="x3D-x3D-（2）HTML-x3D-x3D-："><a href="#x3D-x3D-（2）HTML-x3D-x3D-：" class="headerlink" title="&#x3D;&#x3D;（2）HTML&#x3D;&#x3D;："></a>&#x3D;&#x3D;（2）HTML&#x3D;&#x3D;：</h4><p>HTML：超文本标记语言，制作网页的标准语言，描述网页的结构</p><h4 id="x3D-x3D-（3）HTML文档-x3D-x3D-："><a href="#x3D-x3D-（3）HTML文档-x3D-x3D-：" class="headerlink" title="&#x3D;&#x3D;（3）HTML文档&#x3D;&#x3D;："></a>&#x3D;&#x3D;（3）HTML文档&#x3D;&#x3D;：</h4><p>HTML文档：用来描述网页，由HTML标记和纯文本构成的文本文件</p><h4 id="x3D-x3D-（4）CSS级联样式表-x3D-x3D-："><a href="#x3D-x3D-（4）CSS级联样式表-x3D-x3D-：" class="headerlink" title="&#x3D;&#x3D;（4）CSS级联样式表&#x3D;&#x3D;："></a>&#x3D;&#x3D;（4）CSS级联样式表&#x3D;&#x3D;：</h4><p>CSS级联样式表：css语言是一种标记语言</p><p>CSS作用：可以有效地对页面的布局，字体，颜色，背景和其他效果实现更加精确的控制</p><h4 id="x3D-x3D-（5）Javascript-x3D-x3D-："><a href="#x3D-x3D-（5）Javascript-x3D-x3D-：" class="headerlink" title="&#x3D;&#x3D;（5）Javascript&#x3D;&#x3D;："></a>&#x3D;&#x3D;（5）Javascript&#x3D;&#x3D;：</h4><p>JavaScript使得网页和用户之间实现了一种实时性的，动态的，交互性的关系</p><p>Javascript组成：核心（&#x3D;&#x3D;ECMAScript&#x3D;&#x3D;），文档对象模型（&#x3D;&#x3D;DOM&#x3D;&#x3D;），浏览器对象模型（&#x3D;&#x3D;BOM&#x3D;&#x3D;）</p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基本使用与方法</title>
      <link href="/2022/11/26/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%96%B9%E6%B3%95/"/>
      <url>/2022/11/26/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>_config.yml：俗称站点配置文件，很多与博客网站的格式、内容相关的设置都需要在里面改。</p><p>node_modules:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。</p><p>package.json：别问我，我也不知道干嘛的。</p><p>scaffolds：模板文件夹，里面的post.md文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。</p><p>source：非常重要。所有的个人文件都在里面！</p><p>themes：主题文件夹，可以从Hexo主题官网或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端的关键！</p><p>接下来重点介绍<code>source</code>文件夹。新建的博客中，<code>source</code>文件夹下默认只有一个子文件夹——<code>_posts</code>。我们写的博客都放在这个子文件夹里面。我们还可以在<code>source</code>里面新建各种子文件夹满足自己的个性化需求，对初学者而言，我们先把精力放在主线任务上，然后再来搞这些细节。</p><p>写好内容后，在命令行一键三连：</p><p>一： <code>hexo cl</code></p><p>二： <code>hexo g</code></p><p>三： <code>hexo s</code></p><p>然后随便打开一个浏览器，在网址栏输入<code>localhost:4000/</code>，就能发现自己的网站更新了！不过这只是在本地进行了更新，要想部署到网上（Github上），输入如下代码：</p><p><code>hexo d</code></p><p>然后在浏览器地址栏输入<code>https://yourname.github.io</code>，或者<code>yourname.github.io</code>就能在网上浏览自己的博客了！</p>]]></content>
      
      
      <categories>
          
          <category> 博客配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础</title>
      <link href="/2022/11/24/Vue%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/11/24/Vue%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="x3D-x3D-Vue简介：-x3D-x3D"><a href="#x3D-x3D-Vue简介：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;Vue简介：&#x3D;&#x3D;"></a>&#x3D;&#x3D;Vue简介：&#x3D;&#x3D;</h3><p><code>JavaScript框架</code></p><p><code>简化Dom操作</code></p><p><code>响应式数据驱动</code></p><h3 id="x3D-x3D-Vue第一个程序：-x3D-x3D"><a href="#x3D-x3D-Vue第一个程序：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;Vue第一个程序：&#x3D;&#x3D;"></a>&#x3D;&#x3D;Vue第一个程序：&#x3D;&#x3D;</h3><p>(1)<strong>导入开发版本的Vue.js</strong></p><p>(2)<strong>创建Vue实例对象，设置el属性和data属性</strong></p><p>(3)<strong>使用简介的模板语法把数据渲染到页面上</strong></p><p><code>&#123;&#123;&#125;&#125;</code><strong>插值表达式</strong></p><p>###&#x3D;&#x3D;Vue 的 el挂载点:&#x3D;&#x3D;</p><p><code>(1)Vue实例的作用范围</code>：Vue会管理el选项<strong>命中的元素</strong>及其内部的<strong>后代元素</strong></p><p><code>（2）是否可以可以使用其他的选择器：</code>可以使用其他的选择器，但是一般都使用ID选择器</p><p><code>（3）是否可以设置其他的dom元素：</code>可以使用其他的<strong>双标签</strong>，不能使用HTML和body</p><p>###&#x3D;&#x3D;Vue的data数据对象：&#x3D;&#x3D;</p><p>（1）Vue中用到的数据定义在data中</p><p>（2）data中可以写复杂类型的数据</p><p>（3）渲染复杂数据类型时，遵守js的语法即可</p><h3 id="x3D-x3D-v-text-x3D-x3D"><a href="#x3D-x3D-v-text-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-text&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-text&#x3D;&#x3D;</h3><p>作用：设置标签的内容（innerTEXT)</p><p>默认写法v-text会替换全部内容，但是使用<strong>插值表达式</strong><code>&#123;&#123;&#125;&#125;</code>可以替换指定内容</p><p><strong>注意：使用了v-text后标签里的内容不会再改变，只能为v-text的内容</strong></p><p><code>例子：</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;<span class="attribute">content</span>&quot; v-text=&quot;message&quot;&gt; &lt;/<span class="selector-tag">div</span>&gt;      //v-text 的用法</span><br><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;<span class="attribute">content</span>&quot;&gt; </span><br><span class="line">&#123;&#123; message &#125;&#125;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;      // &#123;&#123;&#125;&#125; 的用法</span><br></pre></td></tr></table></figure>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> content = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    el : <span class="string">&#x27;#content&#x27;</span>,</span><br><span class="line">    data : &#123;</span><br><span class="line">        maessage : <span class="string">&#x27;小崔你好呀！&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="x3D-x3D-v-html-x3D-x3D"><a href="#x3D-x3D-v-html-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-html&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-html&#x3D;&#x3D;</h3><p>作用：设置标签的内容（innerHTML)</p><p>内容中又html结构会被解析为标签，但是v-text不会解析html结构只会解析为文本</p><p><strong>注意：使用了v-html后标签里的内容不会再改变，只能为v-html的内容</strong></p><h3 id="x3D-x3D-v-on-x3D-x3D"><a href="#x3D-x3D-v-on-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-on&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-on&#x3D;&#x3D;</h3><p>作用：为元素绑定事件</p><p><strong>注意：事件不需要写on</strong></p><p><code>用法:</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;<span class="attribute">content</span>&quot; v-on:click=<span class="string">&#x27;dd&#x27;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>v-on：可以替换为@</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;<span class="attribute">content</span>&quot; <span class="keyword">@click</span>=&#x27;dd&#x27;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>绑定的方法定义在<strong>methods</strong>属性中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> content = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    el : <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">    methods : &#123;</span><br><span class="line">       dd : <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;hi~~&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>方法内部可以使用this关键字访问定义在data中的数据</p><h3 id="x3D-x3D-v-show-x3D-x3D"><a href="#x3D-x3D-v-show-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-show&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-show&#x3D;&#x3D;</h3><p>作用：根据真假切换元素的显示状态</p><p>原理是修改元素的<strong>dispaly</strong>属性实现元素显示与隐藏</p><p>v-show指令里面的内容最终都会被解析为布尔值，值为true则元素显示，值为false则元素隐藏</p><h3 id="x3D-x3D-v-if-x3D-x3D"><a href="#x3D-x3D-v-if-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-if&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-if&#x3D;&#x3D;</h3><p>作用：根据表达式的真假切换元素的显示状态</p><p>原理是通过操纵dom元素来切换显示状态</p><p>如果表达式的值为true则元素存在与dom树中，值为false则从dom树中移除</p><p><strong>注意:如果是频繁的切换元素状态就使用v-show，反之使用v-if，因为前者的切换消耗小</strong></p><h3 id="x3D-x3D-v-bind-x3D-x3D"><a href="#x3D-x3D-v-bind-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-bind&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-bind&#x3D;&#x3D;</h3><p>作用：为元素设置属性</p><p>用法： v-bind：属性名</p><p>如果使用简写可以直接省略v-bind，只保留：属性名</p><p>###&#x3D;&#x3D;v-for&#x3D;&#x3D;</p><p>作用：根据数据生成<strong>列表</strong>结构（不一定是列表，只是用于生成多个元素）</p><p>数组经常和v-for结合一起使用</p><p>语法：**（item，index） in 数据 **</p><p>item 和 index 可以和其他指令一起使用</p><p>数组长度的更新可以同步到页面上，是响应式的</p><h3 id="x3D-x3D-v-model-x3D-x3D"><a href="#x3D-x3D-v-model-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-model&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-model&#x3D;&#x3D;</h3><p>作用：便捷的设置和获取<strong>表单</strong>的值</p><p>绑定的数据会和表单的值相关联</p><p>绑定的数据和表单元素的值是<strong>双向绑定</strong></p>]]></content>
      
      
      <categories>
          
          <category> Vue学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
