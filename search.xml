<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git学习</title>
      <link href="/2023/05/15/git%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/05/15/git%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="远程仓库的两种访问方式"><a href="#远程仓库的两种访问方式" class="headerlink" title="远程仓库的两种访问方式"></a>远程仓库的两种访问方式</h3><p>1.HTTPS:零配置；但是每次访问仓库时，需要重复输入Github的账号和密码</p><p>2.SSH:需要进行额外的配置；但是配置成功后每次访问仓库时，不需要重复输入Github的账号和密码</p><p>###<strong>1.上传代码到远程仓库步骤(基于HTTPS)：</strong></p><p>（1）使用New repository 创建一个新的仓库 </p><p>（2）在代码文件里先把文件放入git仓库然后运行git bash 输入新建仓库里的代码运行</p><h3 id="注意：当对文件进行了修改，想使Github的仓库也进行更新，可以在文件里使用git命令-git-push。"><a href="#注意：当对文件进行了修改，想使Github的仓库也进行更新，可以在文件里使用git命令-git-push。" class="headerlink" title="注意：当对文件进行了修改，想使Github的仓库也进行更新，可以在文件里使用git命令 git push。"></a>注意：当对文件进行了修改，想使Github的仓库也进行更新，可以在文件里使用git命令 <code>git push</code>。</h3><h3 id="2-上传代码到远程仓库步骤（基于SSH）："><a href="#2-上传代码到远程仓库步骤（基于SSH）：" class="headerlink" title="2.上传代码到远程仓库步骤（基于SSH）："></a>2.上传代码到远程仓库步骤（基于SSH）：</h3><p><code>SSH key</code> 作用：实现本地仓库和Github之间免登录的加密数据传输。</p><p> <code>SSH key</code> 好处：免登录身份认证，数据加密传输。</p><p><code>SSH key</code> 由两部分组成，分别是：</p><p>（1）id_rsa(私钥文件，存放与客户端的电脑中即可)</p><p>（2）id_rsa.pub(公钥文件，需要配置到Github中)</p><p><strong>步骤：</strong></p><p>（1）使用New repository 创建一个新的仓库 </p><p>（2）在代码文件里先把文件放入git仓库然后运行git bash 输入新建仓库里的代码运行</p><p>###注意：当对文件进行了修改，想使Github的仓库也进行更新，可以在文件里使用git命令 <code>git push</code>。</p><h3 id="附加：（配置SSH）"><a href="#附加：（配置SSH）" class="headerlink" title="附加：（配置SSH）"></a>附加：（配置SSH）</h3><p><code>(一)生成 SSH key</code></p><p>(1)打开 Git Bash</p><p>(2)运行 ssh-keygen -t rsa -b 4096 -C “注册Github账号的邮箱”</p><p>(3)连续敲击3次回车即可在c盘中.ssh目录中生成id_rsa 和 id_rsa.pub两个文件</p><p><code>(二)配置SSH key</code></p><p>(1)使用记事本打开id_rsa.pub文件，复制里面的文本内容</p><p>(2)在浏览器中打开Github, **点击头像-&gt;Settings-&gt;SSH and GPG Keys -&gt;New SSH key</p><p>(3)将 id_rsa.pub文件的内容，粘贴到Key对应的文本框中</p><p>(4)在Title文本框中任意填写一个名称，来标识这个Key从何而来</p><p><code>(三)检测Github的SSH key 是否配置成功</code></p><p>打开Git Bash 并输入 <code>ssh -T git@github.com</code>,后面输入yes 后看到有 <code>Hi MuQingYuan</code>的内容，说明配置成功。</p><h3 id="3-将远程仓库的文件克隆到本地"><a href="#3-将远程仓库的文件克隆到本地" class="headerlink" title="3.将远程仓库的文件克隆到本地"></a>3.将远程仓库的文件克隆到本地</h3><p><code>打开Git Bash,输入以下的命令并回车执行：</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 远程仓库的文件地址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客看板娘配置</title>
      <link href="/2023/05/14/%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/05/14/%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="在hexo的butterfly主题中开启看板娘"><a href="#在hexo的butterfly主题中开启看板娘" class="headerlink" title="在hexo的butterfly主题中开启看板娘"></a>在<a href="https://so.csdn.net/so/search?q=hexo&spm=1001.2101.3001.7020">hexo</a>的butterfly主题中开启看板娘</h2><p>官网地址配置：<a href="https://www.npmjs.com/package/hexo-helper-live2d">https://www.npmjs.com/package/hexo-helper-live2d</a></p><p>###1、安装依赖</p><p>卸载命令：npm uninstall hexo-helper-live2d<br>安装命令：npm install –save hexo-helper-live2d<br><strong>注意：</strong>命令都是在你的博客主目录执行</p><p>安装完成之后在package.json会看到安装的model</p><h3 id="2、下载各种动画model："><a href="#2、下载各种动画model：" class="headerlink" title="2、下载各种动画model："></a>2、下载各种动画model：</h3><p>地址：<a href="https://github.com/xiazeyu/[live2d](https://so.csdn.net/so/search?q=live2d&amp;spm=1001.2101.3001.7020)-widget-models.git">https://github.com/xiazeyu/[live2d](https://so.csdn.net/so/search?q=live2d&amp;spm=1001.2101.3001.7020)-widget-models.git</a></p><p>模型仓库 使用 <code>npm install &#123;packagename&#125;</code>命令进行下载</p><p><strong>模型选择：</strong></p><p>live2d-widget-model-chitose</p><p>live2d-widget-model-epsilon2_1</p><p>live2d-widget-model-gf</p><p>live2d-widget-model-haru&#x2F;01</p><p>live2d-widget-model-haru&#x2F;02</p><p>live2d-widget-model-haruto</p><p>live2d-widget-model-hibiki</p><p>live2d-widget-model-hijiki</p><p>live2d-widget-model-izumi</p><p>live2d-widget-model-koharu</p><p>live2d-widget-model-miku</p><p>live2d-widget-model-ni-j</p><p>live2d-widget-model-nico</p><p>live2d-widget-model-nietzsche</p><p>live2d-widget-model-nipsilon</p><p>live2d-widget-model-nito</p><p>live2d-widget-model-shizuku</p><p>live2d-widget-model-tororo</p><p>live2d-widget-model-tsumiki</p><p>live2d-widget-model-unitychan</p><p>live2d-widget-model-wanko</p><p>live2d-widget-model-z16</p><h3 id="3、配置博客站点配置文件-config-yml（根目录的）"><a href="#3、配置博客站点配置文件-config-yml（根目录的）" class="headerlink" title="3、配置博客站点配置文件_config.yml（根目录的）"></a>3、配置博客站点配置文件<code>_config.yml</code>（根目录的）</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-haruto</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span> <span class="comment">#动画位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">190</span></span><br><span class="line">    <span class="comment"># 位置配置，这个在左侧边栏位置很居中</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">30</span> <span class="comment"># 调节水平位置</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-5</span> <span class="comment"># 调节垂直位置</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment"># 是否在移动设备上显示</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0.5</span> <span class="comment"># 移动设备上的缩放</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">opacityOnHover:</span> <span class="number">0.8</span></span><br></pre></td></tr></table></figure><h3 id="4-各模型实例"><a href="#4-各模型实例" class="headerlink" title="4.各模型实例"></a>4.各模型实例</h3><p><strong>live2d-widget-model-haruto:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-haruto.png"></p><p><strong>live2d-widget-model-miku:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-miku.png"></p><p><strong>live2d-widget-model-epsilon2_1:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-epsilon2_1.png"></p><p><strong>live2d-widget-model-gf:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-gf.png"></p><p><strong>live2d-widget-model-hibiki:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-hibiki.png"></p><p><strong>live2d-widget-model-hijiki:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-hijiki.png"></p><p><strong>live2d-widget-model-izumi:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-izumi.png"></p><p><strong>live2d-widget-model-koharu:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-koharu.png"></p><p><strong>live2d-widget-model-chitose:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-chitose.png"></p><p><strong>live2d-widget-model-ni-j:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-ni-j.png"></p><p><strong>live2d-widget-model-nico:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-nico.png"></p><p><strong>live2d-widget-model-nietzsche:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-nietzsche.png"></p><p><strong>live2d-widget-model-nipsilon:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-nipsilon.png"></p><p><strong>live2d-widget-model-nito:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-nito.png"></p><p><strong>live2d-widget-model-shizuku:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-shizuku.png"></p><p><strong>live2d-widget-model-tororo:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-tororo.png"></p><p><strong>live2d-widget-model-tsumiki:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-tsumiki.png"></p><p><strong>live2d-widget-model-unitychan:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-unitychan.png"></p><p><strong>live2d-widget-model-wanko:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-wanko.png"></p><p><strong>live2d-widget-model-z16:</strong></p><p><img src="/./%E5%8D%9A%E5%AE%A2%E7%9C%8B%E6%9D%BF%E5%A8%98%E9%85%8D%E7%BD%AE/live2d-widget-model-z16.png"></p><h3 id="好了以上就是一些看板娘的配置，作者每一个都试了一试，个别人物没有效果，其他的都能用。后续更多的博客配置持续更新中-希望大家喜欢！😊"><a href="#好了以上就是一些看板娘的配置，作者每一个都试了一试，个别人物没有效果，其他的都能用。后续更多的博客配置持续更新中-希望大家喜欢！😊" class="headerlink" title="好了以上就是一些看板娘的配置，作者每一个都试了一试，个别人物没有效果，其他的都能用。后续更多的博客配置持续更新中~~希望大家喜欢！😊"></a>好了以上就是一些看板娘的配置，作者每一个都试了一试，个别人物没有效果，其他的都能用。后续更多的博客配置持续更新中~~希望大家喜欢！😊</h3>]]></content>
      
      
      <categories>
          
          <category> 博客配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git基本操作</title>
      <link href="/2023/05/13/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/05/13/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h2><ul><li><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p></li><li><p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p></li><li><p>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</p></li></ul><p>&#x3D;&#x3D;优缺点：&#x3D;&#x3D;</p><p>深究其<a href="https://so.csdn.net/so/search?q=%E5%88%86%E5%B8%83%E5%BC%8F&spm=1001.2101.3001.7020">分布式</a>版本<br>其集中式版本控制工具有缺点也有优点，可看到项目中内容管理，管理员也可管理单一系统也比较容易缺点就是中央服务器的单点故障</p><p>分布式的版本控制系统出现之后,解决了集中式版本控制系统的缺陷:</p><ol><li>服务器断网的情况下也可以进行开发（因为版本控制是在本地进行的）</li><li>每个客户端保存的也都是整个完整的项目（包含历史记录，更加安全）</li></ol><p>&#x3D;&#x3D;工作机制：&#x3D;&#x3D;<br>工作区：通过写好的代码，放在了磁盘区，不是特指编译器中的代码<br>临时存储：通过工作区<code>git add</code>放到此处<br>本地库：通过临时存储的<code>git commit</code>放到此处<br>远程库：通过本地库上传到远程库，代码托管中心是基于网络服务器的远程代码仓库</p><h2 id="2-下载安装"><a href="#2-下载安装" class="headerlink" title="2.下载安装"></a>2.下载安装</h2><h3 id="2-1下载"><a href="#2-1下载" class="headerlink" title="2.1下载"></a>2.1下载</h3><p>官网下载:<a href="https://git-scm.com/">https://git-scm.com</a></p><h3 id="2-2安装"><a href="#2-2安装" class="headerlink" title="2.2安装"></a>2.2安装</h3><p>在Windows上使用Git，可以从Git官网直接<a href="https://git-scm.com/downloads">下载安装程序</a>，然后按默认选项安装即可。</p><p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！</p><p>安装完成后，还需要最后一步设置，在命令行输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;自己的名字&quot;</span><br><span class="line">$ git config --global user.email &quot;自己邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。</p><p>注意git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p><h2 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用"></a>3.使用</h2><p>###3.1创建Git仓库(本地库)<br>什么是版本库呢？版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p><p>所以，创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><p>通过<code>git init</code>命令把这个目录变成Git可以管理的仓库。</p><p>###3.2向仓库添加文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add //向仓库中添加文件</span><br></pre></td></tr></table></figure><h3 id="3-3向仓库提交文件"><a href="#3-3向仓库提交文件" class="headerlink" title="3.3向仓库提交文件"></a>3.3向仓库提交文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &quot;提交的描述信息&quot; //m=message 本次提交的描述信息</span><br></pre></td></tr></table></figure><p>简单解释一下git commit命令，-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。</p><p>嫌麻烦不想输入-m “xxx”行不行？确实有办法可以这么干，但是强烈不建议你这么干，因为输入说明对自己对别人阅读都很重要。实在不想输入说明的童鞋请自行Google，我不告诉你这个参数。<br>###3.4查看Git 状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><ul><li>红色:工作区已修改并未添加到暂存区</li><li>绿色:工作区的修改已经添加到暂存区并未提交到版本库</li><li>nothing to commit, working tree clean 工作区与版本库保持一致</li></ul><h3 id="3-5查看Git提交版本"><a href="#3-5查看Git提交版本" class="headerlink" title="3.5查看Git提交版本"></a>3.5查看Git提交版本</h3><p>当然了，在实际工作中，我们脑子里怎么可能记得一个几千行的文件每次都改了什么内容，不然要版本控制系统干什么。版本控制系统肯定有某个命令可以告诉我们历史记录，在Git中，我们用<code>git log</code>命令查看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br></pre></td></tr></table></figure><p>git log命令显示从最近到最远的提交日志，我们可以看到3次提交，最近的一次是append GPL，上一次是add distributed，最早的一次是wrote a readme file。</p><p>如果嫌输出信息太多，看得眼花缭乱的，可以试试加上–pretty&#x3D;oneline参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --pretty=onelien  //一行展示</span><br></pre></td></tr></table></figure><h3 id="3-6版本回退"><a href="#3-6版本回退" class="headerlink" title="3.6版本回退"></a>3.6版本回退</h3><p>首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，也就是最新的提交1094adb…（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。</p><p>现在，我们要把当前版本append GPL回退到上一个版本add distributed，就可以使用git reset命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reset</span><br></pre></td></tr></table></figure><h3 id="3-7删除文件"><a href="#3-7删除文件" class="headerlink" title="3.7删除文件"></a>3.7删除文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -rf bbb.txt //直接接上要删除文件名</span><br></pre></td></tr></table></figure><h2 id="4-分支管理"><a href="#4-分支管理" class="headerlink" title="4.分支管理"></a>4.分支管理</h2><h3 id="4-1创建分支"><a href="#4-1创建分支" class="headerlink" title="4.1创建分支"></a>4.1创建分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch XXX</span><br></pre></td></tr></table></figure><h3 id="4-2查看分支"><a href="#4-2查看分支" class="headerlink" title="4.2查看分支"></a>4.2查看分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br></pre></td></tr></table></figure><h3 id="4-3切换分支"><a href="#4-3切换分支" class="headerlink" title="4.3切换分支"></a>4.3切换分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout dev</span><br></pre></td></tr></table></figure><h3 id="4-4创建并切换分支"><a href="#4-4创建并切换分支" class="headerlink" title="4.4创建并切换分支"></a>4.4创建并切换分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b prod</span><br></pre></td></tr></table></figure><h3 id="4-5合并分支"><a href="#4-5合并分支" class="headerlink" title="4.5合并分支"></a>4.5合并分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge dev //注意:要将dev分支合并到master分支上,就在master分支执行此命令</span><br></pre></td></tr></table></figure><h3 id="4-6删除分支"><a href="#4-6删除分支" class="headerlink" title="4.6删除分支"></a>4.6删除分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d dev</span><br></pre></td></tr></table></figure><p>在实际开发中，我们应该按照几个基本原则进行分支管理：</p><p>首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；</p><p>那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；</p><p>你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。</p><h2 id="5-其他使用方法"><a href="#5-其他使用方法" class="headerlink" title="5.其他使用方法"></a>5.其他使用方法</h2><h3 id="5-1使用git给文件重命名"><a href="#5-1使用git给文件重命名" class="headerlink" title="5.1使用git给文件重命名"></a>5.1使用git给文件重命名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git mv 文件名 新的文件名</span><br><span class="line">例如：$ git mv files files.md</span><br></pre></td></tr></table></figure><h3 id="5-2通过图形界面工具查看版本历史"><a href="#5-2通过图形界面工具查看版本历史" class="headerlink" title="5.2通过图形界面工具查看版本历史"></a>5.2通过图形界面工具查看版本历史</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gitk</span><br></pre></td></tr></table></figure><p>形如：</p><img src="/2023/05/13/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/gitk.png" alt="gitk效果" style="zoom:30%;"><h3 id="5-3commit，tree和blob三个对象之间的关系"><a href="#5-3commit，tree和blob三个对象之间的关系" class="headerlink" title="5.3commit，tree和blob三个对象之间的关系"></a>5.3commit，tree和blob三个对象之间的关系</h3><p>形如：</p><img src="/2023/05/13/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/commit,tree,blob关联.png" alt="commit,tree和blob关联" style="zoom:30%;"><p>commit里面必定有一棵树tree，tree树里面还会有包含的树tree，同时tree树里面还有blob文件</p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的语法</title>
      <link href="/2023/01/04/%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/01/04/%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML与CSS知识</title>
      <link href="/2022/12/18/HTML%E4%B8%8ECSS%E7%9F%A5%E8%AF%86/"/>
      <url>/2022/12/18/HTML%E4%B8%8ECSS%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h3 id="HTML与CSS区别："><a href="#HTML与CSS区别：" class="headerlink" title="HTML与CSS区别："></a>HTML与CSS区别：</h3><p>  HTML:控制页面内容</p><p>  CSS:控制网页样式</p><h3 id="快捷键："><a href="#快捷键：" class="headerlink" title="快捷键："></a>快捷键：</h3><p>  ！+tab 生成html模板</p><p>  ctrl + &#x2F; 注释的快捷键</p><p>  . + 内容 + tab 生成名字为内容的容器</p><h3 id="认识标签："><a href="#认识标签：" class="headerlink" title="认识标签："></a>认识标签：</h3>  <!-- 标签：开始标签。结束标签 -->  <!-- 属性：在开始标签内部，用来描述标签内的内容 -->  <!--  --> ：html注释（注释不会被看到）  <title> 网页标题 </title>  <body> 网页内容 </body><h3 id="常用的html标签："><a href="#常用的html标签：" class="headerlink" title="常用的html标签："></a>常用的html标签：</h3><h4 id="标题标签："><a href="#标题标签：" class="headerlink" title="标题标签："></a>标题标签：</h4><p>​</p><h1></h1> :一级标签，常用于标题<p></p><p>​    </p><h2></h2><p></p><p>​    </p><h3></h3><p></p><p>​    </p><h4></h4><p></p><p>​    </p><h5></h5><p></p><p>​    </p><h6></h6><p></p><p>​    常用的标题标签有：h1、h2、h3</p><h4 id="段落标签："><a href="#段落标签：" class="headerlink" title="段落标签："></a>段落标签：</h4><pre><code> &lt;p&gt;&lt;/p&gt;</code></pre><p>​    段落描述网页文章的内容</p><h4 id="无序列表："><a href="#无序列表：" class="headerlink" title="无序列表："></a>无序列表：</h4><p>​    <ul></ul></p><p>​      <li></li></p><p>​      <li></li></p><p>​      <li></li></p><p>​    </p>  <!-- ul无序列表、有序列表ol、列表元素li --><p>  无序列表用比较多</p><h4 id="超链接标签："><a href="#超链接标签：" class="headerlink" title="超链接标签："></a>超链接标签：</h4><p>​        <a href></a></p><p>​    <!-- href属性：可以跳转到指定的标签 --></p><h4 id="图片标签："><a href="#图片标签：" class="headerlink" title="图片标签："></a>图片标签：</h4><p>​        <img src alt></p><p>​      <!-- alt属性：当图片加载不成功时显示的文字 --></p><p>​      <!-- src属性：图片所在的位置  --></p><h4 id="div标签："><a href="#div标签：" class="headerlink" title="div标签："></a>div标签：</h4><p>​ <div></div></p><p>​    无语义的标签、实现网页布局（划分多个区域）</p><h4 id="span标签："><a href="#span标签：" class="headerlink" title="span标签："></a>span标签：</h4><p>​    <span></span></p><p>​    无语义的标签、实现网页布局（内部划分区域）</p><h3 id="html属性："><a href="#html属性：" class="headerlink" title="html属性："></a>html属性：</h3><h4 id="src属性："><a href="#src属性：" class="headerlink" title="src属性："></a>src属性：</h4><p>​    img图片属性所在的路径</p><h4 id="class属性："><a href="#class属性：" class="headerlink" title="class属性："></a>class属性：</h4><p>​    class属性值：定义一个类（分类分别指定不同的样式）</p><h4 id="id属性："><a href="#id属性：" class="headerlink" title="id属性："></a>id属性：</h4><p>​    id属性值：给标签定义一个唯一值</p><h3 id="表格与表单元素："><a href="#表格与表单元素：" class="headerlink" title="表格与表单元素："></a>表格与表单元素：</h3><h4 id="表格元素："><a href="#表格元素：" class="headerlink" title="表格元素："></a>表格元素：</h4><p>​    表格主要用来显示数据</p><p>​    表格元素的容器使用table标签</p><p>​<table></table></p><h5 id="其他表格元素的标签："><a href="#其他表格元素的标签：" class="headerlink" title="其他表格元素的标签："></a>其他表格元素的标签：</h5><p>​thead、tbody、th、tr、td等</p><p>​      <thead></thead>：存放表头</p><p>​      <tbody></tbody>：表体真正展示数据</p><p>​      <th></th>：表格的单元格</p><p>​      <td></td>：单个单元格</p><p>​      <tr></tr>：行</p><h5 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h5><p>​        合并列属性 colspan&#x3D;” “</p><p>​        合并行属性 rowspan&#x3D;” “</p><h4 id="表单元素："><a href="#表单元素：" class="headerlink" title="表单元素："></a>表单元素：</h4><p>​    表单主要用于向服务器发送数据</p><p>​    表单元素容器使用form标签</p><p>​      <form action></form></p><p>​      action标签涉及调取数据问题</p><h5 id="常用的标签包括有："><a href="#常用的标签包括有：" class="headerlink" title="常用的标签包括有："></a>常用的标签包括有：</h5><p>​      <input type="text"> ：文本输入框</p><p>​        placeholder属性：提示文本</p><p>​      <input type="password">:密码</p><p>​        密码属性不可见</p><p>​      <label for></label>：文本框前提示文字</p><p>​        for：里面填入id值，点击时可以帮助文本框获取焦点</p><p>​      <select name id></select>：选择</p><p>​      name：向服务器发送数据的字段</p><p>​      <option value></option></p><p>​      放在select标签中，作为被选项</p><p>​      <input type="submit">：提交</p><p>​      value属性控制按钮上的文本</p><p>​      将数据提交给后台</p><p>​      <input type="button">：按钮</p><p>​      普通按钮不带任何设置；需要自行设置</p><p>​      <input type="radio">：单选框</p><p>​      name属性：将同样的name属性的单选框绑定到一起；只能选一个</p><p>​      <input type="checkbox">：复选框</p><h3 id="CSS选择器与常用属性"><a href="#CSS选择器与常用属性" class="headerlink" title="CSS选择器与常用属性"></a>CSS选择器与常用属性</h3><h4 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h4><h5 id="CSS语法："><a href="#CSS语法：" class="headerlink" title="CSS语法："></a>CSS语法：</h5><p>​    选择器{</p><p>​      属性名：属性值</p><p>​    }</p><h5 id="style标签："><a href="#style标签：" class="headerlink" title="style标签："></a>style标签：</h5><p>​<style></style></p><p>​    style标签内写入选择器</p><h5 id="常用的css选择器："><a href="#常用的css选择器：" class="headerlink" title="常用的css选择器："></a>常用的css选择器：</h5><h6 id="元素选择器：直接通过标签名来寻找"><a href="#元素选择器：直接通过标签名来寻找" class="headerlink" title="元素选择器：直接通过标签名来寻找"></a>元素选择器：直接通过标签名来寻找</h6><p>​      h1{xxx}</p><h6 id="类选择器：加入class属性（指定多个同class名的元素）"><a href="#类选择器：加入class属性（指定多个同class名的元素）" class="headerlink" title="类选择器：加入class属性（指定多个同class名的元素）"></a>类选择器：加入class属性（指定多个同class名的元素）</h6><p>​      .class名{xxx}</p><h6 id="id选择器：加入id属性（指定单个元素）"><a href="#id选择器：加入id属性（指定单个元素）" class="headerlink" title="id选择器：加入id属性（指定单个元素）"></a>id选择器：加入id属性（指定单个元素）</h6><p>​      #id名{xxx}</p><h6 id="通配符选择器："><a href="#通配符选择器：" class="headerlink" title="通配符选择器："></a>通配符选择器：</h6><p>​      *{xxx}</p><h6 id="层级选择器：选择某一class属性下的某一标签"><a href="#层级选择器：选择某一class属性下的某一标签" class="headerlink" title="层级选择器：选择某一class属性下的某一标签"></a>层级选择器：选择某一class属性下的某一标签</h6><p>​      .class属性名 h1{xxx}</p><h6 id="组合选择器：用逗号分隔"><a href="#组合选择器：用逗号分隔" class="headerlink" title="组合选择器：用逗号分隔"></a>组合选择器：用逗号分隔</h6><p>​      选择器1,选择器2{xxx}</p><h6 id="伪类选择器：增加行为"><a href="#伪类选择器：增加行为" class="headerlink" title="伪类选择器：增加行为"></a>伪类选择器：增加行为</h6><p>​      选择器：hover{xxx}</p><p>​        hover：鼠标指上的时候的选择</p><h6 id="伪元素选择器：增加元素"><a href="#伪元素选择器：增加元素" class="headerlink" title="伪元素选择器：增加元素"></a>伪元素选择器：增加元素</h6><p>​      选择器::befor，选择器::after</p><p>​      在元素之前加内容&#x2F;在元素之后加内容</p><h4 id="选择器的权重："><a href="#选择器的权重：" class="headerlink" title="选择器的权重："></a>选择器的权重：</h4><p>​    相同选择器:后面的选择器会覆盖前面的选择器</p><p>​    不同选择器：id选择器的权重 &gt; class选择器的权重 &gt; 元素选择器的权重</p><p>​    层级选择器：计算多个选择器权重</p><p>​      ！important属性 让权重设为最高</p><h4 id="常用的css属性："><a href="#常用的css属性：" class="headerlink" title="常用的css属性："></a>常用的css属性：</h4><p>​    font-size:字体大小</p><p>​      （Chrome浏览器中font-size最小值是12px）</p><p>​    color：字体颜色</p><p>​    width：宽度</p><p>​    height：高度</p><p>​      高度宽度可能强行拉伸图片</p><p>​    background：背景</p><p>​    text-align：文本水平居中</p><p>​    line-height：文本行高（垂直居中）</p><h4 id="引入css的方法："><a href="#引入css的方法：" class="headerlink" title="引入css的方法："></a>引入css的方法：</h4><h5 id="嵌入式："><a href="#嵌入式：" class="headerlink" title="嵌入式："></a>嵌入式：</h5><p>​<style></style>（少量的样式）</p><h5 id="内联式："><a href="#内联式：" class="headerlink" title="内联式："></a>内联式：</h5><p>​   写在属性里面style（不常用）</p><p>​      内联样式行内样式权重高于嵌入样式</p><h5 id="外部式："><a href="#外部式：" class="headerlink" title="外部式："></a>外部式：</h5><p>​   引入外部css文件（常用）</p><p>​      方便拆分为两个窗口</p><p>​      link标签引入外部css文件</p><h3 id="盒子模型："><a href="#盒子模型：" class="headerlink" title="盒子模型："></a>盒子模型：</h3><p>  将HTML元素看作盒子实现的网页布局</p><h4 id="有关盒子模型的css属性："><a href="#有关盒子模型的css属性：" class="headerlink" title="有关盒子模型的css属性："></a>有关盒子模型的css属性：</h4><p>​    边框：border</p><p>​      border-width：边框宽度</p><p>​      border-style：边框形式</p><p>​        none无边框 &#x2F; dashed虚线边框 &#x2F; solid实线边框 &#x2F; double双线边框 &#x2F; dotted点状边框</p><p>​      border-color：边框颜色</p><p>​    外边距：margin</p><p>​      top &#x2F; right &#x2F; bottom &#x2F; left</p><p>​      4个值的时候上右下左、2个值的时候上下、左右</p><p>​    内边距：padding</p><p>​      设置距离会改变盒子大小</p><h4 id="认情况下元素宽度和高度的计算"><a href="#认情况下元素宽度和高度的计算" class="headerlink" title="认情况下元素宽度和高度的计算"></a>认情况下元素宽度和高度的计算</h4><p>​      元素实际宽度 &#x3D; border-left + border-right + width + padding-left + padding-right</p><p>​      元素实际高度 &#x3D; border-top + border-bottom + height + padding-top + padding-bottom</p><p>​      设置属性：box-size:border-box</p><p>​        元素实际宽度 &#x3D; width</p><p>​        元素实际高度 &#x3D; height</p><p>​      元素边距初始化（清除系统默认边距）</p><p>​        *{margin:0px;padding:0px}</p><p>​      元素布局：margin：auto元素自动居中</p><h5 id="列表的样式："><a href="#列表的样式：" class="headerlink" title="列表的样式："></a>列表的样式：</h5><p>​        取消列表样式：list-style：none</p><p>​        列表样式在边距之内：list-style:inside</p><h3 id="浮动布局"><a href="#浮动布局" class="headerlink" title="浮动布局"></a>浮动布局</h3><h4 id="HTML元素的分类："><a href="#HTML元素的分类：" class="headerlink" title="HTML元素的分类："></a>HTML元素的分类：</h4><p>​    块元素：可以设置高度宽度，独立成行。</p><p>​      h1-6、p、div、ul、li</p><p>​    行内元素（内联元素、行级元素）：不可以设置宽度和高度，不独立成行。</p><p>​      a、span</p><p>​    行内块元素：可以设置宽度和高度，不独立成行</p><p>​      img、input、button</p><h5 id="display属性："><a href="#display属性：" class="headerlink" title="display属性："></a>display属性：</h5><p>​    block:将元素变成块元素</p><p>​    inline：转换为行内元素</p><p>​    inline-block：转换为行内块元素</p><p>​    none：隐藏元素</p><h4 id="浮动布局："><a href="#浮动布局：" class="headerlink" title="浮动布局："></a>浮动布局：</h4><p>​    将元素设置为浮动（float），块元素可以在同一行显示</p><h5 id="浮动元素的特性："><a href="#浮动元素的特性：" class="headerlink" title="浮动元素的特性："></a>浮动元素的特性：</h5><p>​      脱离文档流（不占位）</p><p>​    空div清除浮动</p><p>​      clear:both（清除浮动造成的不良影响）</p><p>​    用伪元素清除浮动</p><p>​      .clear::after,.clear::befor{</p><p>​        content:” “;</p><p>​        display:block;</p><p>​        clear:both;</p><p>​      }</p><h3 id="树状结构"><a href="#树状结构" class="headerlink" title="树状结构"></a>树状结构</h3><p>  家谱就是个树状结构，每个人都是一个树状结构上的节点。</p><p>  各节点之间的关系：</p><p>​    根节点：每个树状结构都有一个没有父级的节点就称之为父节点</p><p>​    父级节点：</p><p>​    子级节点：</p><p>​    同级关系：有相同父级的节点就是同级关系（一定要相同父级）</p><h3 id="CSS定位"><a href="#CSS定位" class="headerlink" title="CSS定位"></a>CSS定位</h3><h4 id="css定位（position）"><a href="#css定位（position）" class="headerlink" title="css定位（position）"></a>css定位（position）</h4><h5 id="绝对定位：absolute"><a href="#绝对定位：absolute" class="headerlink" title="绝对定位：absolute"></a>绝对定位：absolute</h5><p>​      脱离文档流（不占位）</p><p>​      默认参照为浏览器视窗的左上角</p><h5 id="相对定位：relative"><a href="#相对定位：relative" class="headerlink" title="相对定位：relative"></a>相对定位：relative</h5><p>​      不脱离文档流（占位）</p><p>​      默认参照为原本所在的位置</p><h5 id="固定定位：fixed"><a href="#固定定位：fixed" class="headerlink" title="固定定位：fixed"></a>固定定位：fixed</h5><p>​      脱离文档流（不占位）</p><p>​      默认参照为浏览器视窗的位置</p><h4 id="坐标属性：非定位元素不起作用"><a href="#坐标属性：非定位元素不起作用" class="headerlink" title="坐标属性：非定位元素不起作用"></a>坐标属性：非定位元素不起作用</h4><p>​    top、left、right、bottom、z-index</p><h5 id="设置z轴（z-index）"><a href="#设置z轴（z-index）" class="headerlink" title="设置z轴（z-index）"></a>设置z轴（z-index）</h5><p>​      值为整数；数值越大、显示越靠前</p><h5 id="设置参照物："><a href="#设置参照物：" class="headerlink" title="设置参照物："></a>设置参照物：</h5><p>​    通常情况下父级relative、子级为absolute</p><h3 id="HTML5新增标签"><a href="#HTML5新增标签" class="headerlink" title="HTML5新增标签"></a>HTML5新增标签</h3><p>  HTML5是超文本标记语言html的第五次重大修改，简称为H5（h5可能指html的第五个版本、移动端的网页效果、js接口、手机端整屏的轮播图效果）</p><h4 id="HTML5的新特性"><a href="#HTML5的新特性" class="headerlink" title="HTML5的新特性"></a>HTML5的新特性</h4><h5 id="布局元素（布局元素相当于提供了一个有语义的div）"><a href="#布局元素（布局元素相当于提供了一个有语义的div）" class="headerlink" title="布局元素（布局元素相当于提供了一个有语义的div）"></a>布局元素（布局元素相当于提供了一个有语义的div）</h5><p>​      header：网页头部</p><p>​      nav：页面导航（可以放到导航栏中）</p><p>​      aside：侧边栏</p><p>​      article：显示文章</p><p>​      section：章节</p><p>​      footer：网页页脚</p><p>​      hgroup：标题组</p><p>​      figure：元素组</p><h5 id="媒体元素"><a href="#媒体元素" class="headerlink" title="媒体元素"></a>媒体元素</h5><p>​      audio 音频元素</p><p>​      video 视频元素</p><h5 id="媒体元素属性"><a href="#媒体元素属性" class="headerlink" title="媒体元素属性"></a>媒体元素属性</h5><p>​        controls（控制面板）</p><p>​        autoplay（自动播放）</p><p>​        muted（静音，默认静音后才能自动播放）</p><h5 id="画布（）"><a href="#画布（）" class="headerlink" title="画布（）"></a>画布（<canvas>）</canvas></h5><h5 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h5><h5 id="表单新特性"><a href="#表单新特性" class="headerlink" title="表单新特性"></a>表单新特性</h5><h3 id="CSS3新特性"><a href="#CSS3新特性" class="headerlink" title="CSS3新特性"></a>CSS3新特性</h3><p>  新增特性如边框圆角、动画效果等</p><h4 id="边框圆角"><a href="#边框圆角" class="headerlink" title="边框圆角"></a>边框圆角</h4><p>​    border-radius:左上 右上 右下 左下（如果设置两个值，第一个值表示左上和右下，第二个值表示右上和左下）</p><p>​    圆角达到边距的50%变成正圆</p><h4 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h4><p>​    box-shadow:阴影X轴偏移 阴影y轴偏移 模糊半径 颜色</p><h4 id="形变：旋转、缩放、位移"><a href="#形变：旋转、缩放、位移" class="headerlink" title="形变：旋转、缩放、位移"></a>形变：旋转、缩放、位移</h4><p>​    transform:</p><p>​      rotate():旋转 deg表示角度</p><p>​      scale()：缩放 按照倍数缩放</p><p>​      translate()：位移 </p><h4 id="过渡效果"><a href="#过渡效果" class="headerlink" title="过渡效果"></a>过渡效果</h4><h5 id="transition-过渡属性"><a href="#transition-过渡属性" class="headerlink" title="transition:过渡属性"></a>transition:过渡属性</h5><h6 id="transition-propery-过渡属性（transform）"><a href="#transition-propery-过渡属性（transform）" class="headerlink" title="transition-propery 过渡属性（transform）"></a>transition-propery 过渡属性（transform）</h6><h6 id="transition-duration-过渡持续时间"><a href="#transition-duration-过渡持续时间" class="headerlink" title="transition-duration 过渡持续时间"></a>transition-duration 过渡持续时间</h6><h6 id="transition-timing-function-过渡函数"><a href="#transition-timing-function-过渡函数" class="headerlink" title="transition-timing-function 过渡函数"></a>transition-timing-function 过渡函数</h6><p>​        ease:开始和结束慢，中间快（默认值）</p><p>​        linear:匀速</p><p>​        ease-in:开始慢</p><p>​        ease-out:结束慢</p><p>​        ease-in-out:比ease幅度大</p><h6 id="transition-delay-过渡延迟时间"><a href="#transition-delay-过渡延迟时间" class="headerlink" title="transition-delay 过渡延迟时间"></a>transition-delay 过渡延迟时间</h6><p>​      简写：transition:属性 秒数 函数 延迟</p><h5 id="transform-origin-设置旋转原点"><a href="#transform-origin-设置旋转原点" class="headerlink" title="transform-origin:设置旋转原点"></a>transform-origin:设置旋转原点</h5><p>​    overflow:超出部分设置  </p><p>​      hidden隐藏</p><p>​      auto滚动条</p><h4 id="动画效果"><a href="#动画效果" class="headerlink" title="动画效果"></a>动画效果</h4><h5 id="过渡效果和动画效果的区别"><a href="#过渡效果和动画效果的区别" class="headerlink" title="过渡效果和动画效果的区别"></a>过渡效果和动画效果的区别</h5><p>​      过渡效果通常用户与浏览器进行交互</p><p>​      动画效果可以交互，也可以在网页加载时直接执行，并且可以让效果更复杂</p><h5 id="animation动画属性"><a href="#animation动画属性" class="headerlink" title="animation动画属性"></a>animation动画属性</h5><p>​      animation-name:规定需要绑定到选择器的keyframe名称</p><p>​      animation-duration:规定完成动画所花费的时间</p><p>​      animation-timing-function:规定动画的速度曲线</p><p>​      animation-delay:规定在动画开始之前的延迟</p><p>​      animation-iteration-count:规定该动画播放的次数</p><h5 id="定义动画"><a href="#定义动画" class="headerlink" title="定义动画"></a>定义动画</h5><p>​      @keyframes anim{</p><p>​        0%{</p><p>​          transform:</p><p>​        }</p><p>​        100%{</p><p>​          transform:</p><p>​        }</p><p>​      }</p><h4 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h4><h4 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h4><p>​    让网页布局更简洁，更易于维护</p><h5 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h5><p>​      让元素设为display:flex;元素变为一个flex容器</p><p>​      容器内部的元素为flex元素或者flex项目</p><p>​      （display：none隐藏)（display：block块元素）（display：inline行元素）</p><h5 id="flex容器中的默认效果"><a href="#flex容器中的默认效果" class="headerlink" title="flex容器中的默认效果"></a>flex容器中的默认效果</h5><p>​      flex项目在flex容器中沿主轴排列</p><p>​      flex项目高度适应容器高度（同行内元素）</p><h5 id="设置flex容器"><a href="#设置flex容器" class="headerlink" title="设置flex容器"></a>设置flex容器</h5><h6 id="flex-direction-设置flex项目排列方向"><a href="#flex-direction-设置flex项目排列方向" class="headerlink" title="flex-direction:设置flex项目排列方向"></a>flex-direction:设置flex项目排列方向</h6><p>​        row:默认值，主轴为水平，起点在左端</p><p>​        row-reverse:主轴为水平，起点在右端</p><p>​        column:主轴为垂直，起点在上端</p><p>​        column:-reverse:主轴为垂直，起点在下端</p><h6 id="justify-content-flex项目主轴排列方式"><a href="#justify-content-flex项目主轴排列方式" class="headerlink" title="justify-content:flex项目主轴排列方式"></a>justify-content:flex项目主轴排列方式</h6><p>​        flex-start(默认值)：左对齐</p><p>​        flex-end:右对齐</p><p>​        center:居中</p><p>​        space-between:两端对齐，项目之间的间隔都相等</p><p>​        space-around:每个项目两端间距相等。项目间隔比项目与边框之间间隔大一点</p><h6 id="align-items-flex项目在交叉轴的排列方式"><a href="#align-items-flex项目在交叉轴的排列方式" class="headerlink" title="align-items:flex项目在交叉轴的排列方式"></a>align-items:flex项目在交叉轴的排列方式</h6><p>​        flex-start：交叉轴的起点对齐</p><p>​        flex-end:交叉轴的终点对齐</p><p>​        center:交叉轴的中点对齐</p><p>​        strech:(默认值)：如果项目未设置高度或设为auto，将占满整个容器高度</p><h5 id="flex项目"><a href="#flex项目" class="headerlink" title="flex项目"></a>flex项目</h5><p>​      flex-grow:属性定义项目的放大比例,默认为0 ,空间充足,等比例补全。+</p><p>​      flex-shrink:定义了项目的缩小比例,默认为1 ,即如果空间不足,该项目将缩小</p><p>​      flex-basis：主轴排列为宽度,交叉轴排列为高度,设置px ,默认值是auto。</p><p>​      flex：综合上面三个样式</p><p>​      align-self:flex项目的对其方式( auto | flex-start | flex-end | center | baseline | stretch )</p><h4 id="grid布局"><a href="#grid布局" class="headerlink" title="grid布局"></a>grid布局</h4><p>flex布局是一维布局，gird是二维布局。</p><p>flex布局考虑的是项目按照行或者列布局，grid布局需要同时考虑行和列。</p><p>属性：</p><ul><li>grid-tempalte-columnss：设置行宽</li><li>grid-tempalte-rows：设置行高<ul><li>px具体的像素</li><li>fr按照比例占满整个容器</li></ul></li><li>grid-auto-flow:column 元素纵向排列</li></ul><p>容器属性：</p><p>​<strong>在单元格中的对齐方式</strong></p><ul><li><p>justify-items 属性</p></li><li><p>align-items 属性</p><ul><li>默认stretch（延伸）</li><li>start开始</li><li>center居中显示</li><li>end末尾</li></ul><p><strong>单元格在容器中的对齐方式</strong></p></li><li><p>justify-content属性</p></li><li><p>align-content属性</p><ul><li>center单元格位置在容器中居中</li></ul><p><strong>设置溢出的尺寸</strong></p></li><li><p>grid-auto-columns属性</p></li><li><p>grid-auto-rows属性</p></li></ul><p>项目属性：</p><p>​合并单元格横向</p><ul><li><p>grid-column-start属性</p></li><li><p>grid-column-end属性</p></li><li><p>grid-column属性</p><p>合并单元格纵向</p></li><li><p>grid-row-start属性</p></li><li><p>grid-row-end属性</p></li><li><p>grid-row属性</p><p>设置字体位置</p></li><li><p>justify-self属性</p></li><li><p>align-self属性</p></li></ul><h4 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h4><p>同一套静态页面代码在不同设备中展现出不同的效果，适应多个设备</p><h5 id="媒体查询-1"><a href="#媒体查询-1" class="headerlink" title="媒体查询"></a>媒体查询</h5><p>通过@media定义样式，浏览器窗口满足指定条件，才会应用此样式。</p><h4 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h4><h5 id="移动端的特点"><a href="#移动端的特点" class="headerlink" title="移动端的特点"></a>移动端的特点</h5><ul><li>设备尺寸不同</li><li>可以通过设置百分比解决</li><li>设置计算百分比计算繁琐</li></ul><p>rem相当于html标签的font-size</p><p>相对单位，相对于父级的font-size</p><p><strong>1em&#x3D;父级的font-size的像素</strong></p><p>rem相对于html标签的font-size</p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端-第五章</title>
      <link href="/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%BA%94%E7%AB%A0/"/>
      <url>/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%BA%94%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="超链接a"><a href="#超链接a" class="headerlink" title="超链接a :"></a>超链接a :</h3><p><strong>基本语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;&quot;</span>&gt;</span>超链接标题<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br></pre></td></tr></table></figure><p><a href="www.baidu.com" name title target>超链接标题</a> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;www.baidu.com&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;&quot;</span>&gt;</span>百度的链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br></pre></td></tr></table></figure><p><a href="'https://lenovo.ilive.cn/?f=stee'">百度的链接</a></p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端-第四章</title>
      <link href="/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E5%9B%9B%E7%AB%A0/"/>
      <url>/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E5%9B%9B%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="x3D-x3D-1-列表分类：-x3D-x3D"><a href="#x3D-x3D-1-列表分类：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;1.列表分类：&#x3D;&#x3D;"></a>&#x3D;&#x3D;1.列表分类：&#x3D;&#x3D;</h3><p>有序，无序，定义，菜单，目录五类。</p><h3 id="x3D-x3D-2-无序列表-x3D-x3D"><a href="#x3D-x3D-2-无序列表-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;2.无序列表&#x3D;&#x3D;"></a>&#x3D;&#x3D;2.无序列表&#x3D;&#x3D;</h3><p><strong>基本语法：</strong><ul type></ul></p><p>​                              <li type>项目名称</li></p><p>​                    </p><p><strong>type属性：</strong>disc 实心圆     circle 空心圆     square 实心正方形</p><h2 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h2><style>    ul{list-style-type : none;}  //删除列表前面的符号</style><h3 id="x3D-x3D-3-有序列表-x3D-x3D"><a href="#x3D-x3D-3-有序列表-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;3.有序列表&#x3D;&#x3D;"></a>&#x3D;&#x3D;3.有序列表&#x3D;&#x3D;</h3><p><strong>基本语法：</strong><ol type start></ol></p><p>​                                <li type value>项目名称</li></p><p>​                     </p><p><code>补充：在ol中的type是决定列表编号类型,start是决定编号起始顺序。</code></p><p><code>在li中的type是改变自身的类型，value是改变自身的起始编号，同时改变后续列表的编号顺序</code></p><p>**type：1 数字 , A 英文大写 ， a 英文小写 ， I 罗马大写 ， i 罗马小写 **</p><h3 id="x3D-x3D-4-列表嵌套：-x3D-x3D"><a href="#x3D-x3D-4-列表嵌套：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;4.列表嵌套：&#x3D;&#x3D;"></a>&#x3D;&#x3D;4.列表嵌套：&#x3D;&#x3D;</h3><p><strong>基本语法：</strong></p><ul>    <li>项目名称        <ol>            <li>项目名称</li>            ....        </ol>    </li>    .....</ul><h3 id="x3D-x3D-5-定义列表：-x3D-x3D"><a href="#x3D-x3D-5-定义列表：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;5.定义列表：&#x3D;&#x3D;"></a>&#x3D;&#x3D;5.定义列表：&#x3D;&#x3D;</h3><p>定义列表每一项表基础前面即没有符号，也没有编号</p><p><strong>基本语法：</strong><dl></dl></p><p>​                          <dt>项目</dt></p><p>​                                    <dd>说明1</dd></p><p>​                                     <dd>说明2</dd></p><p>​                              ….</p><p>​                          </p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端-第三章</title>
      <link href="/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%B8%89%E7%AB%A0/"/>
      <url>/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%B8%89%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="x3D-x3D-1-HTML标签：-x3D-x3D"><a href="#x3D-x3D-1-HTML标签：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;1.HTML标签：&#x3D;&#x3D;"></a>&#x3D;&#x3D;1.HTML标签：&#x3D;&#x3D;</h3><p><code>(1)标题字标记：</code>h1~h6 等级越高，标题字号越大      <code>(2)段内换行：</code>br       <code>(3)水平分割线：</code>hr</p><p><code>(4)段落：</code>p     <code>(5)段内分组：</code>span      <code>(6)预留格式：</code>pre       <code>(7)超链接：</code>a</p><p><code>(8)插入图片：</code>img        <code>(9)列表：</code>ul,ol,li        <code>(10)表格：</code>table tr td th</p><h3 id="x3D-x3D-2-添加空格与特殊符号：-x3D-x3D"><a href="#x3D-x3D-2-添加空格与特殊符号：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;2.添加空格与特殊符号：&#x3D;&#x3D;"></a>&#x3D;&#x3D;2.添加空格与特殊符号：&#x3D;&#x3D;</h3><p><strong>基本语法：</strong><body></body></p><p>​                           &amp;nbsp(空格)；&amp;lt(小于)；&amp;reg(注册商标)；&lt;&amp;copy&gt;(版权);</p><p>​                   </p><h3 id="x3D-x3D-3-字体font标记：-x3D-x3D"><a href="#x3D-x3D-3-字体font标记：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;3.字体font标记：&#x3D;&#x3D;"></a>&#x3D;&#x3D;3.字体font标记：&#x3D;&#x3D;</h3><p><strong>基本语法</strong>     《font face&#x3D;”” size&#x3D;”” color&#x3D;””》内容《&#x2F;font》</p><h3 id="x3D-x3D-4-段落标记：-x3D-x3D"><a href="#x3D-x3D-4-段落标记：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;4.段落标记：&#x3D;&#x3D;"></a>&#x3D;&#x3D;4.段落标记：&#x3D;&#x3D;</h3><p><strong>基本语法：</strong></p><p align="left/center/right">内容</p><p></p><p>###&#x3D;&#x3D;水平分割线：&#x3D;&#x3D;</p><p><strong>基本语法：</strong><hr size width color align noshade></p><h3 id="x3D-x3D-5-拼音-x2F-音标，注释-ruby标记和rt-x2F-rp标记：-x3D-x3D"><a href="#x3D-x3D-5-拼音-x2F-音标，注释-ruby标记和rt-x2F-rp标记：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;5.拼音&#x2F;音标，注释 ruby标记和rt&#x2F;rp标记：&#x3D;&#x3D;"></a>&#x3D;&#x3D;5.拼音&#x2F;音标，注释 ruby标记和rt&#x2F;rp标记：&#x3D;&#x3D;</h3><p><code>ruby标记：</code>用它将需要注释或注音标的文字内容包住</p><p><code>rt标记：</code>里面放置音标或注释，这个标记要跟在需要注释的文本后面</p><p><strong>基本语法：</strong><ruby></ruby></p><p>​                           中<rp>(</rp><rt>zhong</rt><rp>)</rp></p><p>​                           国<rp>(</rp><rt>guo</rt><rp>)</rp></p><p>​                    </p><h3 id="x3D-x3D-6-段落缩进-blockquote标记：-x3D-x3D-（文本内容所有缩进）"><a href="#x3D-x3D-6-段落缩进-blockquote标记：-x3D-x3D-（文本内容所有缩进）" class="headerlink" title="&#x3D;&#x3D;6.段落缩进 blockquote标记：&#x3D;&#x3D;（文本内容所有缩进）"></a>&#x3D;&#x3D;6.段落缩进 blockquote标记：&#x3D;&#x3D;（文本内容所有缩进）</h3><p>   这是块级标记，标记里面的内容能够向右缩进5个英文字符位置，并在内容周围添加外边距</p><p><strong>基本语法：</strong><blockquote>引用内容</blockquote></p><p>###&#x3D;&#x3D;7.预格式化 pre标记：&#x3D;&#x3D;</p><p>对网页中的文字段落进行预格式化，浏览器会保留设计者在源文件中所定义的格式，包括各种<strong>空格</strong>，<strong>缩进</strong>以及<strong>其他特殊格式</strong>。</p><p><strong>基本语法：</strong><pre>预格式化文本</pre></p><h2 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h2><p><code>块级元素：</code>一般通过块元素对网页进行布局</p><p>块元素只能出现在<body>元素内，通常浏览器会在块级元素前后另起新一行（<strong>也就是块级元素单独占一行</strong>）</body></p><p><code>行内元素:</code>主要用来包裹文字</p><p><code>行内元素与块级元素对比：</code></p><p>（1）内容：一般情况下，行内元素只能包含数据和其他行内元素，而块级元素可以包含行内元素和其他块级元素。</p><p>（2）格式：行内元素不会以新一行开始，而块级元素会新起一行。</p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端-第二章</title>
      <link href="/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
      <url>/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%BA%8C%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="HTML文档结构"><a href="#HTML文档结构" class="headerlink" title="HTML文档结构"></a>HTML文档结构</h2><p><code>HTML文档由头部head和主体body组成</code></p><p>###&#x3D;&#x3D;1.头部head标记：&#x3D;&#x3D;</p><p>（1）标题title标记</p><p>（2）元信息meta标记：<code>&lt;meta name=&quot;&quot; content=&quot;&quot;&gt;</code></p><p><code> &lt;meta http-eqnive=&quot;&quot; content=&quot;&quot;&gt;</code></p><p>###&#x3D;&#x3D;2.主体body：&#x3D;&#x3D;</p><p>语法：<body>这是内容</body></p><h4 id="注意：一般来说，只有以下6个标签能放入head标签内：title，meta，link，style，script，base。"><a href="#注意：一般来说，只有以下6个标签能放入head标签内：title，meta，link，style，script，base。" class="headerlink" title="注意：一般来说，只有以下6个标签能放入head标签内：title，meta，link，style，script，base。"></a>注意：一般来说，只有以下6个标签能放入head标签内：title，meta，link，style，script，base。</h4><p>###&#x3D;&#x3D;3.HTML基本语法&#x3D;&#x3D;</p><p>（1）标记类型：</p><p>&#x3D;&#x3D;单个标记：&#x3D;&#x3D;&lt;标记名称&gt;或&lt;标记名称&#x2F;&gt;</p><p>例如：<br>，<br>表示换行</p><p>，<hr>,表示水平分割线,</p><link>表示链接标记<p>&#x3D;&#x3D;双标记：&#x3D;&#x3D;</p><p>&lt;标记名称&gt;内容&lt;&#x2F;标记名称&gt;</p><p>（2）HTML属性：</p><p>&lt;标记名称 属性名1&#x3D;”属性值1” 属性名2&#x3D;”属性值2”&gt;&lt;&#x2F;标记名称&gt;</p><p>（3）添加注释：</p><!--注释信息--><p>或<comment>注释信息</comment></p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端-第一章</title>
      <link href="/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
      <url>/2022/12/11/Web%E5%89%8D%E7%AB%AF-%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h4 id="x3D-x3D-（1）web特点-x3D-x3D-："><a href="#x3D-x3D-（1）web特点-x3D-x3D-：" class="headerlink" title="&#x3D;&#x3D;（1）web特点&#x3D;&#x3D;："></a>&#x3D;&#x3D;（1）web特点&#x3D;&#x3D;：</h4><p>1.易导航和图形化</p><p>2.平台无关性</p><p>3.支持分布式结构</p><p>4.动态性</p><p>5.交互性</p><h4 id="x3D-x3D-（2）HTML-x3D-x3D-："><a href="#x3D-x3D-（2）HTML-x3D-x3D-：" class="headerlink" title="&#x3D;&#x3D;（2）HTML&#x3D;&#x3D;："></a>&#x3D;&#x3D;（2）HTML&#x3D;&#x3D;：</h4><p>HTML：超文本标记语言，制作网页的标准语言，描述网页的结构</p><h4 id="x3D-x3D-（3）HTML文档-x3D-x3D-："><a href="#x3D-x3D-（3）HTML文档-x3D-x3D-：" class="headerlink" title="&#x3D;&#x3D;（3）HTML文档&#x3D;&#x3D;："></a>&#x3D;&#x3D;（3）HTML文档&#x3D;&#x3D;：</h4><p>HTML文档：用来描述网页，由HTML标记和纯文本构成的文本文件</p><h4 id="x3D-x3D-（4）CSS级联样式表-x3D-x3D-："><a href="#x3D-x3D-（4）CSS级联样式表-x3D-x3D-：" class="headerlink" title="&#x3D;&#x3D;（4）CSS级联样式表&#x3D;&#x3D;："></a>&#x3D;&#x3D;（4）CSS级联样式表&#x3D;&#x3D;：</h4><p>CSS级联样式表：css语言是一种标记语言</p><p>CSS作用：可以有效地对页面的布局，字体，颜色，背景和其他效果实现更加精确的控制</p><h4 id="x3D-x3D-（5）Javascript-x3D-x3D-："><a href="#x3D-x3D-（5）Javascript-x3D-x3D-：" class="headerlink" title="&#x3D;&#x3D;（5）Javascript&#x3D;&#x3D;："></a>&#x3D;&#x3D;（5）Javascript&#x3D;&#x3D;：</h4><p>JavaScript使得网页和用户之间实现了一种实时性的，动态的，交互性的关系</p><p>Javascript组成：核心（&#x3D;&#x3D;ECMAScript&#x3D;&#x3D;），文档对象模型（&#x3D;&#x3D;DOM&#x3D;&#x3D;），浏览器对象模型（&#x3D;&#x3D;BOM&#x3D;&#x3D;）</p>]]></content>
      
      
      <categories>
          
          <category> web学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基本使用与方法</title>
      <link href="/2022/11/26/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%96%B9%E6%B3%95/"/>
      <url>/2022/11/26/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>_config.yml：俗称站点配置文件，很多与博客网站的格式、内容相关的设置都需要在里面改。</p><p>node_modules:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。</p><p>package.json：别问我，我也不知道干嘛的。</p><p>scaffolds：模板文件夹，里面的post.md文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。</p><p>source：非常重要。所有的个人文件都在里面！</p><p>themes：主题文件夹，可以从Hexo主题官网或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端的关键！</p><p>接下来重点介绍<code>source</code>文件夹。新建的博客中，<code>source</code>文件夹下默认只有一个子文件夹——<code>_posts</code>。我们写的博客都放在这个子文件夹里面。我们还可以在<code>source</code>里面新建各种子文件夹满足自己的个性化需求，对初学者而言，我们先把精力放在主线任务上，然后再来搞这些细节。</p><p>写好内容后，在命令行一键三连：</p><p>一： <code>hexo cl</code></p><p>二： <code>hexo g</code></p><p>三： <code>hexo s</code></p><p>然后随便打开一个浏览器，在网址栏输入<code>localhost:4000/</code>，就能发现自己的网站更新了！不过这只是在本地进行了更新，要想部署到网上（Github上），输入如下代码：</p><p><code>hexo d</code></p><p>然后在浏览器地址栏输入<code>https://yourname.github.io</code>，或者<code>yourname.github.io</code>就能在网上浏览自己的博客了！</p>]]></content>
      
      
      <categories>
          
          <category> 博客配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础</title>
      <link href="/2022/11/24/Vue%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/11/24/Vue%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="x3D-x3D-Vue简介：-x3D-x3D"><a href="#x3D-x3D-Vue简介：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;Vue简介：&#x3D;&#x3D;"></a>&#x3D;&#x3D;Vue简介：&#x3D;&#x3D;</h3><p><code>JavaScript框架</code></p><p><code>简化Dom操作</code></p><p><code>响应式数据驱动</code></p><h3 id="x3D-x3D-Vue第一个程序：-x3D-x3D"><a href="#x3D-x3D-Vue第一个程序：-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;Vue第一个程序：&#x3D;&#x3D;"></a>&#x3D;&#x3D;Vue第一个程序：&#x3D;&#x3D;</h3><p>(1)<strong>导入开发版本的Vue.js</strong></p><p>(2)<strong>创建Vue实例对象，设置el属性和data属性</strong></p><p>(3)<strong>使用简介的模板语法把数据渲染到页面上</strong></p><p><code>&#123;&#123;&#125;&#125;</code><strong>插值表达式</strong></p><p>###&#x3D;&#x3D;Vue 的 el挂载点:&#x3D;&#x3D;</p><p><code>(1)Vue实例的作用范围</code>：Vue会管理el选项<strong>命中的元素</strong>及其内部的<strong>后代元素</strong></p><p><code>（2）是否可以可以使用其他的选择器：</code>可以使用其他的选择器，但是一般都使用ID选择器</p><p><code>（3）是否可以设置其他的dom元素：</code>可以使用其他的<strong>双标签</strong>，不能使用HTML和body</p><p>###&#x3D;&#x3D;Vue的data数据对象：&#x3D;&#x3D;</p><p>（1）Vue中用到的数据定义在data中</p><p>（2）data中可以写复杂类型的数据</p><p>（3）渲染复杂数据类型时，遵守js的语法即可</p><h3 id="x3D-x3D-v-text-x3D-x3D"><a href="#x3D-x3D-v-text-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-text&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-text&#x3D;&#x3D;</h3><p>作用：设置标签的内容（innerTEXT)</p><p>默认写法v-text会替换全部内容，但是使用<strong>插值表达式</strong><code>&#123;&#123;&#125;&#125;</code>可以替换指定内容</p><p><strong>注意：使用了v-text后标签里的内容不会再改变，只能为v-text的内容</strong></p><p><code>例子：</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;<span class="attribute">content</span>&quot; v-text=&quot;message&quot;&gt; &lt;/<span class="selector-tag">div</span>&gt;      //v-text 的用法</span><br><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;<span class="attribute">content</span>&quot;&gt; </span><br><span class="line">&#123;&#123; message &#125;&#125;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;      // &#123;&#123;&#125;&#125; 的用法</span><br></pre></td></tr></table></figure>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> content = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    el : <span class="string">&#x27;#content&#x27;</span>,</span><br><span class="line">    data : &#123;</span><br><span class="line">        maessage : <span class="string">&#x27;小崔你好呀！&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="x3D-x3D-v-html-x3D-x3D"><a href="#x3D-x3D-v-html-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-html&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-html&#x3D;&#x3D;</h3><p>作用：设置标签的内容（innerHTML)</p><p>内容中又html结构会被解析为标签，但是v-text不会解析html结构只会解析为文本</p><p><strong>注意：使用了v-html后标签里的内容不会再改变，只能为v-html的内容</strong></p><h3 id="x3D-x3D-v-on-x3D-x3D"><a href="#x3D-x3D-v-on-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-on&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-on&#x3D;&#x3D;</h3><p>作用：为元素绑定事件</p><p><strong>注意：事件不需要写on</strong></p><p><code>用法:</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;<span class="attribute">content</span>&quot; v-on:click=<span class="string">&#x27;dd&#x27;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>v-on：可以替换为@</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;<span class="attribute">content</span>&quot; <span class="keyword">@click</span>=&#x27;dd&#x27;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>绑定的方法定义在<strong>methods</strong>属性中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> content = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    el : <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">    methods : &#123;</span><br><span class="line">       dd : <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;hi~~&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>方法内部可以使用this关键字访问定义在data中的数据</p><h3 id="x3D-x3D-v-show-x3D-x3D"><a href="#x3D-x3D-v-show-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-show&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-show&#x3D;&#x3D;</h3><p>作用：根据真假切换元素的显示状态</p><p>原理是修改元素的<strong>dispaly</strong>属性实现元素显示与隐藏</p><p>v-show指令里面的内容最终都会被解析为布尔值，值为true则元素显示，值为false则元素隐藏</p><h3 id="x3D-x3D-v-if-x3D-x3D"><a href="#x3D-x3D-v-if-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-if&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-if&#x3D;&#x3D;</h3><p>作用：根据表达式的真假切换元素的显示状态</p><p>原理是通过操纵dom元素来切换显示状态</p><p>如果表达式的值为true则元素存在与dom树中，值为false则从dom树中移除</p><p><strong>注意:如果是频繁的切换元素状态就使用v-show，反之使用v-if，因为前者的切换消耗小</strong></p><h3 id="x3D-x3D-v-bind-x3D-x3D"><a href="#x3D-x3D-v-bind-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-bind&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-bind&#x3D;&#x3D;</h3><p>作用：为元素设置属性</p><p>用法： v-bind：属性名</p><p>如果使用简写可以直接省略v-bind，只保留：属性名</p><p>###&#x3D;&#x3D;v-for&#x3D;&#x3D;</p><p>作用：根据数据生成<strong>列表</strong>结构（不一定是列表，只是用于生成多个元素）</p><p>数组经常和v-for结合一起使用</p><p>语法：**（item，index） in 数据 **</p><p>item 和 index 可以和其他指令一起使用</p><p>数组长度的更新可以同步到页面上，是响应式的</p><h3 id="x3D-x3D-v-model-x3D-x3D"><a href="#x3D-x3D-v-model-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;v-model&#x3D;&#x3D;"></a>&#x3D;&#x3D;v-model&#x3D;&#x3D;</h3><p>作用：便捷的设置和获取<strong>表单</strong>的值</p><p>绑定的数据会和表单的值相关联</p><p>绑定的数据和表单元素的值是<strong>双向绑定</strong></p>]]></content>
      
      
      <categories>
          
          <category> Vue学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
